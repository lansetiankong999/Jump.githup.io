<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BLOG</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kongxianghe.top/"/>
  <updated>2018-07-09T06:15:56.251Z</updated>
  <id>http://kongxianghe.top/</id>
  
  <author>
    <name>Kongxiang He</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://kongxianghe.top/2018/10/23/javascript%E5%89%8D%E7%AB%AF%E8%84%9A%E6%9C%AC%E6%8A%80%E6%9C%AF/"/>
    <id>http://kongxianghe.top/2018/10/23/javascript前端脚本技术/</id>
    <published>2018-10-23T14:06:03.507Z</published>
    <updated>2018-07-09T06:15:56.251Z</updated>
    
    <content type="html"><![CDATA[<h1 id="javascript前端脚本技术"><a href="#javascript前端脚本技术" class="headerlink" title="javascript前端脚本技术"></a>javascript前端脚本技术</h1><p><strong>今日内容</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">1、JavaScript概述</span><br><span class="line">简介</span><br><span class="line">作用</span><br><span class="line">发展史</span><br><span class="line">2、JavaScript数据类型</span><br><span class="line">声明变量</span><br><span class="line">基本类型</span><br><span class="line">引用类型(JSON)</span><br><span class="line">数组类型</span><br><span class="line">3、JavaScript运算符</span><br><span class="line">算术运算符</span><br><span class="line">关系运算符</span><br><span class="line">逻辑运算符</span><br><span class="line">4、JavaScript条件语句</span><br><span class="line">if结构</span><br><span class="line">switch结构</span><br><span class="line">5、JavaScript循环语句</span><br><span class="line">for结构</span><br><span class="line">while结构</span><br><span class="line">do while结构</span><br><span class="line">break和continue</span><br><span class="line">6、JavaScript弹窗函数</span><br><span class="line">alert()</span><br><span class="line">confirm()</span><br><span class="line">prompt()</span><br><span class="line">7、JavaScript事件函数</span><br><span class="line">onchange()</span><br><span class="line">onclick()</span><br><span class="line">onmouseover()</span><br><span class="line">onmouseout()</span><br><span class="line">onkeydown()</span><br><span class="line">onkeyup()</span><br><span class="line">onload()</span><br><span class="line">onfocus()</span><br><span class="line">onblur()</span><br><span class="line">8、JavaScript事件冒泡</span><br><span class="line">stopPropagation()</span><br><span class="line">9、JavaScript自定义函数</span><br><span class="line">function 函数名(参数)&#123;&#125;</span><br><span class="line">对像.事件=function()&#123;&#125;</span><br><span class="line">10、JavaScript正则表达式</span><br><span class="line">创建正则表达式方式</span><br><span class="line">正则表达式规则</span><br><span class="line">正则表达式方法</span><br><span class="line">支持正则表达式相关String方法</span><br><span class="line">正则表达式使用</span><br><span class="line">11、JavaScript:void(0)用法</span><br><span class="line">12、JavaScript阻止默认事件</span><br><span class="line">preventDefault()</span><br><span class="line">13、作业</span><br></pre></td></tr></table></figure><p><strong>一.JavaScript概述</strong><br>    简介:</p><p>​        是前端脚本语言,弱类型语言,具有一些特定的对像的语言,内嵌式语言,JavaScript解析器称javaScipt引擎,引擎是浏览器的一部份,所以浏览器可以直接解析javascript</p><p>​    作用:</p><p>​        可以控制网元素,可以做出更煊的动态网页效果</p><p>​    发展史:</p><p>​        netScape: javascript</p><p>​        microsoft: JScript</p><p>​        CEnvi: scriptEase</p><p>​    ECMA(欧洲计算机制造商协会):制定了前端脚本技术的规范,把前面三种技术统一.所以现在脚本也可称作为ECMAScript</p><p><strong>二.Javascript的使用</strong></p><p>​    1.使用规则:请把Javascript语句写标签<script type="text/javascript">脚本语言</script>中</p><p>​    <script></script>标签可以放在head标签中</p><p>​                    ,也可以放在body标签中,</p><p>​                    也在html标签中,</p><p>​                    也可以放在html标签之后</p><p>​    其中type类型属性,指浏览器会使用JS解析器解析该标签中的文本</p><p>==注意:为了提高文档加载效率,script标签一般放在html之后书写==</p><p><strong>三. JavaScript数据类型</strong></p><p>1.声明变量:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var i;</span><br><span class="line">var j,k;</span><br><span class="line">var a = 1;</span><br><span class="line">var b = new number(1);</span><br></pre></td></tr></table></figure><p>2.基本类型:number,String,null,undefined,Date,Array,Object等</p><p>３.数组类型:和java一致,但创建时,数组长度可有可无.</p><p>​    注意:JS中没有集合类型,</p><p>​    数组下标从0开始.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var arr = new Array();</span><br><span class="line">//创建长度为5数组</span><br><span class="line">var arr2 = new Array(5);</span><br><span class="line">//先声明后付值</span><br><span class="line">var arr3 = new Array();</span><br><span class="line">arr3[0] = 1;</span><br><span class="line">//创建数组的同时付值</span><br><span class="line">var arr4 = [1,2,3,4];</span><br><span class="line">var arr5 = new Array(1,2,3,4);</span><br><span class="line">//取值</span><br><span class="line">var i = arr4[0]取出的值为1</span><br></pre></td></tr></table></figure><pre><code>4. 引用类型(JSON:javascript object notation):JS对像标记</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public class User&#123;</span><br><span class="line">    </span><br><span class="line">    private String username;</span><br><span class="line">    private String password;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">//java中对对像的描述</span><br><span class="line">User user = new User();</span><br></pre></td></tr></table></figure><p>JS中怎么描述对像呢????</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">是通key:value形式描述对像的属性</span><br><span class="line">//key要使用引号(单引号|双引号),value如果是数值或引用类型则不加引号,如果字符串请使用用引号引起来.</span><br><span class="line">var user = &#123;&apos;username&apos;:&apos;admin&apos;,&apos;password&apos;:&apos;1234&apos;&#125;;</span><br></pre></td></tr></table></figure><p>JS中怎么描述一组对像???</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var users = &#123;</span><br><span class="line">&quot;user1&quot;:&#123;&apos;username&apos;:&apos;admin&apos;,&apos;password&apos;:&apos;1234&apos;&#125;&quot;,</span><br><span class="line">&quot;user2&quot;:&#123;&apos;username&apos;:&apos;user&apos;,&apos;password&apos;:&apos;1234&apos;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//取值</span><br><span class="line">alert(users.user1.username)</span><br></pre></td></tr></table></figure><p>数组中包含JSON数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var users2 = [&#123;&apos;username&apos;:&apos;admin&apos;,&apos;password&apos;:&apos;1234&apos;&#125;,&#123;&apos;username&apos;:&apos;user&apos;,&apos;password&apos;:&apos;1234&apos;&#125;];</span><br><span class="line"></span><br><span class="line">alert(users2[0].username)</span><br></pre></td></tr></table></figure><p>JSON中包含数组类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">／／学校中的班级和学生</span><br><span class="line">var grade = &#123;</span><br><span class="line"></span><br><span class="line">&quot;class1&quot;:[&#123;&apos;username&apos;:&apos;admin&apos;,&apos;password&apos;:&apos;1234&apos;&#125;,&#123;&apos;username&apos;:&apos;user&apos;,&apos;password&apos;:&apos;1234&apos;&#125;],</span><br><span class="line">&quot;class2&quot;:[&#123;&apos;username&apos;:&apos;张三&apos;,&apos;password&apos;:&apos;1234&apos;&#125;,&#123;&apos;username&apos;:&apos;李四&apos;,&apos;password&apos;:&apos;1234&apos;&#125;],</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">alert(grade.class1[0].username)</span><br></pre></td></tr></table></figure><p><strong>四．JavaScript运算符</strong></p><p>​    １.算术运算符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">＋</span><br><span class="line">－　</span><br><span class="line">＊</span><br><span class="line">／</span><br><span class="line">％</span><br><span class="line">++</span><br><span class="line">--</span><br><span class="line">+=</span><br><span class="line">-=</span><br><span class="line">*=</span><br><span class="line">/=</span><br><span class="line">%=</span><br></pre></td></tr></table></figure><p>​    2.关系运算符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;</span><br><span class="line">&gt;=</span><br><span class="line">&lt;</span><br><span class="line">&lt;=</span><br><span class="line">a&gt;b?a:b</span><br><span class="line">== 值相等</span><br><span class="line">===恒等即值相等且类型相等</span><br><span class="line">可以使用typeof(变量),可以获取变量的类型</span><br></pre></td></tr></table></figure><p>​    3.逻辑运算符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&amp;</span><br><span class="line">|</span><br><span class="line">!</span><br><span class="line"></span><br><span class="line">&amp;&amp;</span><br><span class="line">||</span><br><span class="line">!</span><br></pre></td></tr></table></figure><p><strong>五.JavaScript条件语句</strong><br>    1.if结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">//if结构</span><br><span class="line">if()&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//if..else结构</span><br><span class="line">if()&#123;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;else&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//if...else if...else结构</span><br><span class="line">if()&#123;</span><br><span class="line">    </span><br><span class="line">&#125;else if()&#123;</span><br><span class="line">    </span><br><span class="line">&#125;else&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    2.switch结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">switch()&#123;</span><br><span class="line">    </span><br><span class="line">    case 1:</span><br><span class="line">    break;</span><br><span class="line">    case 2:</span><br><span class="line">    break;</span><br><span class="line">    default:</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>六.JavaScript循环语句</strong></p><p>​    1.for结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//基本for结构</span><br><span class="line">for(var i = 0;i&lt;10;i++)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">//forEach迭代</span><br><span class="line">//注意,这里i指下标</span><br><span class="line">for(var i in JOSN或数组)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">var arr = [1,2,3,4];</span><br><span class="line"></span><br><span class="line">for(var i in arr)&#123;</span><br><span class="line">alert(arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>​    2.while结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">while()&#123;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    3.do while结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">do&#123;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;while();</span><br></pre></td></tr></table></figure><p>​    4.break和continue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">break:跳转出当前循环体</span><br><span class="line">continue:加速循环</span><br></pre></td></tr></table></figure><p><strong>课堂练习</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.write(内容)写入文档</span><br></pre></td></tr></table></figure><p><img src="D:\JAVAEE教案\JAVAEE笔记\第3天 javaScript脚本\笔记\1.PNG" alt="1.png"></p><p><strong>七.JavaScript弹窗函数</strong><br>    1.alert(内容)  :弹出框架<br>    2.confirm(参数1): 确认框</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * 返回值为boolean值</span><br><span class="line"> */</span><br><span class="line">var ret = confirm(&quot;确认退出吗&quot;);</span><br><span class="line"></span><br><span class="line">alert(ret)</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>​    3.prompt(参数1) : 提示框</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * 返回值为提示框输入的内容</span><br><span class="line"> */</span><br><span class="line">var info = prompt(&quot;请输入值:&quot;);</span><br><span class="line"></span><br><span class="line">alert(info)</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>八.JavaScript事件函数</strong></p><p>​    1.onchange():文本内容发生改变事件</p><p>​    2.onclick():鼠标单击事件</p><p>​    3.onmouseover() :鼠标移入事件</p><p>​    4.onmouseout() :鼠标移出事件</p><p>​    5.onkeydown() :键盘键被按下事件</p><p>​    6.onkeyup() :键盘键抬起事件</p><p>​    7.onkeypress():键盘按下并抬起事件</p><p>​    8.onload() : 文档加载完毕事件,只能放在body标签中</p><p>​    9. onfocus(): 获得焦点事件</p><p>​    10.onblur():失去焦点事件</p><p><strong>九.JavaScript自定义函数</strong></p><ol><li>==function 函数名(参数){ 操作code….}==    </li></ol><p>​    函数是你想要做的事情,通常和事件一起联用</p><p>注意:代码放入自定义函数中,该代码段不会随着html文档加载而执行,其执行的时机是该函数被调用.</p><p>一般函数会被激发的事件而调用</p><p>调用语法:</p><p>​    ==事件名=”函数名()”;==</p><p>事件通常放在标签之中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//JS代码</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">function doWriter()&#123;</span><br><span class="line">alert(&quot;控件被点击&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;input type=&quot;button&quot;  id=&quot;btn&quot; value=&quot;点击&quot; onclick=&quot;doWriter()&quot;/&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>==标签对像.事件=function(){}==</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;d2&quot;&gt;div2&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">//注意，该js代码写在html后面，如果写在head标签中，请放在onload事件中使用，否则，div标签将获取不到</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">//JS会把html文档中的标签抽像成JS的对像</span><br><span class="line">//getElementById(&quot;标签的ID&quot;),根据标签的ID获取该标签对像</span><br><span class="line">var d2 = document.getElementById(&quot;d2&quot;);</span><br><span class="line">//d2标签被点击要做的事情是????</span><br><span class="line">d2.onclick = function()&#123;</span><br><span class="line">alert(&quot;div2被点击&quot;)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol><p><strong>十.JavaScript事件冒泡</strong></p><p>表示子类标签事件被触发时，同时也触发父类标签相同的事件，这个过程叫冒泡</p><p>表示父类标签事件被触发时，同时也触发子类标签相同的事件，这个过程叫捕获</p><p>阻止事件冒泡的通常做法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">#d1&#123;</span><br><span class="line">width:300px;</span><br><span class="line">height: 300px;</span><br><span class="line">background: blue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#d2&#123;</span><br><span class="line">width:100px;</span><br><span class="line">height: 100px;</span><br><span class="line">background: green;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=&quot;d1&quot; onclick=&quot;dothing()&quot;&gt;</span><br><span class="line">&lt;div id=&quot;d2&quot; onclick=&quot;dothing2()&quot;&gt;</span><br><span class="line">div</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">//JS代码</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">function dothing()&#123;</span><br><span class="line">alert(&quot;父类div被点击&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function dothing2()&#123;</span><br><span class="line">alert(&quot;子类div被点击&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//给标签加监听，以监听到某个事件的执行，恰当去阻止不想被触发的事件执行</span><br><span class="line">var div2 = document.getElementById(&quot;d2&quot;);</span><br><span class="line">//注意：false表示事件由子到父传播，true表示由父到子传播，监听的事件名称都去掉on前缀</span><br><span class="line">div2.addEventListener(&quot;click&quot;,function(e)&#123;</span><br><span class="line">//阻止冒泡,即组止事件向上传播</span><br><span class="line">e.stopPropagation();</span><br><span class="line"></span><br><span class="line">&#125;,false)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>十一.JS正则表达式</strong></p><p>==作用：使用正则表达式来书写校验规则，一般用作表单提交时的数据校验==</p><ol><li><p>正则表达式创建方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.创建方式一</span><br><span class="line">var reg = new RegExp(&quot;表达式字符串&quot;)</span><br><span class="line"></span><br><span class="line">2.创建方式二</span><br><span class="line">var reg2 = /^表达式字符串$/;</span><br></pre></td></tr></table></figure><p>​</p></li><li><p>正则表达式规则</p><p><strong>修饰符</strong></p><p>修饰符用于执行区分大小写和全局匹配:</p><p>| 修饰符                                                   | 描述                                                     |<br>| ——————————————————– | ——————————————————– |<br>| <a href="http://www.w3school.com.cn/jsref/jsref_regexp_i.asp" target="_blank" rel="noopener">i</a> | 执行对大小写不敏感的匹配。（不区分大小写）               |<br>| <a href="http://www.w3school.com.cn/jsref/jsref_regexp_g.asp" target="_blank" rel="noopener">g</a> | 执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。 |<br>| m                                                        | 执行多行匹配。                                           |</p><p><strong>方括号</strong></p><p>方括号用于查找某个范围内的字符：</p><p>| 表达式                                                       | 描述                               |<br>| ———————————————————— | ———————————- |<br>| <a href="http://www.w3school.com.cn/jsref/jsref_regexp_charset.asp" target="_blank" rel="noopener">[abc]</a> | 查找方括号之间的任何字符。         |<br>| <a href="http://www.w3school.com.cn/jsref/jsref_regexp_charset_not.asp" target="_blank" rel="noopener">[^abc]</a> | 查找任何不在方括号之间的字符。     |<br>| [0-9]                                                        | 查找任何从 0 至 9 的数字。         |<br>| [a-z]                                                        | 查找任何从小写 a 到小写 z 的字符。 |<br>| [A-Z]                                                        | 查找任何从大写 A 到大写 Z 的字符。 |<br>| [A-z]                                                        | 查找任何从大写 A 到小写 z 的字符。 |<br>| [adgk]                                                       | 查找给定集合内的任何字符。         |<br>| [^adgk]                                                      | 查找给定集合外的任何字符。         |<br>| (red|blue|green)                                           | 查找任何指定的选项。               |</p><p><strong>元字符</strong></p><p>元字符（Metacharacter）是拥有特殊含义的字符：</p><p>| 元字符                                                       | 描述                                        |<br>| ———————————————————— | ——————————————- |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-dot.html" target="_blank" rel="noopener">.</a>       | 查找单个字符，除了换行/n和行结束符/r.       |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-wordchar.html" target="_blank" rel="noopener">\w</a> | 查找单词字符。[ASCALL表中字符]？            |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-wordchar-non.html" target="_blank" rel="noopener">\W</a> | 查找非单词字符。[非ASCALL表中字符]？        |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-digit.html" target="_blank" rel="noopener">\d</a>    | 查找数字。相当于[0-9]                       |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-digit-non.html" target="_blank" rel="noopener">\D</a> | 查找非数字字符。[ ^ 0-9 ]                   |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-whitespace.html" target="_blank" rel="noopener">\s</a> | 查找空白字符。                              |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-whitespace-non.html" target="_blank" rel="noopener">\S</a> | 查找非空白字符。                            |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-begin.html" target="_blank" rel="noopener">\b</a>    | 匹配单词边界。                              |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-begin-not.html" target="_blank" rel="noopener">\B</a> | 匹配非单词边界。                            |<br>| \0                                                           | 查找 NULL 字符。                            |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-newline.html" target="_blank" rel="noopener">\n</a>  | 查找换行符。                                |<br>| \f                                                           | 查找换页符。                                |<br>| \r                                                           | 查找回车符。                                |<br>| \t                                                           | 查找制表符。                                |<br>| \v                                                           | 查找垂直制表符。                            |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-octal.html" target="_blank" rel="noopener">\xxx</a>  | 查找以八进制数 xxx 规定的字符。             |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-hex.html" target="_blank" rel="noopener">\xdd</a>    | 查找以十六进制数 dd 规定的字符。            |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-unicode-hex.html" target="_blank" rel="noopener">\uxxxx</a> | 查找以十六进制数 xxxx 规定的 Unicode 字符。 |</p><p><strong>量词</strong></p><p>| 量词                                                         | 描述                                                         |<br>| ———————————————————— | ———————————————————— |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-onemore.html" target="_blank" rel="noopener">n+</a>  | 匹配任何包含至少一个 n 的字符串。例如，/a+/ 匹配 “candy” 中的 “a”，”caaaaaaandy” 中所有的 “a”。 |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-zeromore.html" target="_blank" rel="noopener">n*</a> | 匹配任何包含零个或多个 n 的字符串。例如，/bo*/ 匹配 “A ghost booooed” 中的 “boooo”，”A bird warbled” 中的 “b”，但是不匹配 “A goat grunted”。 |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-zeroone.html" target="_blank" rel="noopener">n?</a>  | 匹配任何包含零个或一个 n 的字符串。例如，/e?le?/ 匹配 “angel” 中的 “el”，”angle” 中的 “le”。 |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-nx.html" target="_blank" rel="noopener">n{X}</a>     | 匹配包含 X 个 n 的序列的字符串。例如，/a{2}/ 不匹配 “candy,” 中的 “a”，但是匹配 “caandy,” 中的两个 “a”，且匹配 “caaandy.” 中的前两个 “a”。 |<br>| n{X,}                                                        | 匹配包含至少 X 个 n 的序列的字符串。X 是一个正整数。前面的模式 n 连续出现至少 X 次时匹配。例如，/a{2,}/ 不匹配 “candy” 中的 “a”，但是匹配 “caandy” 和 “caaaaaaandy.” 中所有的 “a”。 |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-nxy.html" target="_blank" rel="noopener">n{X,Y}</a>  | X 和 Y 为正整数。前面的模式 n 连续出现至少 X 次，至多 Y 次时匹配。例如，/a{1,3}/ 不匹配 “cndy”，匹配 “candy,” 中的 “a”，”caandy,” 中的两个 “a”，匹配 “caaaaaaandy” 中的前面三个 “a”。注意，当匹配 “caaaaaaandy” 时，即使原始字符串拥有更多的 “a”，匹配项也是 “aaa”。 |<br>|                                                              |                                                              |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-ndollar.html" target="_blank" rel="noopener">n$</a>  | 匹配任何结尾为 n 的字符串。                                  |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-ncaret.html" target="_blank" rel="noopener">^n</a>   | 匹配任何开头为 n 的字符串。                                  |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-nfollow.html" target="_blank" rel="noopener">?=n</a> | 匹配任何其后紧接指定字符串 n 的字符串。                      |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-nfollow-not.html" target="_blank" rel="noopener">?!n</a> | 匹配任何其后没有紧接指定字符串 n 的字符串。                  |</p></li><li><p>正则表达式方法</p><p><strong>RegExp 对象方法</strong></p><p>==test()方法重要==</p><p>| 方法                                                         | 描述                                               | FF   | IE   |<br>| ———————————————————— | ————————————————– | —- | —- |<br>| <a href="http://www.runoob.com/jsref/jsref-regexp-compile.html" target="_blank" rel="noopener">compile</a> | 编译正则表达式。                                   | 1    | 4    |<br>| <a href="http://www.runoob.com/jsref/jsref-exec-regexp.html" target="_blank" rel="noopener">exec</a>   | 检索字符串中指定的值。返回找到的值，并确定其位置。 | 1    | 4    |<br>| <a href="http://www.runoob.com/jsref/jsref-test-regexp.html" target="_blank" rel="noopener">test</a>   | 检索字符串中指定的值。返回 true 或 false。         | 1    | 4    |</p></li><li><p>支持正则表达式String 方法</p><p>| 方法                                                   | 描述                             | FF   | IE   |<br>| —————————————————— | ——————————– | —- | —- |<br>| <a href="http://www.runoob.com/js/jsref-search.html" target="_blank" rel="noopener">search</a>   | 检索与正则表达式相匹配的值。     | 1    | 4    |<br>| <a href="http://www.runoob.com/js/jsref-match.html" target="_blank" rel="noopener">match</a>     | 找到一个或多个正则表达式的匹配。 | 1    | 4    |<br>| <a href="http://www.runoob.com/js/jsref-replace.html" target="_blank" rel="noopener">replace</a> | 替换与正则表达式匹配的子串。     | 1    | 4    |<br>| <a href="http://www.runoob.com/js/jsref-split.html" target="_blank" rel="noopener">split</a>     | 把字符串分割为字符串数组。       | 1    | 4    |</p></li><li><p>正则表达式使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">  //0到9开始，0-9结尾，任意一个字符必须是0-9之间，也可以这样理解，其他字符必须是0-9，且最少出现一次</span><br><span class="line"></span><br><span class="line">var num = prompt(&quot;请输入数字!&quot;);</span><br><span class="line">//验证输入的是数字，结果返回true,否则返回false</span><br><span class="line">var reg = /^[0-9]+$/;</span><br><span class="line">var flag=reg.test(num);</span><br><span class="line">alert(flag);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">//手机号码必须是130开头，11位，数字</span><br><span class="line">var num = prompt(&quot;请输入电话!&quot;);</span><br><span class="line">var reg = /^130[0-9]&#123;8&#125;$/</span><br><span class="line">var flag=reg.test(num);</span><br><span class="line">alert(flag)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">//邮箱验证 1.用户名A-z0-9组成最少4位最多10位,出现@符号，</span><br><span class="line">//域名A-z0-9组成最少2位，最多10位，域名后缀.com|.cn|(.com.cn)</span><br><span class="line"></span><br><span class="line">var num = prompt(&quot;请输入邮箱!&quot;);</span><br><span class="line"></span><br><span class="line">var reg = /^[A-z0-9]&#123;4,10&#125;@[A-z0-9]&#123;2,10&#125;(.com|.cn|(.com.cn))$/</span><br><span class="line"></span><br><span class="line">var flag=reg.test(num);</span><br><span class="line"></span><br><span class="line">alert(flag)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>十二 .JavaScript:void(0)用法</strong></p><p>​</p><p>​</p><p><strong>十三.JavaScript阻止默认事件</strong></p><p>​</p><p>​</p><p><strong>十四.作业</strong></p><p>​    1.使用正则表达式验证年纪必须在[0-120]之间。</p><p>​    2.使用正则表达式验证：用户名 必须是字母(大小写)开头,可以有数字和下划线 限制5-8位，不能为空</p><p>​</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;javascript前端脚本技术&quot;&gt;&lt;a href=&quot;#javascript前端脚本技术&quot; class=&quot;headerlink&quot; title=&quot;javascript前端脚本技术&quot;&gt;&lt;/a&gt;javascript前端脚本技术&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;今日内容&lt;/
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://kongxianghe.top/2018/10/23/CSS%E6%A0%B7%E5%BC%8F%E8%A1%A8/"/>
    <id>http://kongxianghe.top/2018/10/23/CSS样式表/</id>
    <published>2018-10-23T14:06:03.503Z</published>
    <updated>2018-07-09T06:15:57.315Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS样式表"><a href="#CSS样式表" class="headerlink" title="CSS样式表"></a>CSS样式表</h1><p><strong>今日内容</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">1、CSS简介</span><br><span class="line">概念</span><br><span class="line">作用</span><br><span class="line">语法规范</span><br><span class="line">2、CSS导入方式</span><br><span class="line">行内样式</span><br><span class="line">内部样式</span><br><span class="line">外部样式</span><br><span class="line">3、CSS选择器</span><br><span class="line">基本选择器</span><br><span class="line">属性选择器</span><br><span class="line">层级选择器</span><br><span class="line">并集选择器</span><br><span class="line">伪选择器</span><br><span class="line">4、CSS属性</span><br><span class="line">文字属性</span><br><span class="line">文本属性</span><br><span class="line">背景属性</span><br><span class="line">列表属性</span><br><span class="line">尺寸属性</span><br><span class="line">显示属性</span><br><span class="line">轮廓属性</span><br><span class="line">浮动属性</span><br><span class="line">清除浮动</span><br><span class="line">5、CSS盒子模型</span><br><span class="line">概念</span><br><span class="line">边框属性</span><br><span class="line">内边距属性</span><br><span class="line">外边距属性</span><br><span class="line">6. 盒子定位及Z-index属性</span><br><span class="line">position属性</span><br><span class="line">z-index属性</span><br><span class="line">7、CSS扩展属性（CSS3）</span><br><span class="line">border-radius圆角属性</span><br><span class="line">box-shadow阴影属性</span><br><span class="line">background-size背景尺寸属性</span><br><span class="line">background-image背图片属性</span><br><span class="line">text-shadow文本阴影属性</span><br><span class="line">8、选择器优先级及样式引入的优先级</span><br><span class="line">选择器优先级</span><br><span class="line">引入方式优先级</span><br><span class="line">9、案例</span><br><span class="line">10、作业</span><br></pre></td></tr></table></figure><p>一.<strong>CSS简介</strong></p><p>1,概念:级联样式表或层叠样式表(Cascading style sheets)</p><p>2.作用:==修饰网页标签元素.渲染网页==</p><p>3.优点:</p><p>​    可以渲染网页,使用网页呈现良好的效果</p><p>​    外部样式表可以复用</p><p>​    容易修改,可以扩展</p><p>4.语法规范</p><p>​    W3C:(world wide web) 中立性的web技术规范的制定者,CSS只是其中的一项技术规范</p><p>​    <a href="http://www.w3school.com.cn/" target="_blank" rel="noopener">http://www.w3school.com.cn/</a></p><p>​    <img src="D:\JAVAEE教案\JAVA笔记\第2天 CSS样式表\笔记\1.PNG" alt="1.jpg"></p><p>​    ==选择器:选中的一个或一组标签==</p><p>​    ==声明:key :value 其中key表示属性,value表示属性的值==</p><p>​    注意:声明和声明之间请用分号分隔</p><p>二.<strong>CSS导入方式</strong></p><p>​    行内样式:</p><p>​        样式写在标签元素中style属性之中 ,style=”声明1;声明2….”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p style=&quot;color: green;font-size: 20px;&quot;&gt;中华人民共和国3&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>​    ==内部样式:==</p><p>​        在<head></head>使用<style>标签,所有样式都写在<style>标签之中</p><p>​        其中style标签中type=”test/css” 属性的作用:告诉浏览器使用CSS样式解析器解析style标签里面的样式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;!--内部样式--&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">/*style标签内注释:内部样式*/</span><br><span class="line">h1&#123;</span><br><span class="line">color: red;</span><br><span class="line">font-size:24px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure><p>​    ==外部样式:==</p><p>​    把样式单独写在一样独立的文件中,文件以.css为后缀.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">span&#123;</span><br><span class="line">color: yellow;</span><br><span class="line">font-size: 18px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    要在html文档中使用link标签引入外部样式表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--引入外部样式表--&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css/style.css&quot;/&gt;</span><br><span class="line">其中rel:引入样式表</span><br><span class="line">type:使用CSS解析器解析这段文本</span><br><span class="line">href:引入外部链接,这里面指外部样式表的路径</span><br></pre></td></tr></table></figure><p>三.<strong>选择器</strong></p><p>作用:选中要修饰的标签元素.</p><p><strong>1.基本选择器:</strong></p><p>​    ==ID选择器==: 给标签设置ID属性,通过ID属性寻找到该标签来加以修饰</p><p>​    语法结构:#id值{声明1;声明2….}</p><p>​    注意:ID属性在该Html文档中值要唯一</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">#myh2&#123;</span><br><span class="line">color: red;</span><br><span class="line">font-size: 10px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;h2 id=&quot;myh2&quot;&gt;中华人民共和国5&lt;/h2&gt;</span><br></pre></td></tr></table></figure><p>​    ==类选择器:==class选择器,给标签设置class属性,把这些标签看成一类标签来加以修饰</p><p>​    语法结构:   .class值{声明1;声明2….}</p><p>​    注意:class属性在html文档中可以出现多次</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">.mycla&#123;</span><br><span class="line">        color: red;</span><br><span class="line">    font-size: 10px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;h1 class=&quot;mycla&quot;&gt;中华人民共和国&lt;/h1&gt;</span><br><span class="line">&lt;h1 class=&quot;mycla&quot;&gt;中华人民共和国2&lt;/h1&gt;</span><br><span class="line">&lt;h2 class=&quot;mycla&quot;&gt;中华人民共和国5&lt;/h2&gt;</span><br></pre></td></tr></table></figure><p>​    ==标签选择器:==通过标签名来选中一组标签</p><p>​    语法结构: 标签名{声明1;声明2….}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">h1 &#123;</span><br><span class="line">        color: red;</span><br><span class="line">    font-size: 10px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;h1&gt;中华人民共和国&lt;/h1&gt;</span><br><span class="line">&lt;h1&gt;中华人民共和国2&lt;/h1&gt;</span><br></pre></td></tr></table></figure><p><strong>2.属性选择器:</strong></p><p>​    语法结构:  标签名[属性=’属性值’]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">选中myp属性的标签</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">/*属性选择器</span><br><span class="line">语法规则:标签名[属性=&apos;属性值&apos;]</span><br><span class="line"> * */</span><br><span class="line"></span><br><span class="line">p[name=&apos;myp&apos;]&#123;</span><br><span class="line"></span><br><span class="line">color: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;p name=&quot;myp&quot;&gt;p&lt;/p&gt;</span><br><span class="line">&lt;p name=&quot;yourp&quot;&gt;p2&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>​    语法结构二:标签名[属性] 可以选中一组标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">* 属性选择器二:</span><br><span class="line">* 只通过标签名 属性名选中标签</span><br><span class="line">* 语法结构:标签名[属性名]</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">p[name]&#123;</span><br><span class="line">color:red</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;p name=&quot;myp&quot;&gt;p&lt;/p&gt;</span><br><span class="line">&lt;p name=&quot;yourp&quot;&gt;p2&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>​    语法结构三:标签名省略 只通过[属性]来选中一组标签,也可以[属性=’属性值’]来选中一组标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">* 属性选择器三:</span><br><span class="line">* 只通过属性名选中标签</span><br><span class="line">* 语法结构:[属性名]</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">[name]&#123;</span><br><span class="line">color:red</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;p name=&quot;myp&quot;&gt;p&lt;/p&gt;</span><br><span class="line">&lt;p name=&quot;yourp&quot;&gt;p2&lt;/p&gt;</span><br></pre></td></tr></table></figure><p><strong>3.层级选择器</strong></p><p>​    语法结构:选择器1  选择器2  …..{声明1;声明2….}</p><p>​    注意:选择1和选择器2之间需要有空格,表示先选中选择器1的标签,然后通过选对器2选中其后代标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">/*</span><br><span class="line"> * 层级选择器</span><br><span class="line"> * 选中id=div1标签中的li,而id=div2标签中的li不会被选中</span><br><span class="line"> */</span><br><span class="line">#div1 li&#123;</span><br><span class="line">color: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;li 11&lt;/li&gt;</span><br><span class="line">&lt;li&gt;li 12&lt;/li&gt;</span><br><span class="line">&lt;li&gt;li 13&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div2&quot;&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;li 21&lt;/li&gt;</span><br><span class="line">&lt;li&gt;li 22&lt;/li&gt;</span><br><span class="line">&lt;li&gt;li 23&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><strong>4.并集选择器</strong></p><p>​    语法结构:选择器1 , 选择器2  …..{声明1;声明2….}</p><p>​    注意:选择器1和选择器2…中间要用逗号隔开,表示即选中选择器1的标签,也选中选择器2的标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">/*</span><br><span class="line"> * 并集选择器</span><br><span class="line"> * id为div1和div2的标签同时会被选中</span><br><span class="line"> */</span><br><span class="line">#div1,#div2&#123;</span><br><span class="line">color: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;li 11&lt;/li&gt;</span><br><span class="line">&lt;li&gt;li 12&lt;/li&gt;</span><br><span class="line">&lt;li&gt;li 13&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div2&quot;&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;li 21&lt;/li&gt;</span><br><span class="line">&lt;li&gt;li 22&lt;/li&gt;</span><br><span class="line">&lt;li&gt;li 23&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><strong>5.伪选择器</strong></p><p>​        ==a标签的几个同生状态标签==</p><p>​        a:link</p><p>​            原始状态a标签</p><p>​        a:hover</p><p>​            鼠标放在a标签之上,这时的状态</p><p>​        a:active</p><p>​            击活链接以后,这时的状态</p><p>​        a:visited</p><p>​            a标签被访问后的,这时的状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">/*</span><br><span class="line"> * a链结没被访问时的状态</span><br><span class="line"> */</span><br><span class="line">a:link&#123;color: yellow;&#125;</span><br><span class="line">/*</span><br><span class="line"> * 鼠标悬停时的状态</span><br><span class="line"> */</span><br><span class="line">a:hover&#123;color:blue;&#125;</span><br><span class="line">/*</span><br><span class="line"> * 鼠标点击击活时的状态</span><br><span class="line"> */</span><br><span class="line">a:active&#123;color:red;&#125;</span><br><span class="line">/*</span><br><span class="line"> * 访问过已后的状态</span><br><span class="line"> */</span><br><span class="line">a:visited&#123;color:gray&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;a href=&quot;##&quot;&gt;点击我&lt;/a&gt;</span><br></pre></td></tr></table></figure><p><strong>四.CSS中的各种修饰属性</strong></p><p>​    1.文字属性(font):    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">/*</span><br><span class="line"> * font-family字体种类:宋体,黑体等</span><br><span class="line"> * font-size:表示字体大小,一般以px像素设置</span><br><span class="line"> * inherit从父级标签继承属性</span><br><span class="line"> * light:细字体</span><br><span class="line"> * normal:正常字体</span><br><span class="line"> * bold:加粗字体</span><br><span class="line"> * font-style:字体样式,如斜体</span><br><span class="line"> * normal:正常字体</span><br><span class="line"> * italic:斜体</span><br><span class="line"> * oblique:斜体,从呈现形式上与italic没有区别</span><br><span class="line"> * </span><br><span class="line"> * font-stretch:字体间的间距(css2.1以后废弃)</span><br><span class="line"> * condensed:间距紧密</span><br><span class="line"> * expanded:间距松散</span><br><span class="line"> * normal:间距正常</span><br><span class="line"> * narrower:间距较窄</span><br><span class="line"> * semi- 半</span><br><span class="line"> * </span><br><span class="line"> * font-variant:设置字体大小写</span><br><span class="line"> * </span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">p&#123;</span><br><span class="line">font-family:&quot;微软雅黑&quot;;</span><br><span class="line">font-size: 24px;</span><br><span class="line">font-weight: bolder;</span><br><span class="line">font-style:oblique;</span><br><span class="line">font-stretch:expanded;</span><br><span class="line">font-variant: all-small-caps;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;p&gt;我是Paragraphy&lt;/p&gt;</span><br><span class="line">&lt;p&gt;我是Paragraphy2&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>​        font的简写方式:</p><p>​        ==注意:属性值的声明顺序==</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> *可以省略键,只 写值的方式来声明样式</span><br><span class="line"> * 可以按顺序设置如下属性：</span><br><span class="line">font-style</span><br><span class="line">font-variant</span><br><span class="line">font-weight</span><br><span class="line">font-size/line-height</span><br><span class="line">font-family</span><br><span class="line"> */</span><br><span class="line">p&#123;</span><br><span class="line">font:italic bolder 24px &quot;微软雅黑&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>​    <strong>2.文本属性(text):</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * text-align:文本的水平对齐方式</span><br><span class="line"> * left 居左(默认)</span><br><span class="line"> * center 居中</span><br><span class="line"> * right 居右</span><br><span class="line"> * text-indent: 文本缩进,一般以em字符作为后缀</span><br><span class="line"> * 也可以使用%表示缩进,如10%</span><br><span class="line"> * </span><br><span class="line"> * text-decoration:文本修饰</span><br><span class="line"> * line-through中划线</span><br><span class="line"> * overline 上划线</span><br><span class="line"> * underline 下划线</span><br><span class="line"> * </span><br><span class="line"> * letter-spacing:字符水平间距</span><br><span class="line"> *   一般以像素作为单位</span><br><span class="line"> * </span><br><span class="line"> * word-spacing:单词与单词之间的间距</span><br><span class="line"> * 一般以像素作为单位</span><br><span class="line"> * line-height:文本的行高,属性设置行间的距离</span><br><span class="line"> * line-height 与 font-size 的计算值之差（在 CSS 中成为“行间距”）分为两半，</span><br><span class="line"> *         分别加到一个文本行内容的顶部和底部。可以包含这些内容的最小框就是行框。</span><br><span class="line"> * 可以调整文本在标签中的上下垂直的位置</span><br><span class="line"> * </span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">p&#123;</span><br><span class="line">background: gray;</span><br><span class="line">height: 100px;</span><br><span class="line">text-align: left;</span><br><span class="line">text-indent: 10%;</span><br><span class="line">text-decoration:overline;</span><br><span class="line">letter-spacing: 20px;</span><br><span class="line">word-spacing: 40px;</span><br><span class="line">line-height: 160px;</span><br><span class="line">font-size: 40px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;p&gt;我是 Paragraphy&lt;/p&gt;</span><br><span class="line">&lt;p&gt;我是 Paragraphy2&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>​    <strong>3.背景属性</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * background-color:设置背景颜色,通常单独使用</span><br><span class="line"> * </span><br><span class="line"> * background-image:设置背景图片,通常和background-repeat,</span><br><span class="line"> * background-position,background-attachment一起使用</span><br><span class="line"> * </span><br><span class="line"> * background-image:url(图片链接)</span><br><span class="line"> * </span><br><span class="line"> * background-repeat:背景图片是否重复</span><br><span class="line"> *   repeat-x,沿X轴重复</span><br><span class="line"> *   repeat-y,没Y轴重复</span><br><span class="line"> *   repeat,没x轴和Y轴都重复</span><br><span class="line"> *   no-repeat,表示不重复</span><br><span class="line"> * </span><br><span class="line"> * background-position:背景图片的位置</span><br><span class="line"> *   left:居左</span><br><span class="line"> *   center:居中</span><br><span class="line"> *   right:居右</span><br><span class="line"> *   top:居上</span><br><span class="line"> *   bottom:居下</span><br><span class="line"> * </span><br><span class="line"> * background-attachment:背景图片是否固定</span><br><span class="line"> * fixed:表示固定,不随滚动条滚动</span><br><span class="line"> * scroll:表示随滚动条滚动</span><br><span class="line"> * </span><br><span class="line"> */</span><br><span class="line">#p1&#123;</span><br><span class="line">background-color: gray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#p2&#123;</span><br><span class="line">height: 100px;</span><br><span class="line">background-image:url(img/1.PNG);</span><br><span class="line">background-repeat:no-repeat;</span><br><span class="line">background-position:to;</span><br><span class="line">background-attachment:fixed;</span><br><span class="line">border:1px solid red;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;p id=&quot;p1&quot;&gt;P&lt;/p&gt;</span><br><span class="line">&lt;p id=&quot;p2&quot;&gt;P2&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>​    <strong>4.列表属性</strong>(list)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">/*</span><br><span class="line"> * list-style:设置list列表的外观,可以使用简写方式</span><br><span class="line"> * </span><br><span class="line"> * list-style-image:设置图标</span><br><span class="line"> * </span><br><span class="line"> * list-style-position:可以设置图标显示的位置</span><br><span class="line"> * </span><br><span class="line"> * list-style-type:表的外观</span><br><span class="line"> */</span><br><span class="line">#ul1&#123;</span><br><span class="line">border: 1px solid red;</span><br><span class="line">list-style-type: none;</span><br><span class="line">list-style-image:url(img/2.PNG);</span><br><span class="line">list-style-position: inside;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#ul2&#123;</span><br><span class="line">border: 1px solid red;</span><br><span class="line">list-style:url(img/2.PNG) inside;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ol&#123;</span><br><span class="line">list-style-type:upper-alpha;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;ul id=&quot;ul1&quot;&gt;</span><br><span class="line">&lt;li&gt;li 1&lt;/li&gt;</span><br><span class="line">&lt;li&gt;li 2&lt;/li&gt;</span><br><span class="line">&lt;li&gt;li 3&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;ul id=&apos;ul2&apos;&gt;</span><br><span class="line">&lt;li&gt;li 4&lt;/li&gt;</span><br><span class="line">&lt;li&gt;li 5&lt;/li&gt;</span><br><span class="line">&lt;li&gt;li 6&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;ol&gt;</span><br><span class="line">&lt;li&gt;li 7&lt;/li&gt;</span><br><span class="line">&lt;li&gt;li 8&lt;/li&gt;</span><br><span class="line">&lt;li&gt;li 9&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br></pre></td></tr></table></figure><p>​    </p><p>​    <strong>5.尺寸属性</strong></p><p>​        width:标签的宽度</p><p>​        height:标签的高度</p><p>​    注意:只对块状标签(block)有效,宽度和浏览器宽度相同,高度默认为0,如p标签,ul标签,h1-h6标签,这种标签一般    具有换行效果</p><p>​    对内联(行内inline)标签无效,如label标签,br标签,input标签,这种标签一般没有换行效果.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">/*width和height有效*/</span><br><span class="line">p&#123;</span><br><span class="line">background-color: red;</span><br><span class="line">width: 300px;</span><br><span class="line">height: 100px;</span><br><span class="line">&#125;</span><br><span class="line">/*width和height无效*/</span><br><span class="line">label&#123;</span><br><span class="line">background-color: green;</span><br><span class="line">width: 300px;</span><br><span class="line">height: 100px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">&lt;p&gt;P&lt;/p&gt;</span><br><span class="line">&lt;p&gt;P2&lt;/p&gt;</span><br><span class="line">&lt;label&gt;label1&lt;/label&gt;</span><br><span class="line">&lt;label&gt;label2&lt;/label&gt;</span><br></pre></td></tr></table></figure><p>​    <strong>6.显示属性</strong>(display)</p><p>​    作用:是否显示标签的,可以决定标签的性质,可以修改标签的块状标签还是内联标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * display:标签是否显示,及标签性质</span><br><span class="line"> * none,标签不显示</span><br><span class="line"> * block,标签显示成块状标签</span><br><span class="line"> * inline 标签显示成内联标签</span><br><span class="line"> * inline-block,显示成内联标签,但可以像块状标签一样设置高和宽</span><br><span class="line"> * </span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">p&#123;</span><br><span class="line">display:inline-block;</span><br><span class="line">border:1px solid red;</span><br><span class="line">width:100px;</span><br><span class="line">height: 50px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;p&gt;p1&lt;/p&gt;</span><br><span class="line">&lt;p&gt;p2&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;label&gt;label1&lt;/label&gt;</span><br><span class="line">&lt;label&gt;label2&lt;/label&gt;</span><br></pre></td></tr></table></figure><p>​    <strong>7.轮廓属性(outline)</strong></p><p>outline （轮廓）是绘制于标签元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。outline 属性可设置元素周围的轮廓线。</p><p>==注意：请始终在 outline-color 属性之前声明 outline-style 属性。元素只有获得轮廓以后才能改变其轮廓的颜色==。</p><p>注意：轮廓线不会占据空间，也不一定是矩形。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">/*</span><br><span class="line"> * outline-style:设置轮廓的形状solid,dotted....</span><br><span class="line"> * </span><br><span class="line"> * outline-color:设置轮廓的颜色</span><br><span class="line"> * </span><br><span class="line"> * outline-width:设置轮廓的宽度</span><br><span class="line"> * </span><br><span class="line"> * 只起到突出标签的功能,没有其他意义,不占据文档的空间</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">p&#123;</span><br><span class="line">width:100px;</span><br><span class="line">height: 100px;</span><br><span class="line">border:3px solid red;</span><br><span class="line">outline:3px dotted green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;p&gt;p&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>​    <strong>8.边框属性(border)</strong>    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * border-color:边框的颜色</span><br><span class="line"> * border-style :边框的线条类型</span><br><span class="line"> * double,双实线</span><br><span class="line"> * solid,单实线</span><br><span class="line"> * dotted,省略号线</span><br><span class="line"> * dashed,破折号线</span><br><span class="line"> * </span><br><span class="line"> * border-width:边框的宽度</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">p,label&#123;</span><br><span class="line"></span><br><span class="line">border-color: red;</span><br><span class="line">border-style:double;</span><br><span class="line">border-width: 10px;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;p&gt;p&lt;/p&gt;</span><br><span class="line">&lt;label&gt;label&lt;/label&gt;</span><br></pre></td></tr></table></figure><p>​    9<strong>.浮动属性(float)</strong></p><p>​    浮动的框可以向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。</p><p>​    由于浮动框不在文档的普通流中，所以文档的普通流中的块框表现得就像浮动框不存在一样。</p><p>请看下图，当把框 1 向右浮动时，它脱离文档流并且向右移动，直到它的右边缘碰到包含框的右边缘：</p><p>​    <img src="2.png" alt="2.png"></p><p>​    再请看下图，当框 1 向左浮动时，它脱离文档流并且向左移动，直到它的左边缘碰到包含框的左边缘。因为    它不再处于文档流中，所以它不占据空间，实际上覆盖住了框 2，使框 2 从视图中消失(注意:框2中的内容不能被覆盖.需要使用定位,设置z-index属性)。</p><p>​    如果把所有三个框都向左移动，那么框 1 向左浮动直到碰到包含框，另外两个框向左浮动直到碰到前一个浮动框。</p><p>​    <img src="3.png" alt="3.png"></p><p>如下图所示，如果包含框太窄，无法容纳水平排列的三个浮动元素，那么其它浮动块向下移动，直到有足够的空间。如果浮动元素的高度不同，那么当它们向下移动时可能被其它浮动元素“卡住”：</p><p>​    <img src="D:\JAVAEE教案\JAVA笔记\第2天 CSS样式表\笔记\4.PNG" alt="4.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">/*</span><br><span class="line"> * float表示块状标签向哪个方向浮动</span><br><span class="line"> * none,表示不浮动</span><br><span class="line"> * left,居左浮动</span><br><span class="line"> * right,居右浮动</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#p1,#p2,#p3&#123;</span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line">float: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#p1&#123;</span><br><span class="line">background: blue;</span><br><span class="line">&#125;</span><br><span class="line">#p2&#123;</span><br><span class="line">background: red;</span><br><span class="line">&#125;</span><br><span class="line">#p3&#123;</span><br><span class="line">background: yellow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;p1&quot;&gt;div1&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;p2&quot;&gt;div2&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;p3&quot;&gt;div3&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>​    10<strong>.清除浮动clear</strong></p><p>​        作用:清除标签两边的浮动标签元素</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">/*</span><br><span class="line"> *clear:表示清除该标签左右两边的浮动标签 </span><br><span class="line"> * none:不清除</span><br><span class="line"> * both:左右两边全部清除</span><br><span class="line"> * left:清除左边的浮动</span><br><span class="line"> * right:清除右边的浮动</span><br><span class="line"> * </span><br><span class="line"> */</span><br><span class="line">.fl&#123;</span><br><span class="line">float: left;</span><br><span class="line">border: 1px solid red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#div4&#123;</span><br><span class="line">border: 1px solid green;</span><br><span class="line">clear:both;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;fl&quot;&gt;div1&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;fl&quot;&gt;div2&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;fl&quot;&gt;div3&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div4&quot;&gt;div4&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>​    使用overflow属性来清除浮动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">.fl&#123;</span><br><span class="line">float: left;</span><br><span class="line">border: 1px solid red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#div1&#123;</span><br><span class="line">border: 1px solid green;</span><br><span class="line">overflow:hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * overflow:表示标签中溢出的内容该如何显示</span><br><span class="line"> * hidden把溢出的内容隐藏掉</span><br><span class="line"> * scroll把溢出的内容隐藏掉,但加上滚动条</span><br><span class="line"> * none 不隐藏</span><br><span class="line"> * 用此属性可以做到清除浮动</span><br><span class="line"> *如父标签中有浮动标签,当使用overflow,不会把浮动的内容隐藏掉,会自动为父标签增加高度</span><br><span class="line"> *为了把浮动的元素内容包含进来.</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;</span><br><span class="line">&lt;div class=&quot;fl&quot;&gt;div1&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;fl&quot;&gt;div2&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;fl&quot;&gt;div3&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div4&quot;&gt;div4&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>五.<strong>盒子模型(div)</strong></p><p><img src="D:\JAVAEE教案\JAVA笔记\第2天 CSS样式表\笔记\5.PNG" alt="5.png"></p><p> ==盒子一般作为容器使用,里面可以盛放其它的标签元素或内容==</p><p>通常盒子是由:内容+内边距(padding)+边框(border)+外边距(margin)组成,</p><p>Div是一个经典的盒子,没有任何样式修饰,一般的盒子都是块状元素</p><p>span标签是一个inline标签,其上也没有任何样式修饰.</p><p>通常网页使用div+span+css进行排版布局</p><p>Div盒子可以设置width和height:</p><p>对于非IE浏览器,width和height只是内容的宽和高(标准的盒子),通常内容距和外边距默认宽度0</p><p>而IE浏览器,width和height等于边框(border)+内边距(padding)+内容</p><p>==其中重要的属性:==</p><p>border:</p><p>​    border-color:</p><p>​    border-width:</p><p>​    border-style:</p><p>margin:</p><p>​    margin-top</p><p>​    margin-right</p><p>​    margin-bottom</p><p>​    margin-left</p><p>padding:</p><p>​    padding-top</p><p>​    padding-right</p><p>​    padding-bottom</p><p>​    padding-left</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">/*</span><br><span class="line"> * padding表示内边距</span><br><span class="line"> * padding-left</span><br><span class="line"> * padding-right</span><br><span class="line"> * padding-top</span><br><span class="line"> * padding-bottom</span><br><span class="line"> * </span><br><span class="line"> * </span><br><span class="line"> * margin表示外边距</span><br><span class="line"> * margin-left</span><br><span class="line"> * margin-right</span><br><span class="line"> * margin-top</span><br><span class="line"> * margin-bottom</span><br><span class="line"> * </span><br><span class="line"> * </span><br><span class="line"> */</span><br><span class="line">body&#123;</span><br><span class="line">padding-left:10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * 注意:简写方式的顺序为----&gt;上右下左</span><br><span class="line"> */</span><br><span class="line">#d2&#123;</span><br><span class="line">width:200px;</span><br><span class="line">height: 200px;</span><br><span class="line">border: 1px solid green;</span><br><span class="line"></span><br><span class="line">/*padding 50px;相当于 padding: 50px 50px 50px 50px;*/</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * padding:50px 60px; 相当于 padding:50px 60px 50px 60px;</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">padding:50px 60px 70px;</span><br><span class="line">/*</span><br><span class="line"> * padding:50px 60px 70px;; 相当于 padding:50px 60px 70px 60px;</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;d2&quot;&gt;</span><br><span class="line">div2</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>**六.盒子定位(position)及Z-index属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * position表示定位</span><br><span class="line"> * fixed:固定定位,标签不会随着滚动条而滚动</span><br><span class="line"> * static:无定位(默认值)</span><br><span class="line"> * relative:相对定位,元素没有脱离文档流,相对于原先自己位置进行的定位</span><br><span class="line"> * absolute:绝对定位,元素脱离文档流,原来位置可以被其他标签占据,</span><br><span class="line"> *  不管是行内还是块状元素,绝对定位后,被定位的标签都会变成块状标签</span><br><span class="line"> * </span><br><span class="line"> * 通常定位要和几个重要属性(其中之一)联用</span><br><span class="line"> * top,</span><br><span class="line"> * left</span><br><span class="line"> * right,</span><br><span class="line"> * bottom</span><br><span class="line"> * </span><br><span class="line"> * </span><br><span class="line"> * </span><br><span class="line">   </span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">div&#123;</span><br><span class="line">width:100px;</span><br><span class="line">height: 100px;</span><br><span class="line">&#125;</span><br><span class="line">#d1&#123;</span><br><span class="line">background: blue;</span><br><span class="line">position:fixed;</span><br><span class="line">left: 200px;</span><br><span class="line">&#125;</span><br><span class="line">#d2&#123;</span><br><span class="line">background: green;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;d1&quot;&gt;div1&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;d2&quot;&gt;div2&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>​    z-index表示z轴属性,用来设置标签元素是否远离屏幕.通常值越大,越靠近阅读者,越小越远离阅读者,可以设置小于0的整数.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * </span><br><span class="line"> * Z-index必须出现在定位的元素的一方</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">div&#123;</span><br><span class="line">width:100px;</span><br><span class="line">height: 100px;</span><br><span class="line">&#125;</span><br><span class="line">#d1&#123;</span><br><span class="line">background: blue;</span><br><span class="line">position:absolute;</span><br><span class="line">left: 20px;</span><br><span class="line">z-index: -2;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">#d2&#123;</span><br><span class="line">background: green;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;d1&quot;&gt;div1&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;d2&quot;&gt;div2&lt;/div&gt;</span><br></pre></td></tr></table></figure></style></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CSS样式表&quot;&gt;&lt;a href=&quot;#CSS样式表&quot; class=&quot;headerlink&quot; title=&quot;CSS样式表&quot;&gt;&lt;/a&gt;CSS样式表&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;今日内容&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight pla
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://kongxianghe.top/2018/10/23/javaScript%E5%89%8D%E7%AB%AF%E8%84%9A%E6%9C%AC%E6%8A%80%E6%9C%AF%E4%BA%8C/"/>
    <id>http://kongxianghe.top/2018/10/23/javaScript前端脚本技术二/</id>
    <published>2018-10-23T14:06:03.500Z</published>
    <updated>2018-07-09T06:15:55.316Z</updated>
    
    <content type="html"><![CDATA[<h1 id="javaScript前端脚本技术二"><a href="#javaScript前端脚本技术二" class="headerlink" title="javaScript前端脚本技术二"></a>javaScript前端脚本技术二</h1><p>一.<strong>今日内容</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1、Js的DOM</span><br><span class="line">概念</span><br><span class="line">作用</span><br><span class="line">查找HMTL标签</span><br><span class="line">增加标签</span><br><span class="line">删除标签</span><br><span class="line">改变双标签内容</span><br><span class="line">查找标签属性</span><br><span class="line">增加标签属性</span><br><span class="line">改变标签属性</span><br><span class="line">删除标签属性</span><br><span class="line">操作样式属性 </span><br><span class="line">2、Js的BOM</span><br><span class="line">概念</span><br><span class="line">window对像及尺寸</span><br><span class="line">window对像属性</span><br><span class="line">window对像方法</span><br><span class="line">3、Js的Cookie</span><br><span class="line">概念</span><br><span class="line">向浏览器存放cookie</span><br><span class="line">从浏览器读取cookie</span><br><span class="line">4、作业</span><br></pre></td></tr></table></figure><p><strong>一.JS的DOM操作</strong></p><ol><li><p>概念DOM(document object model）</p><p>把html文档抽像成对像，该对像称为document,其代表内存中的整个html文件</p><p>如图：</p><p><img src="D:\JAVAEE教案\JAVAEE笔记\第4天 javaScript脚本\笔记\捕获.PNG" alt="1.png"></p></li><li><p>作用 </p><p>操作document文档中的标签，属性，样式进行增删改查，对事件进行响应，做出动态的网页效果</p></li><li><p>==查找HMTL标签==</p><p>按标签的ID去查找标签对像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//返回单个标签对像</span><br><span class="line">document.getElementById(&quot;标签的ID&quot;);</span><br></pre></td></tr></table></figure><p>按标签的名字去查找标签对像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//返回一组标签对像</span><br><span class="line">document.getElementsByTagName(&quot;标签名&quot;);</span><br></pre></td></tr></table></figure><p>按标签的class属性的值去查找标签对像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//得到一组class修饰的标签</span><br><span class="line">document.getElementsByClassName(&quot;class类名&quot;)</span><br></pre></td></tr></table></figure><p>按标签的name属性的值去查找标签对像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//得到一组name修饰的标签对像，一般用于表单标签对像</span><br><span class="line">document.getElementsByName(&quot;表单的name值&quot;)</span><br></pre></td></tr></table></figure></li><li><p>增加标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul id=&quot;ul1&quot;&gt;</span><br><span class="line">&lt;li&gt;lia&lt;/li&gt;</span><br><span class="line">&lt;li&gt;lib&lt;/li&gt;</span><br><span class="line">&lt;li&gt;lic&lt;/li&gt;</span><br><span class="line">&lt;li&gt;lid&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;button&quot;  id=&quot;btn&quot; value=&quot;创建并增加li&quot;  onclick=&quot;dobiz()&quot;/&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">//增加li</span><br><span class="line">//JS如果想动态增加标签，必须使用其父类标签</span><br><span class="line">function dobiz()&#123;</span><br><span class="line"></span><br><span class="line">//获取父类标签</span><br><span class="line">var ul = document.getElementById(&quot;ul1&quot;);</span><br><span class="line"></span><br><span class="line">//创建新的li标签</span><br><span class="line">var newLi = document.createElement(&quot;li&quot;);</span><br><span class="line"></span><br><span class="line">//给li标签添加文本内容</span><br><span class="line">newLi.innerHTML = &quot;lie&quot;;</span><br><span class="line"></span><br><span class="line">//使用父标签追加子标签</span><br><span class="line">//appendChild()追加到子类标签的末尾</span><br><span class="line">ul.appendChild(newLi);</span><br><span class="line">//insertBefore(&quot;新增加标签&quot;,&quot;依据标签：新标签增加到这个标签前面&quot;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>删除标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;ul id=&quot;ul1&quot;&gt;</span><br><span class="line">&lt;li&gt;lia&lt;/li&gt;</span><br><span class="line">&lt;li&gt;lib&lt;/li&gt;</span><br><span class="line">&lt;li&gt;lic&lt;/li&gt;</span><br><span class="line">&lt;li&gt;lid&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;button&quot;  id=&quot;btn&quot; value=&quot;删除li&quot;  onclick=&quot;dobiz()&quot;/&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">//删除li</span><br><span class="line">function dobiz()&#123;</span><br><span class="line"></span><br><span class="line">//1.获取父标签</span><br><span class="line">var ul = document.getElementById(&quot;ul1&quot;);</span><br><span class="line"></span><br><span class="line">//2.子标签对像</span><br><span class="line">//获取第一个子节点，文本节点，属性节点，或标签节点</span><br><span class="line">var txt = ul.firstChild;</span><br><span class="line">//获取标签子节点</span><br><span class="line">var li =  ul.firstElementChild;</span><br><span class="line"></span><br><span class="line">//alert(txt+&quot;,&quot;+li)</span><br><span class="line">//3.删除标签</span><br><span class="line">ul.removeChild(li);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>改变双标签内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">innerHTML属性</span><br><span class="line">标签.innerHTML，表示取值</span><br><span class="line">标签.innerHTML =&quot;值&quot;，表示付值</span><br><span class="line"></span><br><span class="line">innnerText属性</span><br><span class="line">标签.innerText,表示取</span><br><span class="line">标签.innerText=&quot;值&quot;，表示付值</span><br><span class="line"></span><br><span class="line">区别：innerHTML可以把标签类型的字符串解析成标签对像</span><br><span class="line"> innerText只会把标签类型的字符串解析成普通的字符串</span><br></pre></td></tr></table></figure><p>如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p id=&quot;p&quot;&gt;&lt;/p&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;给双标签付值&quot; onclick=&quot;dobiz()&quot;/&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">function dobiz()&#123;</span><br><span class="line"></span><br><span class="line">var p = document.getElementById(&quot;p&quot;);</span><br><span class="line">p.innerText = &quot;&lt;h1&gt;hello js&lt;/h1&gt;&quot;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">//显示的结果为</span><br><span class="line">&lt;h1&gt;hello js&lt;/h1&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p id=&quot;p&quot;&gt;&lt;/p&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;给双标签付值&quot; onclick=&quot;dobiz()&quot;/&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">function dobiz()&#123;</span><br><span class="line"></span><br><span class="line">var p = document.getElementById(&quot;p&quot;);</span><br><span class="line">p.innerHTML = &quot;&lt;h1&gt;hello js&lt;/h1&gt;&quot;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">//显示的结果为</span><br><span class="line">粗体的 hello js</span><br></pre></td></tr></table></figure></li><li><p>查找标签属性</p><p>标签属性是标签的一部份，所以一般先获取标签对像，再来操作属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;text&quot; name=&quot;username&quot; value=&quot;请输入用户名&quot; id=&quot;un&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;获取属性值&quot; onclick=&quot;dobiz()&quot;/&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">function dobiz()&#123;</span><br><span class="line"></span><br><span class="line">//1.获取标签对像</span><br><span class="line">var input_un = document.getElementById(&quot;un&quot;);</span><br><span class="line"></span><br><span class="line">//2.获取属性，一般根属性名获取属性值</span><br><span class="line">var typ = input_un.type;</span><br><span class="line"></span><br><span class="line">var un = input_un.name;</span><br><span class="line"></span><br><span class="line">var val = input_un.value;</span><br><span class="line"></span><br><span class="line">alert(typ+&quot;,&quot;+un+&quot;,&quot;+val)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>获取样式属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;div1&quot; style=&quot;background: red;width:100px;height: 100px;&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">function dobiz()&#123;</span><br><span class="line">//获取样式值（只能获取行内声明的样式，内部样式及外部样式取不到）</span><br><span class="line">var div = document.getElementById(&quot;div1&quot;);</span><br><span class="line">var sty = div.style;</span><br><span class="line">alert(sty.background+&quot;,&quot;+sty.width)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>增加标签的属性（一般对class属性进行增加）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"></span><br><span class="line">.mystyle&#123;</span><br><span class="line"></span><br><span class="line">background: green;</span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;div&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;增加class属性&quot; onclick=&quot;dobiz()&quot;/&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">function dobiz()&#123;</span><br><span class="line"></span><br><span class="line">var div = document.getElementById(&quot;div1&quot;);</span><br><span class="line"></span><br><span class="line">//增加样式属性（一般用于增加外部样式，内部样式，非行内样式）</span><br><span class="line">div.className = &quot;mystyle&quot;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>增加行内样式属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;div&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;增加class属性&quot; onclick=&quot;dobiz()&quot;/&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">function dobiz()&#123;</span><br><span class="line"></span><br><span class="line">var div = document.getElementById(&quot;div1&quot;);</span><br><span class="line"></span><br><span class="line">//行内样式方式一（推荐）：</span><br><span class="line">//div.style = &quot;background: green;width: 100px;height: 100px;&quot;;</span><br><span class="line"></span><br><span class="line">//行内样式方式二：可以给行内样式单独付值</span><br><span class="line">//可以追加样式</span><br><span class="line">div.style.background=&quot;red&quot;;</span><br><span class="line">div.style.width=&quot;100px&quot;;</span><br><span class="line">div.style.height=&quot;100px&quot;;</span><br><span class="line"></span><br><span class="line">//行内样式方式三：把行内样式看成纯粹的属性setAttribute(参数名，参数值)</span><br><span class="line">//会覆盖原来的样式</span><br><span class="line">//div.setAttribute(&quot;style&quot;,&quot;background: green;width: 100px;height: 100px;&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>改变标签属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; id=&quot;input1&quot; value=&quot;123456&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;button&quot;  value=&quot;改变标签属性&quot; onclick=&quot;dobiz()&quot;/&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">//利用付值操作达到改变属性的特效</span><br><span class="line">function dobiz()&#123;</span><br><span class="line"></span><br><span class="line">var input1 = document.getElementById(&quot;input1&quot;);</span><br><span class="line"></span><br><span class="line">//input1.type = &quot;password&quot;;</span><br><span class="line"></span><br><span class="line">input1.setAttribute(&quot;type&quot;,&quot;password&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>删除标签属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">.div&#123;</span><br><span class="line">font-size: 30px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot; style=&quot;background: red; width:100px;height: 100px;&quot; class=&quot;div&quot;&gt;</span><br><span class="line">div</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;button&quot;  value=&quot;删除样式属性&quot;  onclick=&quot;dobiz()&quot;/&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">function dobiz()&#123;</span><br><span class="line"></span><br><span class="line">var div1 = document.getElementById(&quot;div1&quot;);</span><br><span class="line">//删除样式属性</span><br><span class="line">div1.removeAttribute(&quot;style&quot;);</span><br><span class="line">//删除class属性</span><br><span class="line">div1.removeAttribute(&quot;class&quot;);</span><br><span class="line">//覆盖class属性，达到删除的目的</span><br><span class="line">//div1.setAttribute(&quot;class&quot;,&quot;&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>样式操作</p><p>除了上述通过增删改查属性的方式，来达到增删改查样式的目的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//对非IE内核（或IE内核8版本以上）浏览器有效，查以查询非行内样表</span><br><span class="line">window.getcomputeStyle(标签对像)</span><br><span class="line">//对IE内核的浏览器（IE8）有效，可以查询非行内样式表</span><br><span class="line">标签对像.currentStyle</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">.mydiv&#123;</span><br><span class="line">height: 100px;</span><br><span class="line">width:100px;</span><br><span class="line">background: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot; class=&quot;mydiv&quot;&gt;</span><br><span class="line">div</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;button&quot;  value=&quot;获取非行内样式&quot; onclick=&quot;dobiz()&quot;/&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">function dobiz()&#123;</span><br><span class="line">var div1 = document.getElementById(&quot;div1&quot;);</span><br><span class="line">//非IE内核浏览器或IE8(不包含8)版本以上浏览器支持，使用引种方式获取非行内样式</span><br><span class="line">//window对像调用该方法</span><br><span class="line">var sty = window.getComputedStyle(div1,null);</span><br><span class="line">alert(sty.background)</span><br><span class="line"></span><br><span class="line">//以下方式很少使用</span><br><span class="line">//var sty = div1.currentStyle</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol><p><strong>二.JS的BOM模型</strong></p><p><strong>1.BOM的概念</strong>(brower object model)</p><p>​    JS把浏览器窗体抽像成对像，该对像就是window</p><p><strong>2.window对像及尺寸</strong></p><p>有三种方法能够确定浏览器窗口的尺寸。</p><p>==对于Internet Explorer、Chrome、Firefox、Opera 以及 Safari(这里面使用window)：==</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">window.innerHeight - 浏览器窗口的内部高度(包括滚动条)</span><br><span class="line">window.innerWidth - 浏览器窗口的内部宽度(包括滚动条)</span><br></pre></td></tr></table></figure><p>对于 Internet Explorer 8、7、6、5：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">document.documentElement.clientHeight</span><br><span class="line">document.documentElement.clientWidth</span><br><span class="line">或者(使用document的body体)</span><br><span class="line">document.body.clientHeight</span><br><span class="line">document.body.clientWidth</span><br></pre></td></tr></table></figure><p>实用的 JavaScript 方案（涵盖所有浏览器，解析浏览器差异性）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var w=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth;</span><br><span class="line">var h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;</span><br></pre></td></tr></table></figure><p><strong>3.window对像属性</strong></p><p>​    <strong>screen屏幕属性如下(了解)：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">availWidth 属性：可用宽度，返回访问者屏幕的宽度（以像素计)，减去界面特性，比如窗口任务栏。</span><br><span class="line">availHeight属性：可用高度，返回访问者屏幕的高度（以像素计)，减去界面特性，比如窗口任务栏。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;获取screen尺寸&quot; onclick=&quot;dobiz()&quot; /&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">function dobiz()&#123;</span><br><span class="line">var screen_h = window.screen.availHeight;</span><br><span class="line">var screen_w = window.screen.availWidth;</span><br><span class="line">//???</span><br><span class="line">var screen_t = window.screen.availTop;</span><br><span class="line">//???</span><br><span class="line">var screen_l = window.screen.availLeft;</span><br><span class="line"></span><br><span class="line">alert(screen_h+&quot;,&quot;+screen_w+&quot;,&quot;+screen_t+&quot;,&quot;+screen_l);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>​    <strong>navigator属性如下（了解）：</strong></p><p>window.navigator 对象包含有关访问者浏览器的信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">appCodeName：浏览器代号</span><br><span class="line">appName:浏览器名称</span><br><span class="line">appVersion:浏览器版本</span><br><span class="line">cookieEnabled:启用Cookies</span><br><span class="line">platform:硬件平台</span><br><span class="line">userAgent:用户代理</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">function dobiz()&#123;</span><br><span class="line"></span><br><span class="line">var codeName = window.navigator.appCodeName;</span><br><span class="line">var name = window.navigator.appName;</span><br><span class="line">var version= window.navigator.appVersion;</span><br><span class="line">var cookieEnable = window.navigator.cookieEnabled;</span><br><span class="line">var plat = window.navigator.platform;</span><br><span class="line">var agent = window.navigator.userAgent;</span><br><span class="line"></span><br><span class="line">var str = codeName+&quot;&lt;br&gt;&quot;+name+&quot;&lt;br&gt;&quot;+version+&quot;&lt;br&gt;&quot;+cookieEnable+&quot;&lt;br&gt;&quot;+plat+&quot;&lt;br&gt;&quot;+agent;</span><br><span class="line"></span><br><span class="line">document.getElementById(&quot;div1&quot;).innerHTML = str;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>​    </p><p>​    <strong>document属性如下（重点）：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">document是window对像的属性</span><br><span class="line">window.document可以得到document对像，一般window可省略</span><br></pre></td></tr></table></figure><p>​    <strong>location属性如下（重点）：</strong></p><p>​    该对像对应窗口的地址栏</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">location.hostname 返回 web 主机的域名（一般是IP）</span><br><span class="line">location.port 返回 web 主机的端口 （80 或 443）</span><br><span class="line">location.host 返回web主机的IP和port</span><br><span class="line">location.pathname 返回当前页面的路径和文件名</span><br><span class="line">location.protocol 返回所使用的 web 协议（http:// 或 https://）</span><br><span class="line">location.href跳转到相应的url（重点）</span><br></pre></td></tr></table></figure><p>​    <strong>history属性如下（重点）：</strong></p><p>该对像对应窗口的历史栏</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">history.go(1);前进</span><br><span class="line">history.go(-1);后退</span><br><span class="line">history.forward();前时</span><br><span class="line">history.back();后退</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href=&quot;bom_back.html&quot;&gt;点击我&lt;/a&gt;</span><br><span class="line">&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;doforward();&quot;&gt;下一页&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">function doforward()&#123;</span><br><span class="line">history.go(1);//进入下一页</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;doback();&quot;&gt;上一页&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">function doback()&#123;</span><br><span class="line"></span><br><span class="line">history.go(-1);//返回上一页</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>4.window对像方法</strong></p><p><strong>计时器函数</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">window.setInterval(&quot;做的事情即函数&quot;，&quot;毫秒数&quot;);//每隔多长时间，重复执行该函数</span><br><span class="line">window.setTimeout(&quot;做的事情即函数&quot;，&quot;毫秒数&quot;);//经过多长时间后，去执行函数</span><br><span class="line">window.clearInterval(&quot;定时器对像&quot;)；</span><br><span class="line">window.clearTimeout(&quot;定时器对像&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1 id=&quot;h1&quot;&gt;&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;5秒后开始计时&quot; onclick=&quot;dobiz()&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;停止计时&quot; onclick=&quot;dobiz4()&quot;&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">//文档加载完毕以后，隔5秒，去执行一次函数</span><br><span class="line">function dobiz()&#123;</span><br><span class="line">window.setTimeout(&quot;dobiz2()&quot;,5000);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//重复执行，每隔1秒</span><br><span class="line">var myInterval;</span><br><span class="line">function dobiz2()&#123;</span><br><span class="line"></span><br><span class="line">myInterval = window.setInterval(&quot;dobiz3()&quot;,1000);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function dobiz3()&#123;</span><br><span class="line">document.getElementById(&quot;h1&quot;).innerHTML = new Date();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//清空计时器</span><br><span class="line">function dobiz4()&#123;</span><br><span class="line"></span><br><span class="line">window.clearInterval(myInterval)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>三.JS的cookie操作</strong></p><p>1.Cookie概念：</p><p>​    Cookie 是一些数据, 存储于你电脑上的文本文件中。当 web 服务器向浏览器发送 web 页面时，在连接关闭后，服务端不会记录用户的信息。 </p><p>==Cookie是一对键值对，通常由浏览器访问服务器，服务器会把Cookie写入到本地客户端浏览器==</p><p>Cookie 的作用就是用于解决 “如何记录客户端的用户信息”:</p><ul><li>当用户访问 web 页面时，他的名字可以记录在 cookie 中。</li><li>在用户下一次访问该页面时，可以在 cookie 中读取用户访问记录。</li></ul><p>Cookie 以名/值对形式存储，如下所示:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">username=John Doe</span><br><span class="line"></span><br><span class="line">//后台java可使用setCookie()方法</span><br><span class="line">//前端请使用window.navigator.cookie = &quot;key=value&quot;方式来把cookie写入本地浏览器</span><br><span class="line">//前端请使用window.navigator.cookie 方式来把本地浏览器cookie读出</span><br></pre></td></tr></table></figure><p>当浏览器从服务器上请求 web 页面时， 属于该页面的 cookie 会被添加到该请求中。服务端通过这种方式来获取用户的信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 id=&quot;h1&quot;&gt;&lt;/h1&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;写入cookie&quot; onclick=&quot;doWriter()&quot;&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;读取cookie&quot; onclick=&quot;doRead()&quot;&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">//写入cookie</span><br><span class="line">function doWriter()&#123;</span><br><span class="line">window.document.cookie=&quot;password=jack&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function doRead()&#123;</span><br><span class="line">var mess = window.document.cookie;</span><br><span class="line"></span><br><span class="line">//cookie读取应该使用遍历读取</span><br><span class="line">//document.getElementById(&quot;h1&quot;).innerHTML = mess;</span><br><span class="line"></span><br><span class="line">var cookies = mess.split(&quot;;&quot;);</span><br><span class="line">var cook1 = cookies[0];</span><br><span class="line">var username = cook1.split(&quot;=&quot;)[1];</span><br><span class="line"></span><br><span class="line">document.getElementById(&quot;h1&quot;).innerHTML=username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//课后自己遍历cookie</span><br></pre></td></tr></table></figure><p><strong>四.课堂练习</strong></p><p>幻灯片制作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;body onload=&quot;doStart()&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;img/1.jpg&quot; width=&quot;150px&quot; height=&quot;200px&quot; id=&quot;img&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;button&quot;  value=&quot;change&quot; onclick=&quot;doChange()&quot; /&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">//1.图片静态加载到页面上</span><br><span class="line">//2.动态改变src中的值即可</span><br><span class="line">function doStart()&#123;</span><br><span class="line">window.setInterval(&quot;doChange()&quot;,1000);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var i=1;</span><br><span class="line">function doChange()&#123;</span><br><span class="line"></span><br><span class="line">var img = document.getElementById(&quot;img&quot;);</span><br><span class="line">img.src=&quot;img/&quot;+i+&quot;.jpg&quot;;</span><br><span class="line">i++;</span><br><span class="line">if(i==6)&#123;</span><br><span class="line">i=1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>五.作业</strong></p><p>​    跑马灯</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;javaScript前端脚本技术二&quot;&gt;&lt;a href=&quot;#javaScript前端脚本技术二&quot; class=&quot;headerlink&quot; title=&quot;javaScript前端脚本技术二&quot;&gt;&lt;/a&gt;javaScript前端脚本技术二&lt;/h1&gt;&lt;p&gt;一.&lt;strong&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://kongxianghe.top/2018/10/23/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/"/>
    <id>http://kongxianghe.top/2018/10/23/mysql数据库基础/</id>
    <published>2018-10-23T14:06:03.486Z</published>
    <updated>2018-07-09T06:15:57.024Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mysql数据库基础"><a href="#mysql数据库基础" class="headerlink" title="mysql数据库基础"></a>mysql数据库基础</h1><p><strong>今日内容</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">1.数据库简介</span><br><span class="line">2.数据库的安装</span><br><span class="line">3.数据库登录</span><br><span class="line">4.Sqlyog的安装</span><br><span class="line">5.Sql语言简介</span><br><span class="line">6.Sql语言之DDL</span><br><span class="line">  创建数据库</span><br><span class="line">  查询所有数据库</span><br><span class="line">  切换数据库</span><br><span class="line">  查询已创建数据库语法信息</span><br><span class="line">  修改已创建数据库字符集</span><br><span class="line">  删除数据库</span><br><span class="line">  mysql常用数据类型</span><br><span class="line">  mysql常用数据约束 </span><br><span class="line">  创建表语法</span><br><span class="line">  查询数据库中表</span><br><span class="line">  查询表结构语法</span><br><span class="line">  重命名表名语法(rename...to)</span><br><span class="line">  修改表结构语法(alter...add|modify|drop)</span><br><span class="line">  删除表语法</span><br><span class="line">7.sql语言之DML</span><br><span class="line">  DML之insert语句</span><br><span class="line">  DML之update语句</span><br><span class="line">  DML之delete语句</span><br><span class="line">  课堂练习</span><br><span class="line">8.sql语言之DQL语句</span><br><span class="line">  DQL查询语句基本语法结构</span><br><span class="line">  简单查询</span><br><span class="line">  条件查询</span><br><span class="line">  模糊查询</span><br><span class="line">  去重复查询</span><br><span class="line">  添加别名查询</span><br><span class="line">  排序查询</span><br><span class="line">  聚合函数</span><br><span class="line">  分组查询</span><br><span class="line">  having子句</span><br><span class="line">  分页查询</span><br><span class="line">9.作业</span><br></pre></td></tr></table></figure><p><strong>一.    数据库简介</strong></p><ol><li><p>数据库概念：</p><pre><code>数据库（DataBase）：简称DB,指长期保存在计算机的存储设备上，按照一定规则组织起来，可以被各种用户或应用共享的数据集合。其本质就是数据的仓库。</code></pre></li><li><p>数据库管理系统概念（软件）:</p><pre><code>数据库管理系统（DataBase Management System）：简称DBMS,指一种操作和管理数据库的大型软件，用于建立、使用和维护数据库，对数据库进行统一管理和控制，以保证数据库的安全性和完整性。用户通过数据库管理系统访问数据库中的数据。</code></pre></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">数据库软件应该为数据库管理系统，数据库是通过数据库管理系统创建和操作的。</span><br><span class="line">数据库：存储、维护和管理数据的集合。</span><br></pre></td></tr></table></figure><ol start="3"><li><p>常见数据库管理系统</p><ul><li>Oracle：Oracle数据库被认为是业界目前比较成功的关系型数据库管理系统。Oracle数据库可以运行在UNIX、Windows等主流操作系统平台，完全支持所有的工业标准，并获得最高级别的ISO标准安全性认证（大中型企业）。</li></ul><ul><li>MySQL：MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，目前属于 Oracle旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件(中小型企业)。</li><li>DB2：DB2是IBM公司的产品，DB2数据库系统采用多进程多线索体系结构，其功能足以满足大中公司的需要，并可灵活地服务于中小型电子商务解决方案。</li><li>Microsoft SQL Server：SQL Server 是Microsoft 公司推出的关系型数据库管理系统。具有使用方便可伸缩性好与相关软件集成程度高等优点。</li></ul></li></ol><p><strong>二.数据库的安装</strong></p><p>步骤如下：</p><p>1.最好以管理员模式打开mysql软件，界面如下：</p><p>同意协议，点击next进入下一页</p><p><img src="D:\JAVAEE教案\JAVAEE笔记\第5天 mysql数据库基础应用\笔记\1.PNG" alt="1.png"></p><p>2.选择Server only进行安装，点击下一步，界面如下:</p><p><img src="D:\JAVAEE教案\JAVAEE笔记\第5天 mysql数据库基础应用\笔记\2.PNG" alt="2.png"></p><p>3.点击execute执行安装，等待安装，安装成功后点击下一步。</p><p><img src="D:\JAVAEE教案\JAVAEE笔记\第5天 mysql数据库基础应用\笔记\3.PNG" alt="3.png"></p><p>4.进入数据库参数配置页面，点击next，进入页面如下：</p><p>选择config type:development machine进行安装即可</p><p><img src="D:\JAVAEE教案\JAVAEE笔记\第5天 mysql数据库基础应用\笔记\4.PNG" alt="4.png"></p><p>5.请设置root用户的密码，密码不能小于4位，数字或字符都可以</p><p><img src="D:\JAVAEE教案\JAVAEE笔记\第5天 mysql数据库基础应用\笔记\5.PNG" alt="5.png"></p><p>6.注册windows系统服务,然后点击下一步</p><p><img src="D:\JAVAEE教案\JAVAEE笔记\第5天 mysql数据库基础应用\笔记\6.PNG" alt="6.png"></p><p>7.执行execute，让之前的配置config生效,点击下一步，即可安装成功</p><p><img src="D:\JAVAEE教案\JAVAEE笔记\第5天 mysql数据库基础应用\笔记\7.PNG" alt="7.png"></p><p><strong>三.数据库登录</strong></p><p>进行登录，测试数据库是否安装成功。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">控制台：mysql -h 服务器所在机器IP -u root -p回车</span><br><span class="line">提示请输入密码：*****回车，即可登录成功</span><br><span class="line">如：登录本机</span><br><span class="line">mysql -h localhost -u root -p回车</span><br></pre></td></tr></table></figure><p>控制台的打开方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在默认的路径C:\Program Files\MySQL\MySQL Server 5.6\bin，按注shift键+鼠标右键</span><br></pre></td></tr></table></figure><p><strong>四.Sqlyog的安装</strong>（客户端）</p><p>略：</p><p><strong>五.Sql语言简介</strong></p><p>概念：结构化查询语言（structure query language）</p><p>作用：和数据库进行交流的语言</p><p>==DDL：数据库对像定义语言（database definition language）,创建和改变数据库对像，数据库，表，索引，视图等。==</p><p>==DML:数据库数据操作语言（database manufactural language）,对存放在表中的用户数据进行增删改操作。==</p><p>==DQL:数据库数据查询语言（database query language），对存放在表中的用户数据时行查询的操作（重中之重）。==</p><p>DCL:数据库对像控制语言（database control language）,对数据库对像进行控制语言，如权限。</p><p><strong>六.Sql语言之DDL</strong></p><ol><li><p>创建数据库</p><p>用root用户登录数据后，可以创建自己的据库，如数据库名叫JAVAEE。</p><p>语法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;sql</span><br><span class="line">create database 数据库名</span><br><span class="line">如：</span><br><span class="line">create database javaee;</span><br><span class="line">创建数据库同时设置编码集utf8</span><br><span class="line">create database javaee character set uft8;</span><br></pre></td></tr></table></figure></li><li><p>查询所有数据库</p><p>查看数据库语法：使用root用户登录数据库后，默认进行的mysql数据库。</p><p>查看 数据库软件中所有的数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;sql</span><br><span class="line">show databases;</span><br></pre></td></tr></table></figure><p>mysql安装后有几个默认的数据库:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">information_schema</span><br><span class="line">mysql</span><br><span class="line">performance_schema</span><br><span class="line">test</span><br></pre></td></tr></table></figure></li><li><p>切换数据库</p><p>使用use关键字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use mysql;使用mysql据库</span><br><span class="line">use javaee;使用javaee数据库</span><br></pre></td></tr></table></figure></li><li><p>退出数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit;</span><br></pre></td></tr></table></figure></li><li><p>删除数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database 数据库名</span><br></pre></td></tr></table></figure></li><li><p>查询已创建数据库语法信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show create database 数据库名;</span><br></pre></td></tr></table></figure></li><li><p>修改已创建数据库字符集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alter database 数据库名 character set 字符编码集</span><br><span class="line">如，设置为gbk</span><br><span class="line">alter database javaee character set gbk;</span><br></pre></td></tr></table></figure></li><li><p>mysql常用数据类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">boolean布尔值</span><br><span class="line">int（整形长度） 整形</span><br><span class="line">bigint 大整形</span><br><span class="line">binary|bit字节类型  </span><br><span class="line">float 单精度浮点型</span><br><span class="line">double（数值总位数，必须出现的小数位数） 双精度浮点型</span><br><span class="line">char 固定字符串，长度固定的字符使用该类型，身份证18位</span><br><span class="line">varchar 可变长度字符串，长度不固定的字符请使用该类型</span><br><span class="line">date 日期类型，只能表示年月日</span><br><span class="line">time 时间类型，只能表示时分秒</span><br><span class="line">datetime 日期时间类型，表示yyyy-MM-dd hh:mm:ss</span><br><span class="line">timestap:日期时间戳，数据库自动生成时间戳</span><br><span class="line">decimal（数值总位数，必须出现的小数位数）:数值类型的统一类型，即可表示整数，也可表示小数</span><br></pre></td></tr></table></figure></li><li><p>mysql常用数据约束 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">主键约束 primary key,表中列值唯一且非空约束，其本质是索引，可以加快速度</span><br><span class="line">唯一性约束 unique,表中列值唯一，可以出现null</span><br><span class="line">非空约束：not null,表中列值不能为null</span><br><span class="line">默认值约束：default,如default &apos;张三&apos;，默认值为张三</span><br><span class="line">外键约束： foreign key,多张表之间的关联关系</span><br></pre></td></tr></table></figure></li><li><p>创建表语法</p><p>表的作用：就是表格，用来存放数据。表格的行（一条记录），表的列（字段名，或列名）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法结构：</span><br><span class="line">create table 表名（</span><br><span class="line">列名 类型 约束类型 comment注释，</span><br><span class="line">列名 类型 约束类型 comment注释</span><br><span class="line">...</span><br><span class="line">）;</span><br><span class="line">注意：最后一条声明没有逗号</span><br></pre></td></tr></table></figure><p>如：创建用户表User（注意：表名不要使用mysql的关键字，一般定义表名以XXX_XXX）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE USER (</span><br><span class="line">id  INT(8) PRIMARY KEY COMMENT &apos;ID值&apos;,</span><br><span class="line">username VARCHAR(50) NOT NULL UNIQUE COMMENT&apos;用户名&apos;,</span><br><span class="line">PASSWORD VARCHAR(20) NOT NULL COMMENT&apos;密码&apos;,</span><br><span class="line">birthday DATETIME COMMENT&apos;生日&apos;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>​</p></li><li><p>查询数据库中表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW TABLES;</span><br></pre></td></tr></table></figure></li><li><p>查询表结构语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DESC 表名；</span><br><span class="line">如：</span><br><span class="line">desc user;</span><br></pre></td></tr></table></figure></li><li><p>重命名表名语法(rename…to)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rename table 原表名 to 新表名</span><br><span class="line">如：</span><br><span class="line">rename table user to users;</span><br></pre></td></tr></table></figure></li><li><p>修改表结构语法(alter…change|add|modify|drop)</p><p>alter….change用法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">修改表结构：如修改字段名，字段类型[约束]</span><br><span class="line">ALTER TABLE USER CHANGE 旧列名 新列名 VARCHAR(30) NOT NULL UNIQUE;</span><br><span class="line">如：ALTER TABLE USER  CHANGE NAME usename VARCHAR(30) NOT NULL UNIQUE;</span><br></pre></td></tr></table></figure><p>alter….add用法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">增加表结构：如增加字段，字段类型，约束</span><br><span class="line">alter table 表名 add 名称[约束]</span><br><span class="line">如：ALTER TABLE USER ADD sex INT(1) COMMENT &apos;性别&apos;;</span><br></pre></td></tr></table></figure><p>alter….modify用法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">修改表中的字段类型，长度，约束等</span><br><span class="line">alter table 表名 modify 修改成的约束</span><br><span class="line">如：ALTER TABLE employee MODIFY password varchar(30);</span><br></pre></td></tr></table></figure><p>alter…drop</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">删除表结构：如删除字段</span><br><span class="line">alter table 表名 drop column 名称</span><br><span class="line">如：alter table user drop column sex;</span><br></pre></td></tr></table></figure></li><li><p>删除表结构语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">drop table 表名</span><br><span class="line">如删除user表</span><br><span class="line">drop table user;</span><br></pre></td></tr></table></figure><p>删除表结构同时，又创建一张相同的一张新表。达到效果是清空表中数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TRUNCATE TABLE USER;</span><br></pre></td></tr></table></figure><p>​</p></li></ol><p><strong>七.Sql语言之DML</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">create table worker(</span><br><span class="line">id int primary key,</span><br><span class="line">name varchar(100) not null,</span><br><span class="line">gender varchar(10) not null,</span><br><span class="line">birthday date,</span><br><span class="line">salary float(10,2),</span><br><span class="line">entry_date date,</span><br><span class="line">resume text</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">#需求</span><br><span class="line">1.插入三条语句</span><br><span class="line">2.将所有员工薪水修改为5000元。</span><br><span class="line">3.将姓名为’zs’的员工薪水修改为3000元。</span><br><span class="line">4.将姓名为’james’的员工薪水修改为4000元,性别改为男。</span><br><span class="line">5.将&apos;hellen&apos;的薪水在原有基础上增加1000元。</span><br><span class="line">6.删除表中名称为’zs’的记录。</span><br><span class="line">7.删除表中所有记录。</span><br></pre></td></tr></table></figure><p>1.insert语句（增加）</p><p>语法结构如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">insert into 表名 (列名1，列名2，列名3....) values(值1，值2，值3...);</span><br><span class="line">如：</span><br><span class="line">insert into worker(id,name,gender,birthday,salary,entry_date,resume)</span><br><span class="line">values(2,&apos;jack&apos;,&apos;男&apos;，&apos;1993-06-06&apos;,5000.8,&apos;2013-07-07&apos;,&apos;我是XXX&apos;);</span><br></pre></td></tr></table></figure><p>注意：SQL语句中字符类型及日期类型都要使用单引号引起来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">如果是全字段插值，列表可以省略</span><br><span class="line">insert into 表名 values(值1，值2，值3...);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">如果非全字段插值，列表一定要指定，且要和值一一对应</span><br><span class="line">INSERT INTO worker (id,NAME,gender) VALUES(5,&apos;james&apos;,&apos;男&apos;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">执行一条插入语句，同时插入多条值</span><br><span class="line">INSERT INTO worker (id,NAME,gender) VALUES(6,&apos;kevin&apos;,&apos;男&apos;),(7,&apos;mac&apos;,&apos;男&apos;);</span><br></pre></td></tr></table></figure><p>2.update语句（改）</p><p>语法结构如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">update 表名 set 列名1 = 值1，列名2=值2，.... where 条件限定 </span><br><span class="line"></span><br><span class="line">更新表中的全部数据</span><br><span class="line">#姓别全改成女</span><br><span class="line">update worker set gender = &apos;女&apos;;</span><br><span class="line"></span><br><span class="line">#把id=1的该条记录gender改为男</span><br><span class="line">UPDATE worker SET gender =&apos;男&apos; WHERE id = 1;</span><br><span class="line"></span><br><span class="line">#将姓名为’james’的员工薪水修改为4000元,性别改为男。</span><br><span class="line">update worker set salary =4000.0,gender=&apos;男&apos; where name = &apos;james&apos;</span><br><span class="line"></span><br><span class="line">#将&apos;hellen&apos;的薪水在原有基础上增加1000元。</span><br><span class="line">update worker set salary=salary+1000 where name=&apos;hellen&apos;;</span><br></pre></td></tr></table></figure><p>3.delete语句（删）</p><p>语法结构如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">delete from 表名 where 条件</span><br><span class="line"></span><br><span class="line">#删除ID为7的员工</span><br><span class="line">delete from worker where id = 7;</span><br><span class="line"></span><br><span class="line">#删除表中所有记录。</span><br><span class="line">delete from worker;</span><br></pre></td></tr></table></figure><p><strong>八.Sql语言之DQL</strong></p><p><strong>学生表STU</strong>（用于DQL查询）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE stu (</span><br><span class="line">sidCHAR(6),</span><br><span class="line">snameVARCHAR(50),</span><br><span class="line">ageINT,</span><br><span class="line">genderVARCHAR(50)</span><br><span class="line">);</span><br><span class="line">#添加数据</span><br><span class="line">INSERT INTO stu VALUES(&apos;S_1001&apos;, &apos;liuYi&apos;, 35, &apos;male&apos;);</span><br><span class="line">INSERT INTO stu VALUES(&apos;S_1002&apos;, &apos;chenEr&apos;, 15, &apos;female&apos;);</span><br><span class="line">INSERT INTO stu VALUES(&apos;S_1003&apos;, &apos;zhangSan&apos;, 95, &apos;male&apos;);</span><br><span class="line">INSERT INTO stu VALUES(&apos;S_1004&apos;, &apos;liSi&apos;, 65, &apos;female&apos;);</span><br><span class="line">INSERT INTO stu VALUES(&apos;S_1005&apos;, &apos;wangWu&apos;, 55, &apos;male&apos;);</span><br><span class="line">INSERT INTO stu VALUES(&apos;S_1006&apos;, &apos;zhaoLiu&apos;, 75, &apos;female&apos;);</span><br><span class="line">INSERT INTO stu VALUES(&apos;S_1007&apos;, &apos;sunQi&apos;, 25, &apos;male&apos;);</span><br><span class="line">INSERT INTO stu VALUES(&apos;S_1008&apos;, &apos;zhouBa&apos;, 45, &apos;female&apos;);</span><br><span class="line">INSERT INTO stu VALUES(&apos;S_1009&apos;, &apos;wuJiu&apos;, 85, &apos;male&apos;);</span><br><span class="line">INSERT INTO stu VALUES(&apos;S_1010&apos;, &apos;zhengShi&apos;, 5, &apos;female&apos;);</span><br><span class="line">INSERT INTO stu VALUES(&apos;S_1011&apos;, &apos;xxx&apos;, NULL, NULL);</span><br><span class="line"></span><br><span class="line">#需求</span><br><span class="line"></span><br><span class="line">#条件查询</span><br><span class="line">1.查询性别为女，并且年龄50的记录</span><br><span class="line">2.查询学号为S_1001，或者姓名为liSi的记录</span><br><span class="line">3.查询学号为S_1001，S_1002，S_1003的记录</span><br><span class="line">4.查询学号不是S_1001，S_1002，S_1003的记录</span><br><span class="line">5.查询年龄为null的记录</span><br><span class="line">6.查询年龄在20到40之间的学生记录</span><br><span class="line">7.查询性别非男的学生记录</span><br><span class="line">8.查询姓名不为null的学生记录</span><br><span class="line">#模糊查询</span><br><span class="line">9.查询姓名由5个字母构成的学生记录</span><br><span class="line">10.查询姓名由5个字母构成，并且第5个字母为“i”的学生记录</span><br><span class="line">11.查询姓名以“z”开头的学生记录</span><br><span class="line">12.查询姓名中第2个字母为“i”的学生记录</span><br><span class="line">13.查询姓名中包含“a”字母的学生记录</span><br><span class="line">#排序</span><br><span class="line">14.查询所有学生记录，按年龄升序排序</span><br><span class="line">15.查询所有学生记录，按年龄降序排序</span><br></pre></td></tr></table></figure><p><strong>EMP员工表和DEPT部门表</strong>(用作DQL查询)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>1.语法结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select [distinct]字段1，字段2....from 表名</span><br><span class="line">[where 条件]</span><br><span class="line">[group by 分组条件]</span><br><span class="line">[having 子句]</span><br><span class="line">[order by 排序条件]</span><br><span class="line">[limit 分页条件]</span><br></pre></td></tr></table></figure><p>2.where条件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">and </span><br><span class="line">or </span><br><span class="line">between...and </span><br><span class="line">in</span><br><span class="line">not in</span><br><span class="line">IS NOT NULL</span><br><span class="line">is null</span><br><span class="line">like</span><br><span class="line"></span><br><span class="line">&gt;=</span><br><span class="line">&lt;=</span><br><span class="line">=</span><br><span class="line">!=或&lt;&gt;</span><br></pre></td></tr></table></figure><p>如下查询：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#条件查询</span><br><span class="line">1.查所学生记录</span><br><span class="line">select sid,sname,age,gender from stu;</span><br><span class="line">#查询需求的字段</span><br><span class="line">SELECT sid,sname FROM stu;</span><br><span class="line">#查寻时不要使用*</span><br><span class="line">SELECT * FROM stu;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#2.查询性别为女，并且年龄65的记录</span><br><span class="line">SELECT * FROM stu WHERE gender =&apos;female&apos; AND age=65;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#3.查询学号为S_1001，或者姓名为liSi的记录</span><br><span class="line">SELECT * FROM stu WHERE sid=&apos;S_1001&apos; OR sname=&apos;liSi&apos;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#4.查询学号为S_1001，S_1002，S_1003的记录</span><br><span class="line">SELECT * FROM stu WHERE sid = &apos;S_1001&apos; OR sid=&apos;S_1002&apos; OR sid = &apos;S_1003&apos;;</span><br><span class="line">SELECT * FROM stu WHERE sid IN (&apos;S_1001&apos;,&apos;S_1002&apos;,&apos;S_1003&apos;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#5.查询学号不是S_1001，S_1002，S_1003的记录</span><br><span class="line">SELECT * FROM stu WHERE sid NOT IN (&apos;S_1001&apos;,&apos;S_1002&apos;,&apos;S_1003&apos;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#6.查询年龄为null的记录</span><br><span class="line">SELECT * FROM stu WHERE age IS NULL;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#7.查询年龄在20到40之间的学生记录</span><br><span class="line">SELECT * FROM stu WHERE age BETWEEN 20 AND 40;</span><br><span class="line">SELECT * FROM stu WHERE age&gt;=20 AND age&lt;=40;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#8.查询性别非男的学生记录</span><br><span class="line">SELECT * FROM stu WHERE gender !=&apos;male&apos;;</span><br><span class="line">SELECT * FROM stu WHERE gender &lt;&gt;&apos;male&apos;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#9.查询姓名不为null的学生记录</span><br><span class="line">SELECT * FROM stu WHERE sname IS NOT NULL;</span><br></pre></td></tr></table></figure><p>3.like模糊查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">下划线_:表示精确匹配一位</span><br><span class="line">百分号%：表示匹配所有位</span><br></pre></td></tr></table></figure><p>如下查询：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#模糊查询</span><br><span class="line">#10.查询姓名由5个字母构成的学生记录</span><br><span class="line">SELECT * FROM stu WHERE sname LIKE &apos;_____&apos;;</span><br><span class="line"></span><br><span class="line">#11.查询姓名由5个字母构成，并且第5个字母为“i”的学生记录</span><br><span class="line">SELECT * FROM stu WHERE sname LIKE &apos;____i&apos;;</span><br><span class="line"></span><br><span class="line">#12.查询姓名以“z”开头的学生记录</span><br><span class="line">select * from stu where sname like &apos;z%&apos;</span><br><span class="line"></span><br><span class="line">#13.查询姓名中第2个字母为“i”的学生记录</span><br><span class="line">select * from stu where sname like &apos;_i%&apos;</span><br><span class="line"></span><br><span class="line">#14.查询姓名中包含“a”字母的学生记录</span><br><span class="line">select * from stu where sname like &apos;%a%&apos;</span><br></pre></td></tr></table></figure><p>4.order 排序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">order by 字段 ASC|DESC</span><br><span class="line">ASC:升序排序</span><br><span class="line">DESC:降序排序</span><br></pre></td></tr></table></figure><p>如下查询：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#排序</span><br><span class="line">15.查询所有学生记录，按年龄升序排序</span><br><span class="line">select * from stu order by age asc;</span><br><span class="line"></span><br><span class="line">#16.查询所有学生记录，按年龄降序排序</span><br><span class="line">select * from stu order by age desc;</span><br><span class="line"></span><br><span class="line">#17.查询性别为felmale，对结果进行降序排序</span><br><span class="line">SELECT * FROM stu WHERE gender =&apos;female&apos; ORDER BY age DESC;</span><br><span class="line"></span><br><span class="line">#18.先按学生年纪升序排序，再按姓名降序排序</span><br><span class="line">SELECT * FROM stu ORDER BY age ASC , sname DESC;</span><br></pre></td></tr></table></figure><p>5.distinct 去重复查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select distinct 字段... from 表 [where 条件]</span><br><span class="line">什么是重复的记录？？</span><br><span class="line">查询出的多条记录，他们列值都相同，称为重复性记录</span><br><span class="line"></span><br><span class="line">#19.对学生性别进行去重复查询</span><br><span class="line">SELECT DISTINCT gender FROM stu;</span><br></pre></td></tr></table></figure><p>6.添加别名查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">给字段超别名，以达到区分字段的作用</span><br><span class="line">#20.给学生表四个字段起别名</span><br><span class="line">select sid 学号，sname 姓名，gender 性别，age 年龄 from stu;</span><br><span class="line">单引号引起别名也可以</span><br><span class="line">SELECT sid &apos;学号&apos;,sname &apos;姓名&apos;,gender &apos;性别&apos;,age &apos;年龄&apos; FROM stu;</span><br><span class="line"></span><br><span class="line">给表起别名，以达到区分表名的作用</span><br><span class="line">#21给stu表别名为s</span><br><span class="line">SELECT * FROM stu AS s;</span><br><span class="line">SELECT sid,sname FROM stu AS s;</span><br><span class="line">SELECT s.sid,s.sname FROM stu AS s;</span><br><span class="line">#as还可以省略不写</span><br><span class="line">SELECT s.sid,s.sname FROM stu s;</span><br></pre></td></tr></table></figure><p>7.聚合函数</p><p>作用：对各字段进行统计，一般和分组条件一起使用，where条件中不能出现聚合函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">max()</span><br><span class="line">min()</span><br><span class="line">sum()</span><br><span class="line">avg()</span><br><span class="line">count()</span><br></pre></td></tr></table></figure><p>如下查询：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#22.查询最大年龄和最小年龄</span><br><span class="line"></span><br><span class="line">select max(age),min(age) from stu;</span><br><span class="line"></span><br><span class="line">#23 查询学生的总人数</span><br><span class="line">select count(*) from stu;</span><br><span class="line"></span><br><span class="line">#24.查询年龄的平均值,年龄的和</span><br><span class="line">SELECT AVG(age)，sum(age) FROM stu;</span><br></pre></td></tr></table></figure><p>8.group by分组查询</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">group by 字段名</span><br></pre></td></tr></table></figure><p>如下查询：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">25.统计男生和女生各多少人？</span><br><span class="line">select gender,count(*) from stu group by gender; </span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">select后面字段，一定是聚合函数和分组字段，其他字段无意义</span><br></pre></td></tr></table></figure><p>9.having 子句</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">having 过滤条件</span><br></pre></td></tr></table></figure><p>如下查询：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">26.按性别进行分组，然后对性别为空的组进行过滤</span><br><span class="line">SELECT gender,COUNT(*) FROM stu GROUP BY gender HAVING gender IS NOT NULL;</span><br><span class="line">注意：</span><br><span class="line">having子句中的条件一定是聚合函数或分组条件</span><br><span class="line"></span><br><span class="line">27.先按性别进行分组，统计各性别人数&gt;5人的性别</span><br><span class="line">SELECT gender,COUNT(*) FROM stu GROUP  BY gender HAVING COUNT(*)&gt;=5;</span><br></pre></td></tr></table></figure><p>10.limit分页</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">limit 开始下标，最大记录数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#分页limit查询</span><br><span class="line">#28.如：从第二条记录开始查询出5条记录</span><br><span class="line">select * from stu limit 1,5;</span><br><span class="line"></span><br><span class="line">#29.查询前5条记录</span><br><span class="line">SELECT * FROM stu  ORDER BY sid ASC LIMIT 0,5;</span><br><span class="line">SELECT * FROM stu ORDER BY sid ASC LIMIT 5;</span><br></pre></td></tr></table></figure><p><strong>九.作业</strong></p><ol><li><p>请创建成绩表并添加测试数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">NO   NAME  SUBJECT SCORE</span><br><span class="line">编号姓名科目分数</span><br><span class="line">1张三数学90</span><br><span class="line">2张三语文50</span><br><span class="line">3张三地理40</span><br><span class="line">4李四语文55</span><br><span class="line">5李四政治45</span><br><span class="line">6王五政治30</span><br><span class="line">7李四数学80</span><br><span class="line">8王五语文70</span><br><span class="line"></span><br><span class="line">#查询需求如下：</span><br><span class="line">1.查询两门及两门以上不及格的学生姓名</span><br><span class="line">2.查询学生平均分</span><br><span class="line">3.查询姓名是张三的学生成绩和</span><br><span class="line">4.将学生信息按照 分数倒序</span><br><span class="line">5.获取学生信息中 分数最低的学生姓名和分数最高的学生姓名</span><br><span class="line">6.查询两门及两门以上不及格同学的平均分。</span><br></pre></td></tr></table></figure></li><li><p>对EMP表进行查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">#创建雇员表</span><br><span class="line">CREATE TABLE emp(</span><br><span class="line">empnoINT,</span><br><span class="line">enameVARCHAR(50),</span><br><span class="line">jobVARCHAR(50),</span><br><span class="line">mgrINT,</span><br><span class="line">hiredateDATE,</span><br><span class="line">salDECIMAL(7,2),</span><br><span class="line">commdecimal(7,2),</span><br><span class="line">deptnoINT</span><br><span class="line">) ;</span><br><span class="line">#添加数据</span><br><span class="line">INSERT INTO emp values(7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20);</span><br><span class="line">INSERT INTO emp values(7499,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-02-20&apos;,1600,300,30);</span><br><span class="line">INSERT INTO emp values(7521,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-02-22&apos;,1250,500,30);</span><br><span class="line">INSERT INTO emp values(7566,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,&apos;1981-04-02&apos;,2975,NULL,20);</span><br><span class="line">INSERT INTO emp values(7654,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-09-28&apos;,1250,1400,30);</span><br><span class="line">INSERT INTO emp values(7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,&apos;1981-05-01&apos;,2850,NULL,30);</span><br><span class="line">INSERT INTO emp values(7782,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,&apos;1981-06-09&apos;,2450,NULL,10);</span><br><span class="line">INSERT INTO emp values(7788,&apos;SCOTT&apos;,&apos;ANALYST&apos;,7566,&apos;1987-04-19&apos;,3000,NULL,20);</span><br><span class="line">INSERT INTO emp values(7839,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,&apos;1981-11-17&apos;,5000,NULL,10);</span><br><span class="line">INSERT INTO emp values(7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-09-08&apos;,1500,0,30);</span><br><span class="line">INSERT INTO emp values(7876,&apos;ADAMS&apos;,&apos;CLERK&apos;,7788,&apos;1987-05-23&apos;,1100,NULL,20);</span><br><span class="line">INSERT INTO emp values(7900,&apos;JAMES&apos;,&apos;CLERK&apos;,7698,&apos;1981-12-03&apos;,950,NULL,30);</span><br><span class="line">INSERT INTO emp values(7902,&apos;FORD&apos;,&apos;ANALYST&apos;,7566,&apos;1981-12-03&apos;,3000,NULL,20);</span><br><span class="line">INSERT INTO emp values(7934,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,&apos;1982-01-23&apos;,1300,NULL,10);</span><br><span class="line"></span><br><span class="line"># 创建部门表</span><br><span class="line"></span><br><span class="line">   CREATE TABLE dept(</span><br><span class="line">   deptnoINT,</span><br><span class="line">   dnamevarchar(14),</span><br><span class="line">   locvarchar(13)</span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line"># 添加数据</span><br><span class="line"></span><br><span class="line">   INSERT INTO dept values(10, &apos;ACCOUNTING&apos;, &apos;NEW YORK&apos;);</span><br><span class="line">   INSERT INTO dept values(20, &apos;RESEARCH&apos;, &apos;DALLAS&apos;);</span><br><span class="line">   INSERT INTO dept values(30, &apos;SALES&apos;, &apos;CHICAGO&apos;);</span><br><span class="line">   INSERT INTO dept values(40, &apos;OPERATIONS&apos;, &apos;BOSTON&apos;);</span><br><span class="line"></span><br><span class="line">## 需求：</span><br><span class="line"></span><br><span class="line"># 计算</span><br><span class="line"></span><br><span class="line">   1.查看雇员的月薪与佣金之和</span><br><span class="line"># 排序</span><br><span class="line">   2.查询所有雇员，按月薪降序排序，如果月薪相同时，按编号升序排序</span><br><span class="line"># 统计查询</span><br><span class="line">   3.查询emp表中记录数</span><br><span class="line">   4.查询emp表中有佣金的人数</span><br><span class="line">   5.查询emp表中月薪大于2500的人数</span><br><span class="line">   6.统计月薪与佣金之和大于2500元的人数</span><br><span class="line">   7. 查询有佣金的人数，以及有领导的人数</span><br><span class="line">   8.查询所有雇员月薪和</span><br><span class="line">   9.查询所有雇员月薪和，以及所有雇员佣金和</span><br><span class="line">   10.查询所有雇员月薪+佣金和（ifNUll(null,0)）</span><br><span class="line">   11.统计所有员工平均工资</span><br><span class="line">   12.查询最高工资和最低工资</span><br><span class="line"></span><br><span class="line"># 分组查询</span><br><span class="line">   13.查询每个部门的部门编号和每个部门的工资和</span><br><span class="line">   14.查询每个部门的部门编号以及每个部门的人数</span><br><span class="line">   15.查询每个部门的部门编号以及每个部门工资大于1500的人数</span><br><span class="line"></span><br><span class="line"># having子句</span><br><span class="line">   16.查询工资总和大于9000的部门编号以及工资和</span><br><span class="line"># limit分页</span><br><span class="line">   17.查询5行记录，起始行从0开始</span><br><span class="line">   18.查询10行记录，起始行从3开始</span><br><span class="line">   19.找出奖金高于工资的雇员 </span><br><span class="line">   20.找出奖金高于工资60%的雇员</span><br><span class="line">   21.找出部门10中所有经理和部门20中所有店员的信息</span><br><span class="line">   22.找出部门10中所有经理(MANAGER)，部门20中所有店员，既不是经理又不是店员但其5.薪资大于或等于2000的所有员工的信息。</span><br><span class="line">   23.查询没有奖金或者奖金低于100的员工信息</span><br><span class="line">   24.查询姓名不带”R”的员工姓名</span><br><span class="line">   25.显示员工的姓名和入职时间，根据入职时间，将最老的员工排放在最前面。</span><br><span class="line">   26.显示所有员工的姓名、工作和工资，按照工作的降序排序，若工作相同则按工资升序排序。</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;mysql数据库基础&quot;&gt;&lt;a href=&quot;#mysql数据库基础&quot; class=&quot;headerlink&quot; title=&quot;mysql数据库基础&quot;&gt;&lt;/a&gt;mysql数据库基础&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;今日内容&lt;/strong&gt;&lt;/p&gt;
&lt;figure clas
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://kongxianghe.top/2018/10/23/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E9%AB%98%E7%BA%A7/"/>
    <id>http://kongxianghe.top/2018/10/23/mysql数据库高级/</id>
    <published>2018-10-23T14:06:03.482Z</published>
    <updated>2018-07-09T06:15:55.862Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mysql数据库高查询"><a href="#Mysql数据库高查询" class="headerlink" title="Mysql数据库高查询"></a>Mysql数据库高查询</h1><p><strong>今日内容</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1、SQL语言数据的完整性</span><br><span class="line">实体完整性</span><br><span class="line">域完整性</span><br><span class="line">引用完整性</span><br><span class="line">2、多表关联查询</span><br><span class="line">概念</span><br><span class="line">表关系分类</span><br><span class="line">联合查询</span><br><span class="line">隐式内连接查询</span><br><span class="line">显示内连接查询</span><br><span class="line">外连接查询</span><br><span class="line">自连接查询</span><br><span class="line">三表以上关联查询</span><br><span class="line">3、子查询</span><br><span class="line">概念</span><br><span class="line">用法</span><br><span class="line">4、视图</span><br><span class="line">概念</span><br><span class="line">用法</span><br><span class="line">5、了解SQL优化</span><br><span class="line">6、作业</span><br></pre></td></tr></table></figure><p><strong>一.SQL语言数据的完整性</strong></p><p>作用：保证用户输入的数据保存到数据库中是正确的。</p><p>注意：确保数据的完整性 最好在创建表时或表中无数据时给表中添加约束</p><p>数据完整性分类：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 实体完整性</span><br><span class="line">- 域完整性</span><br><span class="line">- 引用完整性</span><br></pre></td></tr></table></figure><ol><li><p>实体完整性</p><p>实体：即表中的一行(一条记录)代表一个实体（entity）</p><p>作用：标识每一行数据不重复。</p><p>约束类型：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">主键约束（primary key） </span><br><span class="line">唯一约束(unique)  </span><br><span class="line">自动增长列(auto_increment)</span><br></pre></td></tr></table></figure><p><strong>主键约束</strong>：每个表中要有一个主键（数据唯一，且不能为null）。</p><p>方式一：创建表时添加约束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">create table user(</span><br><span class="line">id int(5) primary key,</span><br><span class="line">name varchar(20)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">create table user(</span><br><span class="line">id int(5),</span><br><span class="line">name varchar(20),</span><br><span class="line">primary key(id)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>方式二：创建表时添加联合主键约束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table user(</span><br><span class="line">id int(5),</span><br><span class="line">name varchar(20),</span><br><span class="line">primary key(id,name)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>方式三：创建表后，添加约束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">createa table user(</span><br><span class="line">id int(5),</span><br><span class="line">name varchar(20)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">alter table user add constraint 别名 primary key (id)</span><br><span class="line"></span><br><span class="line">alter table user add  primary key (id)</span><br></pre></td></tr></table></figure><p>删除主键约束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 drop primary key</span><br></pre></td></tr></table></figure><p>​</p><p><strong>唯一性约束：</strong>数据不能重复</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table user(</span><br><span class="line">id int(5) primary key,</span><br><span class="line">name varchar(20) unique//唯一性约束</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><strong>主键自增(auto_increment)：</strong>给主键添加自动增长的数值，列只能是整数类型 </p><p>oracle 不支持主键自增，代替使用序列sequence</p><p>sqlserver 支持主键自增，关键字identity</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create table user(</span><br><span class="line">id int(5) primary key auto_increment,//表示主键自增，该键数据库底层给于维护</span><br><span class="line">name varchar(20)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">//insert时，id值不需要给值</span><br><span class="line">insert into user (name) values(&apos;张三&apos;);</span><br></pre></td></tr></table></figure></li><li><p>域完整性</p><p>作用：限制此单元格的数据正确，不对照此列的其它单元格比较</p><p>约束类型：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">数据类型 </span><br><span class="line">非空约束（not null） </span><br><span class="line">默认值约束(default)</span><br></pre></td></tr></table></figure><p><strong>数据类型</strong>：略</p><p><strong>非空约束：</strong>not null字段不能为空</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table user(</span><br><span class="line">id int(5) primary key auto_increment,</span><br><span class="line">name varchar(20) not null//非空约束</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><strong>默认值约束：</strong>    default给字段设置默认值，有值时不使用默认值，无值时使用默认值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">create table user(</span><br><span class="line">id int(5) primary key auto_increment,</span><br><span class="line">name varchar(20) not null default &apos;admin&apos;,</span><br><span class="line">age int(3)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">INSERT INTO user7 (age) VALUES (20);</span><br><span class="line">INSERT INTO user7 (NAME,age) VALUES (&apos;张三&apos;,20);</span><br></pre></td></tr></table></figure></li><li><p>引用完整性</p><p>作用：多张表关联时，一般使用外键约束，FOREIGN KEY </p><p>约束类型：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">外键约束</span><br></pre></td></tr></table></figure><p><strong>外键约束：</strong></p><p>方式一：创建表时添加外键</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#先创建班级表class</span><br><span class="line">create table class(</span><br><span class="line">id int(5) primary key,</span><br><span class="line">cname varchar(20)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">#创建学生表stu,stu依赖于class的存在</span><br><span class="line">create table stu(</span><br><span class="line">id int(5) primary key,</span><br><span class="line">sname varchar(20),</span><br><span class="line">cid int(5),</span><br><span class="line">foreign key (cid) references class (id) //外键声明</span><br><span class="line">);</span><br><span class="line">注意：一般从表外键依赖主表的主键</span><br></pre></td></tr></table></figure><p>方式二：创建关联表后添加外键</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#因为外键声明是在创建表之后，所以表的创建可以没有次序</span><br><span class="line"></span><br><span class="line">create table stu(</span><br><span class="line">id int(5) primary key,</span><br><span class="line">sname varchar(20),</span><br><span class="line">cid int(5)</span><br><span class="line">）;</span><br><span class="line"></span><br><span class="line">create table class(</span><br><span class="line">id int(5) primary key,</span><br><span class="line">cname varchar(20)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">//外键声明</span><br><span class="line"></span><br><span class="line">alter table 表名 add constraint 别名 foreign key(外键) references 主表（主键）</span><br><span class="line"></span><br><span class="line">如：</span><br><span class="line">alter table stu add constraint fk_cid foreign key (cid) references class(id);</span><br></pre></td></tr></table></figure><p><strong>删除外键关系</strong>(通过别名删除)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 drop  foreign key 别名</span><br><span class="line">如：</span><br><span class="line">ALTER TABLE stu DROP FOREIGN KEY fk_cid;</span><br></pre></td></tr></table></figure></li></ol><p><strong>二.多表关联查询</strong>（重点）</p><ol><li><p>概念 </p><p>大部分的表和表之间总存在着外键关联关系，当查询一张表记录时，关联查询另一张表中的数据信息，称为表与表之间的关联查询。</p><ol start="2"><li>表关系分类</li></ol><p><strong>一对一</strong>：表与表之的记录是一一对应的关系，比如学生和学生证关系属于一对一关系，公民信息表与身份证信息表也是一对一关系。</p><p><strong>一对多</strong>：表中一条记录对应另一张表的中多条记录。如班级和学生的关系就是一对多关系，即一个班级对应多条学生记录。</p><p><strong>多对多</strong>：表中多条记录对应着另一张表中的多条记录。如老师和学生，或学生和学科关系都属性多对多关系。</p><ol start="3"><li>联合查询</li></ol><p>多张表之间的相同类型属性显示成一个结果集。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">union 联合</span><br><span class="line">union all 联合所有</span><br></pre></td></tr></table></figure><p>如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#union 把两相同类型数据显示成一列，注意：重复性记录只记录一条</span><br><span class="line">SELECT sal FROM emp </span><br><span class="line">UNION</span><br><span class="line">SELECT comm FROM emp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#union all 把两相同类型数据显示成一列，注意：重复性记录都会显示</span><br><span class="line">SELECT sal FROM emp </span><br><span class="line">UNION ALL</span><br><span class="line">SELECT comm FROM emp;</span><br><span class="line"></span><br><span class="line">#不同表相的联合查询</span><br><span class="line">SELECT deptno FROM emp</span><br><span class="line">UNION ALL</span><br><span class="line">SELECT deptno FROM dept;</span><br><span class="line"></span><br><span class="line">#不同类型的列，不要联合查询</span><br></pre></td></tr></table></figure><p>4.隐式内连接查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#笛卡尔积</span><br><span class="line">该查询结果没有现实意义，以后多表查询不要出现笛卡尔积</span><br><span class="line">该查询的原理：一张表的一条记录乘以另一张表的记录，所得到机械的结果集</span><br></pre></td></tr></table></figure><p>如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#去除笛卡尔积中重复的部份，取等值部份（主键和外键相等的部份）</span><br><span class="line">SELECT * FROM emp,dept WHERE emp.`deptno` = dept.`deptno`;</span><br></pre></td></tr></table></figure></li><li><p>显示内连接查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[inner] join 显示内连接</span><br></pre></td></tr></table></figure><p>如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">select * from 表1 inner join 表2 on 连接条件</span><br><span class="line">select * from emp [inner] join dept on emp.deptno = dept.deptno;</span><br><span class="line"></span><br><span class="line">#查询7369号员工的姓名，薪水及所在的部门名称</span><br><span class="line"></span><br><span class="line">select ename,sal,dname from emp </span><br><span class="line">inner join dept </span><br><span class="line">on emp.deptno = dept.deptno </span><br><span class="line">where empno=7369;</span><br><span class="line"></span><br><span class="line">#也可以起别名</span><br><span class="line">SELECT e.ename,e.sal,d.dname FROM emp e</span><br><span class="line">INNER JOIN dept d</span><br><span class="line">ON e.deptno = d.deptno </span><br><span class="line">WHERE e.empno=7369;</span><br></pre></td></tr></table></figure><ol start="6"><li>外连接查询</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">left [outer] join 左外连接</span><br><span class="line">right [outer] join 右外连接</span><br></pre></td></tr></table></figure><p>如下查询：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#查询所有部门名称及该部门下员工的姓名</span><br><span class="line">select dname,ename from dept left join emp on dept.deptno = emp.deptno;</span><br><span class="line"></span><br><span class="line">#查询公司的员工姓名，及所在的部门名称</span><br><span class="line">SELECT ename,dname FROM emp LEFT JOIN dept ON dept.deptno = emp.deptno;</span><br><span class="line">SELECT ename,dname FROM dept RIGHT JOIN emp ON dept.deptno = emp.deptno;</span><br></pre></td></tr></table></figure></li></ol><ol start="7"><li><p>自连接查询</p><p>​    概念：表示表自己和自己连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查询7369号员工的姓名，以及其上司的姓名</span><br><span class="line">select e1.ename 员工姓名,e2.ename 上司姓名 from emp e1 join emp e2 on e1.mgr = e2.empno;</span><br><span class="line"></span><br><span class="line">#注意起别名</span><br></pre></td></tr></table></figure></li><li><p>三表以上关联查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#查询7369号员工的姓名，身份证名称，部门名称</span><br><span class="line">SELECT ename,cardname,dname FROM emp </span><br><span class="line">LEFT JOIN empcard ON emp.`empno` = empcard.`empno`</span><br><span class="line">LEFT JOIN dept ON emp.`deptno` = dept.`deptno`</span><br><span class="line">WHERE emp.empno = 7369;</span><br></pre></td></tr></table></figure></li></ol><p><strong>三.子查询</strong></p><ol><li><p>概念：</p><p>一条完整的select语句之中包含其他select语句，这种查询方式称之为子查询</p><p>其中sub select语句可以出现的位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.查询字段中出现</span><br><span class="line">2.where条件中</span><br><span class="line">3.having子句中</span><br></pre></td></tr></table></figure></li><li><p>用法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#查询工资大于JONES工资所有员工信息，其中JONES工资需要一条子查询</span><br><span class="line">步骤1: select * from emp where sal&gt;2975</span><br><span class="line">步骤2: select sal from emp where ename=&apos;JONES&apos;</span><br><span class="line">步骤3: select * from emp where sal&gt;(select sal from emp where ename=&apos;JONES&apos;);</span><br><span class="line"></span><br><span class="line">#查询与SCOTT同一个部门的员工</span><br><span class="line">步骤1：select * from emp where deptno = 20;</span><br><span class="line">步骤2: select deptno from emp where ename = &apos;SCOTT&apos;;</span><br><span class="line">步骤3: select * from emp where deptno = (select deptno from emp where ename = &apos;SCOTT&apos;);</span><br><span class="line">注意：子查询返回的结果集是一条，可以使用=，否则请使用in</span><br><span class="line"></span><br><span class="line">#工资高于30号部门所有人的员工信息</span><br><span class="line">SELECT * FROM emp WHERE sal&gt;(SELECT MAX(sal) FROM emp WHERE deptno = 30)</span><br><span class="line">SELECT * FROM emp WHERE sal &gt; ALL (SELECT sal FROM emp WHERE deptno=30)</span><br><span class="line"></span><br><span class="line">#工资高于30号部门任意一个人的员工信息（大于最小值）</span><br><span class="line">SELECT * FROM emp WHERE sal &gt; any (SELECT sal FROM emp WHERE deptno=30)</span><br></pre></td></tr></table></figure></li></ol><p><strong>四.视图View</strong></p><p>​     作用：对于复杂查询，把结果集固定下来，以便下一次使用。</p><p>​     语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create or replace view 视图名 as (复杂查询)</span><br></pre></td></tr></table></figure><p>​    代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#从视图中查询所有部门名称及该部门下员工的姓名</span><br><span class="line">create or replace view myview as (</span><br><span class="line">select dname,ename from dept left join emp on dept.deptno = emp.deptno</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">#再次查询，从视图中查询</span><br><span class="line">SELECT * FROM myview;</span><br></pre></td></tr></table></figure><p><strong>五.了解SQL优化(尽量使用索引列为查询条件)</strong></p><p>1.应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描。</p><p>2.对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。 </p><p>3.应尽量避免在 where 子句中使用!=或&lt;&gt;操作符，否则将引擎放弃使用索引而进行全表扫描。 </p><p>4.应尽量避免在 where 子句中使用 or 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描</p><p>5.in 和 not in 也要慎用，否则会导致全表扫描    </p><p>6.应尽量避免在 where 子句中对字段进行表达式操作</p><p>7.应尽量避免在where子句中对字段进行函数操作</p><p>8.很多时候用 exists 代替 in 是一个好的选择</p><p>9.尽量使用数字型字段</p><p>10.尽可能的使用 varchar/nvarchar 代替 char/nchar ，因为首先变长字段存储空间小，可以节省存储空间，其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些</p><p>11.任何地方都不要使用 select <em> from t ，用具体的字段列表代替“</em>”，不要返回用不到的任何字段。 </p><p>12.尽量使用表变量来代替临时表。如果表变量包含大量数据，请注意索引非常有限（只有主键索引）。 </p><p>13.避免频繁创建和删除临时表，以减少系统表资源的消耗。 </p><p>14.在新建临时表时，如果一次性插入数据量很大，那么可以使用 select into 代替 create table，避免造成大量 log ，以提高速度；如果数据量不大，为了缓和系统表的资源，应先create table，然后insert。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Select * Into new_table_name from old_table_name</span><br><span class="line">MySQL不支持Select Into语句直接备份表结构和数据</span><br><span class="line">替代做法：</span><br><span class="line">Create table new_table_name (Select * from old_table_name)</span><br><span class="line">copy表结构及数据</span><br></pre></td></tr></table></figure><p><strong>六.作业</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line">数据库结构</span><br><span class="line">创建四张表 分别存储 学生信息 课程信息 分数 讲师信息表 存储相应数据</span><br><span class="line">学生信息表 Student</span><br><span class="line">字段名字段类型字段约束 / 含义</span><br><span class="line">SnoVarchar(3)Not null  / 学员编号</span><br><span class="line">SnameVarchar(4)Not null  / 学员姓名 </span><br><span class="line">SsexVarchar(2)Not null  / 性别</span><br><span class="line">SbirthdayDatetime生日</span><br><span class="line">ClassnumVarchar(5)班级号</span><br><span class="line"></span><br><span class="line">CREATE TABLE STUDENT</span><br><span class="line">(</span><br><span class="line">SNO VARCHAR(3) NOT NULL,</span><br><span class="line">SNAME VARCHAR(4) NOT NULL,</span><br><span class="line">SSEX VARCHAR(2) NOT NULL,</span><br><span class="line">SBIRTHDAY DATETIME,</span><br><span class="line">CLASS VARCHAR(5)</span><br><span class="line">)</span><br><span class="line">课程信息表 course</span><br><span class="line">字段名字段类型字段约束 / 含义</span><br><span class="line">CnoVarchar(5)Not null / 课程编号</span><br><span class="line">CnameVarchar(10)Not null / 课程名称</span><br><span class="line">TnoVarchar(10)Not null / 授课老师编号</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CREATE TABLE COURSE</span><br><span class="line">(CNO VARCHAR(5) NOT NULL,</span><br><span class="line">CNAME VARCHAR(10) NOT NULL,</span><br><span class="line">TNO VARCHAR(10) NOT NULL)</span><br><span class="line">成绩表score</span><br><span class="line">字段名字段类型字段约束 / 含义</span><br><span class="line">SnoVarchar(3)Not null  / 学员编号</span><br><span class="line">CnoVarchar(5)Not null  / 课程编号</span><br><span class="line">DegreeDouble(3,1)Not null  / 分数</span><br><span class="line"></span><br><span class="line">CREATE TABLE SCORE</span><br><span class="line">(SNO VARCHAR(3) NOT NULL,</span><br><span class="line">CNO VARCHAR(5) NOT NULL,</span><br><span class="line">DEGREE NUMERIC(10, 1) NOT NULL)</span><br><span class="line">讲师表teacher</span><br><span class="line">字段名字段类型字段约束 / 含义</span><br><span class="line">TnoVarchar(3)Not null  / 讲师编号</span><br><span class="line">TnameVarchar(4)Not null  / 讲师姓名</span><br><span class="line">TsexVarchar(2)Not null  / 讲师性别</span><br><span class="line">TbirthdayDatetimeNot null  / 出生日期</span><br><span class="line">ProfVarchar(6)等级</span><br><span class="line">DepartVarchar(10)所属院系</span><br><span class="line"></span><br><span class="line">CREATE TABLE TEACHER</span><br><span class="line">(TNO VARCHAR(3) NOT NULL,</span><br><span class="line">TNAME VARCHAR(4) NOT NULL, TSEX VARCHAR(2) NOT NULL,</span><br><span class="line">TBIRTHDAY DATETIME NOT NULL, PROF VARCHAR(6),</span><br><span class="line">DEPART VARCHAR(10) NOT NULL)</span><br><span class="line"></span><br><span class="line">向表中存储数据</span><br><span class="line">INSERT INTO STUDENT (SNO,SNAME,SSEX,SBIRTHDAY,CLASS) VALUES (108 ,&apos;曾华&apos; ,&apos;男&apos; ,1977-09-01,95033);</span><br><span class="line">INSERT INTO STUDENT (SNO,SNAME,SSEX,SBIRTHDAY,CLASS) VALUES (105 ,&apos;匡明&apos; ,&apos;男&apos; ,1975-10-02,95031);</span><br><span class="line">INSERT INTO STUDENT (SNO,SNAME,SSEX,SBIRTHDAY,CLASS) VALUES (107 ,&apos;王丽&apos; ,&apos;女&apos; ,1976-01-23,95033);</span><br><span class="line">INSERT INTO STUDENT (SNO,SNAME,SSEX,SBIRTHDAY,CLASS) VALUES (101 ,&apos;李军&apos; ,&apos;男&apos; ,1976-02-20,95033);</span><br><span class="line">INSERT INTO STUDENT (SNO,SNAME,SSEX,SBIRTHDAY,CLASS) VALUES (109 ,&apos;王芳&apos; ,&apos;女&apos; ,1975-02-10,95031);</span><br><span class="line">INSERT INTO STUDENT (SNO,SNAME,SSEX,SBIRTHDAY,CLASS) VALUES (103 ,&apos;陆君&apos; ,&apos;男&apos; ,1974-06-03,95031);</span><br><span class="line">GO</span><br><span class="line">INSERT INTO COURSE(CNO,CNAME,TNO)VALUES (&apos;3-105&apos; ,&apos;计算机导论&apos;,825);</span><br><span class="line">INSERT INTO COURSE(CNO,CNAME,TNO)VALUES (&apos;3-245&apos; ,&apos;操作系统&apos; ,804);</span><br><span class="line">INSERT INTO COURSE(CNO,CNAME,TNO)VALUES (&apos;6-166&apos; ,&apos;数据电路&apos; ,856);</span><br><span class="line">INSERT INTO COURSE(CNO,CNAME,TNO)VALUES (&apos;9-888&apos; ,&apos;高等数学&apos; ,100);</span><br><span class="line">GO</span><br><span class="line">INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (103,&apos;3-245&apos;,86);</span><br><span class="line">INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (105,&apos;3-245&apos;,75);</span><br><span class="line">INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (109,&apos;3-245&apos;,68);</span><br><span class="line">INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (103,&apos;3-105&apos;,92);</span><br><span class="line">INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (105,&apos;3-105&apos;,88);</span><br><span class="line">INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (109,&apos;3-105&apos;,76);</span><br><span class="line">INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (101,&apos;3-105&apos;,64);</span><br><span class="line">INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (107,&apos;3-105&apos;,91);</span><br><span class="line">INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (108,&apos;3-105&apos;,78);</span><br><span class="line">INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (101,&apos;6-166&apos;,85);</span><br><span class="line">INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (107,&apos;6-106&apos;,79);</span><br><span class="line">INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (108,&apos;6-166&apos;,81);</span><br><span class="line">GO</span><br><span class="line">INSERT INTO TEACHER(TNO,TNAME,TSEX,TBIRTHDAY,PROF,DEPART) </span><br><span class="line">VALUES (804,&apos;李诚&apos;,&apos;男&apos;,&apos;1958-12-02&apos;,&apos;副教授&apos;,&apos;计算机系&apos;);</span><br><span class="line">INSERT INTO TEACHER(TNO,TNAME,TSEX,TBIRTHDAY,PROF,DEPART) </span><br><span class="line">VALUES (856,&apos;张旭&apos;,&apos;男&apos;,&apos;1969-03-12&apos;,&apos;讲师&apos;,&apos;电子工程系&apos;);</span><br><span class="line">INSERT INTO TEACHER(TNO,TNAME,TSEX,TBIRTHDAY,PROF,DEPART)</span><br><span class="line">VALUES (825,&apos;王萍&apos;,&apos;女&apos;,&apos;1972-05-05&apos;,&apos;助教&apos;,&apos;计算机系&apos;);</span><br><span class="line">INSERT INTO TEACHER(TNO,TNAME,TSEX,TBIRTHDAY,PROF,DEPART) </span><br><span class="line">VALUES (831,&apos;刘冰&apos;,&apos;女&apos;,&apos;1977-08-14&apos;,&apos;助教&apos;,&apos;电子工程系&apos;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1、 查询Student表中的所有记录的Sname、Ssex和Class列。</span><br><span class="line">2、 查询教师所有的单位即不重复的Depart列。</span><br><span class="line">3、 查询Student表的所有记录。</span><br><span class="line">4、 查询Score表中成绩在60到80之间的所有记录。</span><br><span class="line">5、 查询Score表中成绩为85，86或88的记录。</span><br><span class="line">6、 查询Student表中“95031”班或性别为“女”的同学记录。</span><br><span class="line">7、 以Class降序查询Student表的所有记录。</span><br><span class="line">8、 以Cno升序、Degree降序查询Score表的所有记录。</span><br><span class="line">9、 查询“95031”班的学生人数。</span><br><span class="line">10、查询Score表中的最高分的学生学号和课程号。</span><br><span class="line">11、查询‘3-105’号课程的平均分。</span><br><span class="line">12、查询Score表中至少有5名学生选修的并以3开头的课程的平均分数。</span><br><span class="line">13、查询最低分大于70，最高分小于90的Sno列。</span><br><span class="line">14、查询所有学生的Sname、Cno和Degree列。</span><br><span class="line">15、查询所有学生的Sno、Cname和Degree列。</span><br><span class="line">16、查询所有学生的Sname、Cname和Degree列。</span><br><span class="line">17、查询“95033”班所选课程的平均分。</span><br><span class="line">18、假设使用如下命令建立了一个grade表：</span><br><span class="line">create table grade(low number(3,0),upp number(3),rank char(1));</span><br><span class="line">insert into grade values(90,100,’A’);</span><br><span class="line">insert into grade values(80,89,’B’);</span><br><span class="line">insert into grade values(70,79,’C’);</span><br><span class="line">insert into grade values(60,69,’D’);</span><br><span class="line">insert into grade values(0,59,’E’);</span><br><span class="line">commit;</span><br><span class="line">现查询所有同学的Sno、Cno和rank列。</span><br><span class="line">19、查询选修“3-105”课程的成绩高于“109”号同学成绩的所有同学的记录。</span><br><span class="line">20、查询score中选学一门以上课程的同学中分数为非最高分成绩的记录。</span><br><span class="line">21、查询成绩高于学号为“109”、课程号为“3-105”的成绩的所有记录。</span><br><span class="line">22、查询和学号为108的同学同年出生的所有学生的Sno、Sname和Sbirthday列。</span><br><span class="line">23、查询“张旭“教师任课的学生成绩。</span><br><span class="line">24、查询选修某课程的同学人数多于5人的教师姓名。</span><br><span class="line">25、查询95033班和95031班全体学生的记录。</span><br><span class="line">26、查询存在有85分以上成绩的课程Cno.</span><br><span class="line">27、查询出“计算机系“教师所教课程的成绩表。</span><br><span class="line">28、查询“计算机系”与“电子工程系“不同职称的教师的Tname和Prof。</span><br><span class="line">29、查询选修编号为“3-105“课程且成绩至少高于选修编号为“3-245”的同学的Cno、Sno和Degree,并按Degree从高到低次序排序。</span><br><span class="line">30、查询选修编号为“3-105”且成绩高于选修编号为“3-245”课程的同学的Cno、Sno和Degree.</span><br><span class="line">31、查询所有教师和同学的name、sex和birthday.</span><br><span class="line">32、查询所有“女”教师和“女”同学的name、sex和birthday.</span><br><span class="line">33、查询成绩比该课程平均成绩低的同学的成绩表。</span><br><span class="line">34、查询所有任课教师的Tname和Depart.</span><br><span class="line">35 查询所有未讲课的教师的Tname和Depart. </span><br><span class="line">36、查询至少有2名男生的班号。</span><br><span class="line">37、查询Student表中不姓“王”的同学记录。</span><br><span class="line">38、查询Student表中每个学生的姓名和年龄。</span><br><span class="line">39、查询Student表中最大和最小的Sbirthday日期值。</span><br><span class="line">40、以班号和年龄从大到小的顺序查询Student表中的全部记录。</span><br><span class="line">41、查询“男”教师及其所上的课程。</span><br><span class="line">42、查询最高分同学的Sno、Cno和Degree列。</span><br><span class="line">43、查询和“李军”同性别的所有同学的Sname.</span><br><span class="line">44、查询和“李军”同性别并同班的同学Sname.</span><br><span class="line">45、查询所有选修“计算机导论”课程的“男”同学的成绩表</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Mysql数据库高查询&quot;&gt;&lt;a href=&quot;#Mysql数据库高查询&quot; class=&quot;headerlink&quot; title=&quot;Mysql数据库高查询&quot;&gt;&lt;/a&gt;Mysql数据库高查询&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;今日内容&lt;/strong&gt;&lt;/p&gt;
&lt;figure 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://kongxianghe.top/2018/10/23/JDBC%E5%AE%9E%E7%8E%B0CRUD/"/>
    <id>http://kongxianghe.top/2018/10/23/JDBC实现CRUD/</id>
    <published>2018-10-23T14:06:03.478Z</published>
    <updated>2018-07-09T06:15:56.175Z</updated>
    
    <content type="html"><![CDATA[<h3 id="JDBC实现CRUD"><a href="#JDBC实现CRUD" class="headerlink" title="JDBC实现CRUD"></a>JDBC实现CRUD</h3><h4 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、JDBC简介</span><br><span class="line">2、JDBC执行DML语句</span><br><span class="line">3、JDBC执行DQL语句</span><br><span class="line">4、JDBC的ResultSet</span><br><span class="line">5、作业</span><br></pre></td></tr></table></figure><h4 id="一-关于JDBC的简介"><a href="#一-关于JDBC的简介" class="headerlink" title="一.关于JDBC的简介"></a>一.关于JDBC的简介</h4><h5 id="1-概念"><a href="#1-概念" class="headerlink" title="1 . 概念"></a>1 . 概念</h5><p>JDBC（Java DataBase Connectivity,java数据库连接）是一种用于执行SQL语句的Java API，可以为多种关系数据库提供统一访问，它由一组用Java语言编写的类和接口组成。JDBC提供了一种基准，据此可以构建更高级的工具和接口，使数据库开发人员能够编写数据库应用程序。<br>Java 具有坚固、安全、易于使用、易于理解和可从网络上自动下载等特性，是编写数据库应用程序的杰出语言。所需要的只是 Java应用程序与各种不同数据库之间进行对话的方法。<br>JDBC可以在各种平台上使用Java，如Windows，Mac OS和各种版本的UNIX。<br>JDBC库包括通常与数据库使用相关的下面提到的每个任务的API。</p><ul><li>连接数据库。</li><li>创建SQL或MySQL语句。</li><li>在数据库中执行SQL或MySQL查询。</li><li>查看和修改生成的记录。</li></ul><h5 id="2-JDBC体系结构"><a href="#2-JDBC体系结构" class="headerlink" title="2. JDBC体系结构"></a>2. JDBC体系结构</h5><p>JDBC API支持用于数据库访问的两层和三层处理模型，但通常，JDBC体系结构由两层组成：</p><ul><li><strong>JDBC API：</strong>这提供了应用程序到JDBC管理器连接。</li><li><strong>JDBC驱动程序API：</strong>这支持JDBC管理器到驱动程序连接。</li></ul><p>JDBC API使用驱动程序管理器和特定于数据库的驱动程序来提供与异构数据库的透明连接。</p><p><img src="pic/1.png" alt="1.png"></p><h5 id="3-通用JDBC-组件-重点"><a href="#3-通用JDBC-组件-重点" class="headerlink" title="3 .通用JDBC 组件(重点)"></a>3 .通用JDBC 组件(重点)</h5><p><strong>DriverManager：</strong> 此类管理数据库驱动程序列表。使用通信子协议将来自java应用程序的连接请求与适当的数据库驱动程序匹配（重点）。</p><p>​ <strong>Driver</strong>:此接口处理与数据库服务器的通信，我们很少会直接与Driver对象进行交互。而是使用DriverManager对象来管理这种类型的对象。</p><p><strong>Connection：</strong>该界面具有用于联系数据库的所有方法。连接对象表示通信上下文，即，与数据库的所有通信仅通过连接对象（重点）。</p><p><strong>Statement</strong>：使用从此接口创建的对象将SQL语句提交到数据库。除了执行存储过程之外，一些派生接口还接受参数（重点）。</p><p><strong>ResultSet：</strong>在使用Statement对象执行SQL查询后，这些对象保存从数据库检索的数据。它作为一个迭代器，允许我们移动其数据（重点）。</p><p>​ <strong>SQLException：</strong>此类处理数据库应用程序中发生的任何错误</p><h4 id="二-JDBC-相关的SQL语法"><a href="#二-JDBC-相关的SQL语法" class="headerlink" title="二. JDBC 相关的SQL语法"></a>二. JDBC 相关的SQL语法</h4><h5 id="1-CRUD语法介绍"><a href="#1-CRUD语法介绍" class="headerlink" title="1.CRUD语法介绍"></a>1.CRUD语法介绍</h5><p>SQL 是一种标准化的语言，它允许你在数据库上执行操作，如创建项目，查询内容，更新内容，并删除条目等操作。</p><p>Create, Read, Update, and Delete 通常称为CRUD操作。</p><p>CREATE DATABASE语句用于创建新的数据库：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; CREATE DATABASE DATABASE_NAME;</span><br></pre></td></tr></table></figure><p>DROP DATABASE语句用于删除现有数据库：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; DROP DATABASE DATABASE_NAME;</span><br></pre></td></tr></table></figure><p>CREATE TABLE语句用于创建新表。语法是 -</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; CREATE TABLE Employees</span><br><span class="line">(</span><br><span class="line">   id INT NOT NULL,</span><br><span class="line">   age INT NOT NULL,</span><br><span class="line">   first VARCHAR(255),</span><br><span class="line">   last VARCHAR(255),</span><br><span class="line">   PRIMARY KEY ( id )</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>DROP TABLE语句用于删除现有表。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; DROP TABLE table_name;</span><br></pre></td></tr></table></figure><p>INSERT的语法类似于以下内容，其中column1，column2等表示要显示在相应列中的新数据 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; INSERT INTO table_name VALUES (column1, column2, ...);</span><br></pre></td></tr></table></figure><p>SELECT语句用于从数据库中检索数据。SELECT的语法是 -</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; SELECT column_name, column_name, ...</span><br><span class="line">     FROM table_name</span><br><span class="line">     WHERE conditions;</span><br></pre></td></tr></table></figure><p>WHERE子句可以使用比较运算符，例如=，！=，&lt;，&gt;，&lt;=和&gt; =，以及BETWEEN和LIKE运算符。</p><p>UPDATE语句用于更新数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; UPDATE table_name</span><br><span class="line">     SET column_name = value, column_name = value, ...</span><br><span class="line">     WHERE conditions;</span><br></pre></td></tr></table></figure><p>WHERE子句可以使用比较运算符，例如=，！=，&lt;，&gt;，&lt;=和&gt; =，以及BETWEEN和LIKE运算符。</p><p>DELETE语句用于从表中删除数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; DELETE FROM table_name WHERE conditions;</span><br></pre></td></tr></table></figure><p>WHERE子句可以使用比较运算符，例如=，！=，&lt;，&gt;，&lt;=和&gt; =，以及BETWEEN和LIKE运算符。</p><h4 id="三-JDBC简单示例"><a href="#三-JDBC简单示例" class="headerlink" title="三. JDBC简单示例"></a>三. JDBC简单示例</h4><h5 id="1-使用步骤"><a href="#1-使用步骤" class="headerlink" title="1.使用步骤"></a>1.使用步骤</h5><p>构建JDBC应用程序涉及以下六个步骤：</p><ul><li><p><strong>导入包：</strong>需要包含包含数据库编程所需的JDBC类的包。大多数情况下，使用*import java.sql。**就足够了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import java.sql.Connection;</span><br><span class="line">import java.sql.DriverManager;</span><br><span class="line">import java.sql.ResultSet;</span><br><span class="line">import java.sql.Statement;</span><br></pre></td></tr></table></figure></li><li><p><strong>注册JDBC驱动程序：</strong>要求您初始化驱动程序，以便您可以打开与数据库的通信通道。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);//mysql驱动名固定不变</span><br></pre></td></tr></table></figure></li><li><p><strong>打开连接：</strong>需要使用<em>DriverManager.getConnection（）</em>方法创建一个Connection对象，该对象表示与数据库的物理连接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String url = &quot;jdbc:mysql://主机IP:3306/数据库名&quot;;</span><br><span class="line">Connection conn = DriverManager.getConnection(url, user, password);</span><br></pre></td></tr></table></figure></li><li><p><strong>执行查询：</strong>需要使用类型为Statement的对象来构建和提交SQL语句到数据库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Statement statement = conn.createStatement();</span><br><span class="line">String sql = &quot;select * from emp where empno&quot;;</span><br><span class="line">ResultSet rs = statement.executeQuery(sql);</span><br></pre></td></tr></table></figure></li><li><p><strong>从结果集中提取数据：</strong>需要使用相应的<em>ResultSet.getXXX（）</em>方法从结果集中检索数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">while (rs.next()) &#123;</span><br><span class="line">int empno = rs.getInt(&quot;empno&quot;);</span><br><span class="line">String ename = rs.getString(&quot;ename&quot;);</span><br><span class="line">String job = rs.getString(&quot;job&quot;);</span><br><span class="line"></span><br><span class="line">System.out.println(empno + &quot;,&quot; + ename + &quot;,&quot; + job);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>释放资源：</strong>需要明确地关闭所有数据库资源，而不依赖于JVM的垃圾收集。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">resultset.close();</span><br><span class="line">statement.close();</span><br><span class="line">connection.close();</span><br></pre></td></tr></table></figure><p>​</p></li></ul><h5 id="2-JDBC连接步骤"><a href="#2-JDBC连接步骤" class="headerlink" title="2. JDBC连接步骤"></a>2. JDBC连接步骤</h5><p>建立JDBC连接所涉及的编程相当简单。这是简单的四个步骤</p><ul><li><strong>导入JDBC包：</strong>将Java语言的<strong>import</strong>语句添加到Java代码中导入所需的类。</li><li><strong>注册JDBC驱动程序：</strong>此步骤将使JVM将所需的驱动程序实现加载到内存中，以便它可以满足您的JDBC请求。</li><li><strong>数据库URL配置：</strong>这是为了创建一个格式正确的地址，指向要连接到的数据库。</li><li><strong>创建连接对象：</strong>最后，调用<em>DriverManager</em>对象的<em>getConnection（）</em>方法来建立实际的数据库连接。</li></ul><p>其中注册驱动的方式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.Class.forName();</span><br><span class="line">2.DriverManager.registerDriver()(了解)</span><br></pre></td></tr></table></figure><p><strong>Class.forName();</strong></p><p>注册驱动程序最常见的方法是使用Java的<strong>Class.forName（）</strong>方法，将驱动程序的类文件动态加载到内存中，并将其自动注册</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">   Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(ClassNotFoundException ex) &#123;</span><br><span class="line">   System.out.println(<span class="string">"Error: unable to load driver class!"</span>);</span><br><span class="line">   System.exit(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>DriverManager.registerDriver()</strong>(了解)</p><p>可以用来注册驱动程序的第二种方法是使用静态<strong>DriverManager.registerDriver（）</strong>方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">   Driver myDriver = <span class="keyword">new</span> com.mysql.jdbc.Driver();</span><br><span class="line">   DriverManager.registerDriver( myDriver );</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(ClassNotFoundException ex) &#123;</span><br><span class="line">   System.out.println(<span class="string">"Error: unable to load driver class!"</span>);</span><br><span class="line">   System.exit(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>数据库URL配置</strong></p><p>加载驱动程序后，可以使用<strong>DriverManager.getConnection（）</strong>方法建立连接。为了方便参考，让我列出三个重载的DriverManager.getConnection()方法 -</p><ul><li>getConnection（String url）</li><li>getConnection（String url，Properties prop）</li><li>getConnection（String url，String user，String password）</li></ul><table><thead><tr><th>RDBMS</th><th>JDBC驱动程序名称</th><th>URL网址格式</th></tr></thead><tbody><tr><td>MySQL的</td><td>com.mysql.jdbc.Driver</td><td><strong>jdbc：mysql：//</strong>hostname:3306 / databaseName</td></tr><tr><td>ORACLE</td><td>oracle.jdbc.driver.OracleDriver</td><td><strong>jdbc：oracle：thin：@</strong> hostname：port Number：databaseName</td></tr><tr><td>DB2</td><td>COM.ibm.db2.jdbc.net.DB2Driver</td><td><strong>jdbc：db2：</strong>hostname：port Number / databaseName</td></tr><tr><td>SYBASE</td><td>com.sybase.jdbc.SybDriver</td><td><strong>jdbc：sybase：Tds：</strong> hostname：port Number / databaseName</td></tr></tbody></table><p><strong>创建数据库连接对象</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String URL = <span class="string">"jdbc:oracle:thin:@amrood:1521:EMP"</span>;</span><br><span class="line">String USER = <span class="string">"username"</span>;</span><br><span class="line">String PASS = <span class="string">"password"</span></span><br><span class="line">Connection conn = DriverManager.getConnection(URL, USER, PASS);</span><br></pre></td></tr></table></figure><p><strong>使用数据库URL和属性对象</strong></p><p>DriverManager.getConnection（）方法的第三种形式需要一个数据库URL和一个Properties对象 -</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DriverManager.getConnection(String url, Properties info);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line">String URL = <span class="string">"jdbc：mysql：//hostname:3306 / databaseName"</span>;</span><br><span class="line">Properties info = <span class="keyword">new</span> Properties( );</span><br><span class="line">info.put( <span class="string">"user"</span>, <span class="string">"username"</span> );</span><br><span class="line">info.put( <span class="string">"password"</span>, <span class="string">"password"</span> );</span><br><span class="line"></span><br><span class="line">Connection conn = DriverManager.getConnection(URL, info);</span><br></pre></td></tr></table></figure><p><strong>关闭数据库连接</strong>(重点)</p><p>为确保连接关闭，您可以在代码中提供一个“finally”块。一个<em>finally</em>块总是执行，不管是否发生异常。</p><p>要关闭上面打开的连接，你应该调用close（）方法如下 -</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conn.close();</span><br></pre></td></tr></table></figure><h4 id="四-JDBC执行SQL语句"><a href="#四-JDBC执行SQL语句" class="headerlink" title="四. JDBC执行SQL语句"></a>四. JDBC执行SQL语句</h4><p>一旦获得了连接，我们可以与数据库进行交互。JDBC Statement和PreparedStatement接口定义了使您能够发送SQL命令并从数据库接收数据的方法和属性。</p><table><thead><tr><th>接口</th><th>推荐使用</th></tr></thead><tbody><tr><td>声明</td><td>用于对数据库进行通用访问。在运行时使用静态SQL语句时很有用。Statement接口不能接受参数。</td></tr><tr><td>PreparedStatement的</td><td>当您计划多次使用SQL语句时使用。PreparedStatement接口在运行时接受输入参数。</td></tr></tbody></table><h5 id="1-声明Statement对象"><a href="#1-声明Statement对象" class="headerlink" title="1. 声明Statement对象"></a>1. 声明Statement对象</h5><p>创建语句对象</p><p>在使用Statement对象执行SQL语句之前，需要使用Connection对象的createStatement（）方法创建一个，如下例所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Statement stmt = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">   stmt = conn.createStatement( );</span><br><span class="line">   . . .</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">   . . .</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span> &#123;</span><br><span class="line">   . . .</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建Statement对象后，您可以使用它来执行一个SQL语句，其中有三个执行方法之一。</p><ul><li><p><strong>boolean execute（String SQL）</strong>：如果可以检索到ResultSet对象，则返回一个布尔值true; 否则返回false。使用此方法执行SQL DDL语句或需要使用真正的动态SQL时。</p><p>一般查询时，有结果集返回，值为true，而增删改无结果集返回，值为false</p></li><li><p><strong>int executeUpdate（String SQL）</strong>：返回受SQL语句执行影响的行数。使用此方法执行预期会影响多个行的SQL语句，例如INSERT，UPDATE或DELETE语句。</p></li><li><p><strong>ResultSet executeQuery（String SQL）</strong>：返回一个ResultSet对象。当您希望获得结果集时，请使用此方法，就像使用SELECT语句一样。</p></li></ul><h5 id="2-关闭Statement对象"><a href="#2-关闭Statement对象" class="headerlink" title="2. 关闭Statement对象"></a>2. 关闭Statement对象</h5><p>就像我们关闭一个Connection对象以保存数据库资源一样，由于同样的原因，还应该关闭Statement对象。</p><p>一个简单的调用close（）方法将执行该作业。如果先关闭Connection对象，它也会关闭Statement对象。但是，应始终显式关闭Statement对象，以确保正确清理。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Statement stmt = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">   stmt = conn.createStatement( );</span><br><span class="line">   . . .</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">   . . .</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span> &#123;</span><br><span class="line">   stmt.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-创建PreparedStatement对象-重点，常用，推荐使用"><a href="#3-创建PreparedStatement对象-重点，常用，推荐使用" class="headerlink" title="3 .创建PreparedStatement对象(重点，常用，推荐使用)"></a>3 .创建PreparedStatement对象(重点，常用，推荐使用)</h5><p>该<em>PreparedStatement的</em>接口扩展了Statement接口，它为您提供了一个通用的Statement对象有两个优点附加功能。</p><p>此语句使您可以动态地提供参数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PreparedStatement pstmt = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">   String SQL = <span class="string">"Update Employees SET age = ? WHERE id = ?"</span>;</span><br><span class="line">   pstmt = conn.prepareStatement(SQL);</span><br><span class="line">   . . .</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">   . . .</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span> &#123;</span><br><span class="line">   . . .</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JDBC中的所有参数都由<strong>？</strong>符号，这被称为参数标记。在执行SQL语句之前，必须为每个参数提供值。</p><p>所述<strong>的setXXX（）</strong>方法将值绑定到所述参数，其中<strong>XXX</strong>代表要绑定到输入参数的值的Java数据类型。如果忘记提供值，将收到一个SQLException。</p><p>每个参数标记由其顺序位置引用。第一个标记表示位置1，下一个位置2等等。该方法与Java数组索引不同，从0开始。</p><h5 id="4-关闭PreparedStatement对象"><a href="#4-关闭PreparedStatement对象" class="headerlink" title="4. 关闭PreparedStatement对象"></a>4. 关闭PreparedStatement对象</h5><p>就像关闭Statement对象一样，由于同样的原因，还应该关闭PreparedStatement对象。</p><p>一个简单的调用close（）方法将执行该作业。如果先关闭Connection对象，它也会关闭PreparedStatement对象。但是，应始终显式关闭PreparedStatement对象，以确保正确清理。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PreparedStatement pstmt = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">   String SQL = <span class="string">"Update Employees SET age = ? WHERE id = ?"</span>;</span><br><span class="line">   pstmt = conn.prepareStatement(SQL);</span><br><span class="line">   . . .</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">   . . .</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span> &#123;</span><br><span class="line">   pstmt.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="5-ResultSet结果集"><a href="#5-ResultSet结果集" class="headerlink" title="5. ResultSet结果集"></a>5. ResultSet结果集</h5><p>SELECT语句是从数据库中选择行并在结果集中查看行的标准方法。该<em>java.sql.ResultSet中的</em>接口表示结果集数据库查询。</p><p>ResultSet对象维护指向结果集中当前行的游标。术语“结果集”是指包含在ResultSet对象中的行和列数据。</p><p><strong>其中 ResultSet类型</strong></p><p>如果没有指定任何ResultSet类型，您将自动获得一个TYPE_FORWARD_ONLY。</p><table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>ResultSet.TYPE_FORWARD_ONLY</td><td>光标只能在结果集中向前移动。</td></tr><tr><td>ResultSet.TYPE_SCROLL_INSENSITIVE</td><td>光标可以向前和向后滚动，结果集对创建结果集后发生的数据库的其他更改不敏感。</td></tr><tr><td>ResultSet.TYPE_SCROLL_SENSITIVE。</td><td>光标可以向前和向后滚动，结果集对创建结果集之后发生的其他数据库所做的更改敏感。</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">   Statement stmt = conn.createStatement(</span><br><span class="line">                           ResultSet.TYPE_FORWARD_ONLY,</span><br><span class="line">                           ResultSet.CONCUR_READ_ONLY);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(Exception ex) &#123;</span><br><span class="line">   ....</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="comment">//注意：该对像也需手动关闭</span></span><br><span class="line">   ....ResultSet.close()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="作业题"><a href="#作业题" class="headerlink" title="作业题"></a>作业题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">1.登录</span><br><span class="line">创建user表</span><br><span class="line">id int 主键 自增</span><br><span class="line">username varchar</span><br><span class="line">password varchar</span><br><span class="line">创建user_leaf 用户个人信息表</span><br><span class="line">id int 主键 自增</span><br><span class="line">name</span><br><span class="line">age</span><br><span class="line">sex</span><br><span class="line">u_id 外键</span><br><span class="line"></span><br><span class="line">控制台输入用户名 密码</span><br><span class="line">连接数据库 </span><br><span class="line">判断和数据库里的是否一致</span><br><span class="line">一致 显示 登录成功 </span><br><span class="line">不一致 显示登陆失败</span><br><span class="line">扩展 如登录成功</span><br><span class="line">显示user个人信息表信息</span><br><span class="line">2.根据id查询指定的学生记录</span><br><span class="line">创建学生信息表创建方法 传入学生id 获取学生信息</span><br><span class="line">student 表 </span><br><span class="line">sid(int 主键 自增) </span><br><span class="line">sname(varchar 非空) </span><br><span class="line">sage(int 默认值为10) </span><br><span class="line">ssex(varchar) </span><br><span class="line">birthday(date) </span><br><span class="line">score(double 保留小数点后2位)</span><br><span class="line">扩展</span><br><span class="line">1.将 score单独存储到student_s表中</span><br><span class="line">一对多关系</span><br><span class="line">将数据存储到合适的集合中 遍历结合获取数据</span><br><span class="line">    2.将集合中的数据 写出到student.txt文件中 以逗号分隔</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;JDBC实现CRUD&quot;&gt;&lt;a href=&quot;#JDBC实现CRUD&quot; class=&quot;headerlink&quot; title=&quot;JDBC实现CRUD&quot;&gt;&lt;/a&gt;JDBC实现CRUD&lt;/h3&gt;&lt;h4 id=&quot;今日内容&quot;&gt;&lt;a href=&quot;#今日内容&quot; class=&quot;head
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://kongxianghe.top/2018/10/23/JDBC%E9%AB%98%E7%BA%A7%E6%93%8D%E4%BD%9C%E5%92%8C%E4%BA%8B%E5%8A%A1/"/>
    <id>http://kongxianghe.top/2018/10/23/JDBC高级操作和事务/</id>
    <published>2018-10-23T14:06:03.470Z</published>
    <updated>2018-07-09T06:15:56.703Z</updated>
    
    <content type="html"><![CDATA[<h3 id="JDBC高级使用和数据库事务"><a href="#JDBC高级使用和数据库事务" class="headerlink" title="JDBC高级使用和数据库事务"></a>JDBC高级使用和数据库事务</h3><h4 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1、preparedStatement用法</span><br><span class="line">2、JDBC多表关联查询</span><br><span class="line">3、数据库事务</span><br><span class="line">4、JDBC事务实现</span><br><span class="line">5、JDBC的批处理</span><br><span class="line">6、JDBC操作二进制</span><br><span class="line">7、作业</span><br></pre></td></tr></table></figure><h4 id="一-preparedStatement的用法（重点）"><a href="#一-preparedStatement的用法（重点）" class="headerlink" title="一.preparedStatement的用法（重点）"></a>一.preparedStatement的用法（重点）</h4><p><strong>1.作用</strong></p><p>preparedStatement可以对sql语句进行预处理，并进行参数绑定操作，然后进行执行CRUD操作</p><p><strong>2.用法</strong><br>对EMP表的CRUD操作如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br></pre></td><td class="code"><pre><span class="line">package crud;</span><br><span class="line"></span><br><span class="line">import java.sql.Connection;</span><br><span class="line">import java.sql.PreparedStatement;</span><br><span class="line">import java.sql.ResultSet;</span><br><span class="line">import java.sql.SQLException;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">import tools.JdbcUtil;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 使用preparedStatement进行CRUD操作</span><br><span class="line"> * </span><br><span class="line"> * preparedStatement是Statement的子接口</span><br><span class="line"> * </span><br><span class="line"> * @author kevin</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">public class EmpDao &#123;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 增</span><br><span class="line"> * </span><br><span class="line"> * @param emp</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public int insert(Emp emp) &#123;</span><br><span class="line"></span><br><span class="line">// 1.获取连接对像</span><br><span class="line">Connection conn = JdbcUtil.findConnection();</span><br><span class="line">/*</span><br><span class="line"> * 2.创建会话preparedStatement 其中？表示点位符</span><br><span class="line"> */</span><br><span class="line">String sql = &quot;insert into EMP(empno,ename,job) values(?,?,?)&quot;;</span><br><span class="line">PreparedStatement ps = null;</span><br><span class="line">int i = 0;</span><br><span class="line">try &#123;</span><br><span class="line">ps = conn.prepareStatement(sql);</span><br><span class="line">// 3.进行参数绑定</span><br><span class="line">ps.setInt(1, emp.getEmpno());</span><br><span class="line">ps.setString(2, emp.getEname());</span><br><span class="line">ps.setString(3, emp.getJob());</span><br><span class="line">/*</span><br><span class="line"> * 4.执行sql PreparedStatement一定是无参的执行方法s</span><br><span class="line"> */</span><br><span class="line">i = ps.executeUpdate();</span><br><span class="line">&#125; catch (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">JdbcUtil.closeResource(null, ps, conn);</span><br><span class="line">&#125;</span><br><span class="line">return i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 删</span><br><span class="line"> * </span><br><span class="line"> * @param empno</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public int delete(int empno) &#123;</span><br><span class="line"></span><br><span class="line">// 1.获取连接对像</span><br><span class="line">Connection conn = JdbcUtil.findConnection();</span><br><span class="line">/*</span><br><span class="line"> * 2.创建会话preparedStatement 其中？表示点位符</span><br><span class="line"> */</span><br><span class="line">String sql = &quot;delete from EMP where empno = ?&quot;;</span><br><span class="line">PreparedStatement ps = null;</span><br><span class="line">int i = 0;</span><br><span class="line">try &#123;</span><br><span class="line">ps = conn.prepareStatement(sql);</span><br><span class="line">// 3.进行参数绑定</span><br><span class="line">ps.setInt(1, empno);</span><br><span class="line">/*</span><br><span class="line"> * 4.执行sql PreparedStatement一定是无参的执行方法s</span><br><span class="line"> */</span><br><span class="line">i = ps.executeUpdate();</span><br><span class="line">&#125; catch (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">JdbcUtil.closeResource(null, ps, conn);</span><br><span class="line">&#125;</span><br><span class="line">return i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 改</span><br><span class="line"> * </span><br><span class="line"> * @param emp</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public int update(Emp emp) &#123;</span><br><span class="line"></span><br><span class="line">// 1.获取连接对像</span><br><span class="line">Connection conn = JdbcUtil.findConnection();</span><br><span class="line">/*</span><br><span class="line"> * 2.创建会话preparedStatement 其中？表示点位符</span><br><span class="line"> */</span><br><span class="line">String sql = &quot;update EMP set ename = ?,job=? where empno = ?&quot;;</span><br><span class="line">PreparedStatement ps = null;</span><br><span class="line">int i = 0;</span><br><span class="line">try &#123;</span><br><span class="line">ps = conn.prepareStatement(sql);</span><br><span class="line">// 3.进行参数绑定</span><br><span class="line">ps.setString(1, emp.getEname());</span><br><span class="line">ps.setString(2, emp.getJob());</span><br><span class="line">ps.setInt(3, emp.getEmpno());</span><br><span class="line">/*</span><br><span class="line"> * 4.执行sql PreparedStatement一定是无参的执行方法s</span><br><span class="line"> */</span><br><span class="line">i = ps.executeUpdate();</span><br><span class="line">&#125; catch (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">JdbcUtil.closeResource(null, ps, conn);</span><br><span class="line">&#125;</span><br><span class="line">return i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 按主键查询</span><br><span class="line"> * </span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public Emp selectByEmpno(int empno) &#123;</span><br><span class="line"></span><br><span class="line">Connection conn = JdbcUtil.findConnection();</span><br><span class="line">PreparedStatement ps = null;</span><br><span class="line">ResultSet rs = null;</span><br><span class="line">Emp emp = null;</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">String sql = &quot;select * from EMP where empno = ?&quot;;</span><br><span class="line">ps = conn.prepareStatement(sql);</span><br><span class="line">ps.setInt(1, empno);</span><br><span class="line">rs = ps.executeQuery();</span><br><span class="line">if (rs.next()) &#123;</span><br><span class="line">empno = rs.getInt(&quot;empno&quot;);</span><br><span class="line">String ename = rs.getString(&quot;ename&quot;);</span><br><span class="line">String job = rs.getString(&quot;job&quot;);</span><br><span class="line"></span><br><span class="line">emp = new Emp();</span><br><span class="line">emp.setEmpno(empno);</span><br><span class="line">emp.setEname(ename);</span><br><span class="line">emp.setJob(job);</span><br><span class="line">&#125;</span><br><span class="line">&#125; catch (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">JdbcUtil.closeResource(rs, ps, conn);</span><br><span class="line">&#125;</span><br><span class="line">return emp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 查询所有</span><br><span class="line"> * </span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public List&lt;Emp&gt; selectAll() &#123;</span><br><span class="line"></span><br><span class="line">Connection conn = JdbcUtil.findConnection();</span><br><span class="line">PreparedStatement ps = null;</span><br><span class="line">ResultSet rs = null;</span><br><span class="line">List&lt;Emp&gt; list = new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">String sql = &quot;select * from EMP&quot;;</span><br><span class="line">ps = conn.prepareStatement(sql);</span><br><span class="line">rs = ps.executeQuery();</span><br><span class="line">while (rs.next()) &#123;</span><br><span class="line">int empno = rs.getInt(&quot;empno&quot;);</span><br><span class="line">String ename = rs.getString(&quot;ename&quot;);</span><br><span class="line">String job = rs.getString(&quot;job&quot;);</span><br><span class="line"></span><br><span class="line">Emp emp = new Emp();</span><br><span class="line">emp.setEmpno(empno);</span><br><span class="line">emp.setEname(ename);</span><br><span class="line">emp.setJob(job);</span><br><span class="line"></span><br><span class="line">list.add(emp);</span><br><span class="line">&#125;</span><br><span class="line">&#125; catch (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">JdbcUtil.closeResource(rs, ps, conn);</span><br><span class="line">&#125;</span><br><span class="line">return list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * limit查询</span><br><span class="line"> * </span><br><span class="line"> * @param firstIndex</span><br><span class="line"> * @param maxResult</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public List&lt;Emp&gt; selectByPage(int firstIndex, int maxResult) &#123;</span><br><span class="line"></span><br><span class="line">Connection conn = JdbcUtil.findConnection();</span><br><span class="line">PreparedStatement ps = null;</span><br><span class="line">ResultSet rs = null;</span><br><span class="line">List&lt;Emp&gt; list = new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">String sql = &quot;select * from EMP limit ?,?&quot;;</span><br><span class="line">ps = conn.prepareStatement(sql);</span><br><span class="line">ps.setInt(1, firstIndex);</span><br><span class="line">ps.setInt(2, maxResult);</span><br><span class="line">rs = ps.executeQuery();</span><br><span class="line">while (rs.next()) &#123;</span><br><span class="line">int empno = rs.getInt(&quot;empno&quot;);</span><br><span class="line">String ename = rs.getString(&quot;ename&quot;);</span><br><span class="line">String job = rs.getString(&quot;job&quot;);</span><br><span class="line"></span><br><span class="line">Emp emp = new Emp();</span><br><span class="line">emp.setEmpno(empno);</span><br><span class="line">emp.setEname(ename);</span><br><span class="line">emp.setJob(job);</span><br><span class="line"></span><br><span class="line">list.add(emp);</span><br><span class="line">&#125;</span><br><span class="line">&#125; catch (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">JdbcUtil.closeResource(rs, ps, conn);</span><br><span class="line">&#125;</span><br><span class="line">return list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二-JDBC多表关联查询"><a href="#二-JDBC多表关联查询" class="headerlink" title="二.JDBC多表关联查询"></a>二.JDBC多表关联查询</h4><p>如进行以下查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM emp LEFT JOIN dept </span><br><span class="line">ON emp.`deptno` = dept.`deptno`</span><br><span class="line">WHERE emp.`empno` = 7369;</span><br></pre></td></tr></table></figure><p>Emp模型类如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public class Emp &#123;</span><br><span class="line"></span><br><span class="line">private Integer empno;</span><br><span class="line">private String ename;</span><br><span class="line">private String job;</span><br><span class="line">private Integer mgr;</span><br><span class="line">private Double sal;</span><br><span class="line">private Double comm;</span><br><span class="line">private Integer deptno;</span><br><span class="line">private Date hiredate;</span><br><span class="line">//多对一</span><br><span class="line">//重点：类之间的关联关系 </span><br><span class="line">private Dept dept;</span><br><span class="line">//省略setter和getter方法</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Dept模型类如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public class Dept &#123;</span><br><span class="line"></span><br><span class="line">private Integer deptno;</span><br><span class="line">private String dname;</span><br><span class="line">private String loc;</span><br><span class="line"></span><br><span class="line">//一对多</span><br><span class="line">private Set&lt;Emp&gt; set;</span><br><span class="line">//省略setter和getter方法</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>EmpDao(Data Access Object) 数据访问对象如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">public Emp selectByJoin(int empno) &#123;</span><br><span class="line"></span><br><span class="line">Connection conn = JdbcUtil.findConnection();</span><br><span class="line">PreparedStatement ps = null;</span><br><span class="line">ResultSet rs = null;</span><br><span class="line">String sql = &quot;SELECT * FROM emp LEFT JOIN dept ON emp.deptno = dept.deptno WHERE emp.empno = ?&quot;;</span><br><span class="line">try &#123;</span><br><span class="line">ps = conn.prepareStatement(sql);</span><br><span class="line">ps.setInt(1, empno);</span><br><span class="line">//得到结果集</span><br><span class="line">rs = ps.executeQuery();</span><br><span class="line">while(rs.next())&#123;</span><br><span class="line">String ename = rs.getString(&quot;ename&quot;);</span><br><span class="line">String job = rs.getString(&quot;job&quot;);</span><br><span class="line">//封装emp对像</span><br><span class="line">Emp emp = new Emp();</span><br><span class="line">emp.setEmpno(empno);</span><br><span class="line">emp.setJob(job);</span><br><span class="line">emp.setEname(ename);</span><br><span class="line"></span><br><span class="line">//封装dept对像</span><br><span class="line">int deptno = rs.getInt(&quot;deptno&quot;);</span><br><span class="line">String dname = rs.getString(&quot;dname&quot;);</span><br><span class="line">String loc = rs.getString(&quot;loc&quot;);</span><br><span class="line">Dept dept = new Dept();</span><br><span class="line">dept.setDeptno(deptno);</span><br><span class="line">dept.setDname(dname);</span><br><span class="line">dept.setLoc(loc);</span><br><span class="line"></span><br><span class="line">//把dept封装到emp中</span><br><span class="line">emp.setDept(dept);</span><br><span class="line"></span><br><span class="line">return emp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; catch (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;finally&#123;</span><br><span class="line">JdbcUtil.closeResource(rs, ps, conn);</span><br><span class="line">&#125;</span><br><span class="line">return null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>单元测试：</p><p>略</p><h4 id="三-数据库事务-重点"><a href="#三-数据库事务-重点" class="headerlink" title="三. 数据库事务(重点)"></a>三. 数据库事务(重点)</h4><blockquote><p>一组要么同时执行成功，要么同时执行失败的SQL语句。是数据库操作的一个执行单元。</p></blockquote><h5 id="1-数据库事务讲解"><a href="#1-数据库事务讲解" class="headerlink" title="1 数据库事务讲解"></a>1 数据库事务讲解</h5><p><strong>事务开始于</strong></p><ul><li>连接到数据库上，并执行一条DML语句insert、update或delete</li><li>前一个事务结束后，又输入了另一条DML语句</li></ul><p><strong>事务结束于</strong></p><ul><li>执行commit或rollback语句。</li><li>执行一条DDL语句，例如create table语句，在这种情况下，会自动执行commit语句。</li><li>执行一条DDL语句，例如grant语句，在这种情况下，会自动执行commit。</li><li>断开与数据库的连接</li><li>执行了一条DML语句，该语句却失败了，在这种情况中，会为这个无效的DML语句执行rollback语句。</li></ul><h5 id="2-事务的四大特点（ACID）（面试经常问）"><a href="#2-事务的四大特点（ACID）（面试经常问）" class="headerlink" title="2 事务的四大特点（ACID）（面试经常问）"></a>2 事务的四大特点（ACID）（面试经常问）</h5><ul><li><strong>atomicity(原子性)</strong></li></ul><p>　　　　表示一个事务内的所有操作是一个整体，要么全部成功，要么全部失败</p><ul><li><strong>consistency(一致性)</strong></li></ul><p>　　　　表示一个事务内有一个操作失败时，所有的更改过的数据都必须回滚到修改前状态</p><ul><li><strong>isolation(隔离性)（重点中重点）</strong></li></ul><p>　　　　事务查看数据时数据所处的状态，要么是另一并发事务修改它之前的状态，要么是另一事务修改它之后的状态，事务不会查看中间状态的数据。</p><ul><li><strong>durability(持久性)</strong></li></ul><p>　　　　持久性事务完成之后，它对于系统的影响是永久性的（一旦保存在数据库中的数据，就是永久性数据）。</p><h5 id="3-事务隔离级别-对事务隔离性的描述"><a href="#3-事务隔离级别-对事务隔离性的描述" class="headerlink" title="3 事务隔离级别(对事务隔离性的描述)"></a>3 事务隔离级别(对事务隔离性的描述)</h5><p>　　SQL标准定义了4类隔离级别，包括了一些具体规则，用来限定事务内外的哪些改变是可见的，哪些是不可见的。==低级别的隔离级一般支持更高的并发处理，并拥有更低的系统开销。==</p><p><strong>以下事务隔离级别由低到高：</strong></p><p><strong>Read Uncommitted</strong>（读取未提交内容)</p><p>​       在该隔离级别，所有事务都可以看到其他未提交事务的执行结果。本隔离级别很少用于实际应用，因为它的性能也不比其他级别好多少。读取未提交的数据，也被称之为<strong>脏读（Dirty Read）</strong>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">T1读取某一第记录</span><br><span class="line">T2事务在更新该条记录，没有提交</span><br><span class="line">没提交的数据被T1事务读取到了，该数据称为脏数据。</span><br><span class="line">原因：当t2回滚事务以后，t1读取到的数据就是脏数据</span><br></pre></td></tr></table></figure><p><strong>Read Committed</strong>（读取提交内容，屏蔽了脏数据读取的可能，行级锁）</p><p>​       这是大多数数据库系统的默认隔离级别（但不是MySQL默认的）。它满足了隔离的简单定义：一个事务只能看见已经提交事务所做的改变。这种隔离级别<br>也支持所谓的不可重复读（Nonrepeatable Read），因为同一事务的其他实例在该实例处理其间可能会有新的commit，所以同一select可能返回不同结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">T1事务读取某一条记录，并已读出数据</span><br><span class="line">T2事务在更新该条记录，并且提交了。</span><br><span class="line">T1事务又去读取该条记录，发现和原来记录不相符，</span><br><span class="line">这种情况叫不可重复读</span><br></pre></td></tr></table></figure><p><strong>Repeatable Read</strong>可重读（虚读或幻读，但屏蔽了不可重复读）</p><p>​       这是MySQL的默认事务隔离级别，它确保同一事务的多个实例在并发读取数据时，会看到同样的数据行。不过理论上，这会导致另一个棘手的问题：幻读（Phantom Read）。简单的说，幻读指当用户读取某一范围的数据行时，另一个事务又在该范围内插入了新行，当用户再读取该范围的数据行时，会发现有新的“幻影” 行。InnoDB和Falcon存储引擎通过多版本并发控制（MVCC，Multiversion Concurrency Control）机制解决了该问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">T1事务读某个范围内多条记录时，</span><br><span class="line">T2事务介入，增加或删除该范围内的记录</span><br><span class="line">T1事务再次读取该范围内记录时，发现和之前读的记录数不一致，这就是幻读</span><br></pre></td></tr></table></figure><p><strong>Serializable</strong> 可串行化（无并发性可言，表级锁）<br>​       这是最高的隔离级别，它通过强制事务排序，使之不可能相互冲突，从而解决幻读问题。简言之，它是在每个读的数据行上加上共享锁。在这个级别，可能导致大量的超时现象和锁竞争。</p><p>​       这四种隔离级别采取不同的锁类型来实现，若读取的是同一个数据的话，就容易发生问题。</p><p><strong>例如：</strong></p><p>​       　　脏读(Drity Read)：某个事务已更新一份数据，另一个事务在此时读取了同一份数据，由于某些原因，前一个RollBack了操作，则后一个事务所读取的数据就会是不正确的。</p><p>​        　  不可重复读(Non-repeatableread):在一个事务的两次查询之中数据不一致，这可能是两次查询过程中间插入了一个事务更新的原有的数据。</p><p>​        　  幻读(Phantom Read):在一个事务的两次查询中数据笔数不一致，例如有一个事务查询了几列(Row)数据，而另一个事务却在此时插入了新的几列数据，先前的事务在接下来的查询中，就会发现有几列数据是它先前所没有的</p><p><strong>==JDBC事务隔离级别的设置==</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">connection.setTransactionIsolation(事务隔离级别)</span><br><span class="line">事务隔离级别，请使用以下常量</span><br><span class="line"> Connection.TRANSACTION_READ_UNCOMMITTED</span><br><span class="line"> Connection.TRANSACTION_READ_COMMITTED</span><br><span class="line"> Connection.TRANSACTION_REPEATABLE_READ</span><br><span class="line"> Connection.TRANSACTION_SERIALIZABLE</span><br></pre></td></tr></table></figure><h4 id="四-JDBC事务现实"><a href="#四-JDBC事务现实" class="headerlink" title="四. JDBC事务现实"></a>四. JDBC事务现实</h4><p><strong>1.原理</strong></p><p>如果JDBC连接处于<em>自动提交</em>模式，默认情况下，则每个SQL语句在完成后都会提交到数据库。</p><p>事务使您能够控制是否和何时更改应用于数据库。它将单个SQL语句或一组SQL语句视为一个逻辑单元，如果任何语句失败，则整个事务将失败。</p><p>要启用手动事务支持，而不是JDBC驱动程序默认使用的<em>自动提交</em>模式，请使用Connection对象的<strong>setAutoCommit（）</strong>方法。如果将boolean false传递给setAutoCommit（），则关闭自动提交。我们可以传递一个布尔值true来重新打开它。</p><p><strong>2.事务的提交和回滚</strong></p><p>完成更改后，我们要提交更改，然后在连接对象上调用<strong>commit（）</strong>方法，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conn.commit( );</span><br></pre></td></tr></table></figure><p>否则，要使用连接名为conn的数据库回滚更新，请使用以下代码 -</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conn.rollback( );</span><br></pre></td></tr></table></figure><p>代码实现如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">   <span class="comment">//关闭事务自动提交</span></span><br><span class="line">   conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">   Statement st = conn.createStatement();</span><br><span class="line">   </span><br><span class="line">   String SQL = <span class="string">"INSERT INTO Emp（empno,ename,job） VALUES (8000,'张三','CLERK')"</span>;</span><br><span class="line">    <span class="comment">//执行插入，这时并没真正提交到数据库中</span></span><br><span class="line">   st.executeUpdate(SQL);  </span><br><span class="line">    </span><br><span class="line">   String SQL2 = <span class="string">"INSERT INTO Emp（empno,ename,job） VALUES (8001,'李四','CLERK')"</span>;</span><br><span class="line">   st.executeUpdate(SQL2);</span><br><span class="line">   <span class="comment">//如果没有异常抛出，提交事务</span></span><br><span class="line">   conn.commit();</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException se)&#123;</span><br><span class="line">   <span class="comment">//如果有异常招出，则回滚事务</span></span><br><span class="line">   conn.rollback();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3 使用 Savepoints保存点</strong></p><p>新的JDBC 3.0 Savepoint接口为您提供了额外的事务控制。</p><p>设置保存点时，可以在事务中定义逻辑回滚点。如果通过保存点发生错误，则可以使用回滚方法来撤消所有更改或仅保存在保存点之前所做的更改，==即保存点前的SQL代码要提交，保存点后的SQL代码要回滚==。</p><p>Connection对象有两种新的方法来帮助您管理保存点 -</p><ul><li><strong>setSavepoint（String savepointName）：</strong>定义新的保存点。它还返回一个Savepoint对象。</li><li><strong>releaseSavepoint（Savepoint savepointName）：</strong>删除保存点。请注意，它需要一个Savepoint对象作为参数。此对象通常是由setSavepoint（）方法生成的保存点。</li></ul><p>代码实现如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="comment">//关闭事务自动提交</span></span><br><span class="line">   conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">   Statement stmt = conn.createStatement();</span><br><span class="line">  </span><br><span class="line">   String SQL = <span class="string">"INSERT INTO Emp（empno,ename,job） VALUES (8000,'张三','CLERK')"</span>;</span><br><span class="line">   <span class="comment">//执行插入操作，这时事务并没提交</span></span><br><span class="line">   stmt.executeUpdate(SQL);  </span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line">   <span class="comment">//设置一个保存点</span></span><br><span class="line">   Savepoint savepoint1 = conn.setSavepoint(<span class="string">"Savepoint1"</span>); </span><br><span class="line">    </span><br><span class="line">   <span class="comment">//System.out.print(1/0)测试保存点</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">   String SQL2 = <span class="string">"INSERT INTO Emp（empno,ename,job） VALUES (8001,'李四','CLERK')"</span>;</span><br><span class="line">   stmt.executeUpdate(SQL2);</span><br><span class="line">   <span class="comment">//没有异常抛出，则提交事务，数据持久化到数据库中</span></span><br><span class="line">   conn.commit();</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception ex)&#123;</span><br><span class="line">   <span class="comment">// 如果有异常抛出，则回滚到保存点</span></span><br><span class="line">   conn.rollback(savepoint1);</span><br><span class="line">   <span class="comment">//在此处要执行提交操作（关键操作）</span></span><br><span class="line">   conn.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  1、要取消掉JDBC的自动提交：void setAutoCommit(boolean autoCommit)</p><p>  2、执行各个SQL语句，加入到批处理之中</p><p>  3、如果所有语句执行成功，则提交事务 commit()；如果出现了错误，则回滚：rollback()</p><h4 id="五-JDBC批处理操作"><a href="#五-JDBC批处理操作" class="headerlink" title="五. JDBC批处理操作"></a>五. JDBC批处理操作</h4><p><strong>1.原理</strong></p><p>批量处理允许您将相关的SQL语句分组到批处理中，并通过对数据库的一次调用提交它们。</p><p>当您一次向数据库发送多个SQL语句时，可以减少连接数据库的开销，从而提高性能。</p><h5 id="2-使用Statement对象进行批处理操作"><a href="#2-使用Statement对象进行批处理操作" class="headerlink" title="2.使用Statement对象进行批处理操作"></a>2.使用Statement对象进行批处理操作</h5><p>以下是使用语句对象的批处理的典型步骤序列</p><ul><li>使用<em>createStatement（）</em>方法创建Statement对象。</li><li>使用<em>setAutoCommit（）</em>将auto-commit设置为false 。</li><li>使用<em>addBatch（）</em>方法在创建的语句对象上添加您喜欢的SQL语句到批处理中。</li><li>在创建的语句对象上使用<em>executeBatch（）</em>方法执行所有SQL语句。</li><li>最后，使用<em>commit（）</em>方法提交所有更改。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 打开一次会话，可以处理批量sql，减轻数据库开销</span><br><span class="line"> */</span><br><span class="line">@Override</span><br><span class="line">public void insertBatchByStatement() &#123;</span><br><span class="line">Connection conn = JdbcUtil.findConnection();</span><br><span class="line">Statement st = null;</span><br><span class="line">try &#123;</span><br><span class="line">conn.setAutoCommit(false);</span><br><span class="line">st = conn.createStatement();</span><br><span class="line"></span><br><span class="line">String sql = &quot;insert into EMP (empno,ename,job) values (1111,&apos;张三&apos;,&apos;CLERK&apos;)&quot;;</span><br><span class="line">String sql2 = &quot;insert into EMP (empno,ename,job) values (1112,&apos;李四&apos;,&apos;CLERK&apos;)&quot;;</span><br><span class="line">// 添加批处理</span><br><span class="line">st.addBatch(sql);</span><br><span class="line">st.addBatch(sql2);</span><br><span class="line"></span><br><span class="line">// 执行批处理</span><br><span class="line">st.executeBatch();</span><br><span class="line">conn.commit();</span><br><span class="line">&#125; catch (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">try &#123;</span><br><span class="line">conn.rollback();</span><br><span class="line">&#125; catch (SQLException e1) &#123;</span><br><span class="line">e1.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">JdbcUtil.closeResource(null, st, conn);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3.PrepareStatement对象进行批处理</strong></p><ul><li>使用占位符创建SQL语句。</li><li>使用<em>prepareStatement（）</em> 方法创建PrepareStatement对象。</li><li>使用<em>setAutoCommit（）</em>将auto-commit设置为false 。</li><li>使用<em>addBatch（）</em>方法在创建的语句对象上添加您喜欢的SQL语句到批处理中。</li><li>在创建的语句对象上使用<em>executeBatch（）</em>方法执行所有SQL语句。</li><li>最后，使用<em>commit（）</em>方法提交所有更改。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 一次连接，一次会话，进行批量处理</span><br><span class="line"> */</span><br><span class="line">@Override</span><br><span class="line">public void insertBatchByPreparedStatement() &#123;</span><br><span class="line"></span><br><span class="line">Connection conn = JdbcUtil.findConnection();</span><br><span class="line">PreparedStatement ps = null;</span><br><span class="line">try &#123;</span><br><span class="line"></span><br><span class="line">conn.setAutoCommit(false);</span><br><span class="line"></span><br><span class="line">String sql = &quot;insert into emp(empno,ename,job) values (?,?,?)&quot;;</span><br><span class="line"></span><br><span class="line">ps = conn.prepareStatement(sql);</span><br><span class="line">ps.setInt(1, 1113);</span><br><span class="line">ps.setString(2, &quot;王五&quot;);</span><br><span class="line">ps.setString(3, &quot;CLERK&quot;);</span><br><span class="line">//添加批处理,和Statement不一样，不需要参数该sql</span><br><span class="line">ps.addBatch();</span><br><span class="line"></span><br><span class="line">ps.setInt(1, 8000);</span><br><span class="line">ps.setString(2, &quot;赵六&quot;);</span><br><span class="line">ps.setString(3, &quot;CLERK&quot;);</span><br><span class="line">//添加批处理</span><br><span class="line">ps.addBatch();</span><br><span class="line"></span><br><span class="line">//执行批处理</span><br><span class="line">ps.executeBatch();</span><br><span class="line">//提交事务</span><br><span class="line">conn.commit();</span><br><span class="line">&#125; catch (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">try &#123;</span><br><span class="line">conn.rollback();</span><br><span class="line">&#125; catch (SQLException e1) &#123;</span><br><span class="line">e1.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125; finally&#123;</span><br><span class="line">JdbcUtil.closeResource(null, ps, conn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="六-JDBC操作二进制数据"><a href="#六-JDBC操作二进制数据" class="headerlink" title="六. JDBC操作二进制数据"></a>六. JDBC操作二进制数据</h4><p>1.<strong>原理</strong></p><p>PreparedStatement对象可以使用输入和输出流来提供参数数据。这使您可以将整个文件放入可以保存大值的数据库列，例如CLOB和BLOB数据类型。</p><p>有以下方法可用于流式传输数据 -</p><ul><li><strong>setAsciiStream（）：</strong>此方法用于提供大的ASCII值。</li><li><strong>setCharacterStream（）：</strong>此方法用于提供大型UNICODE值。</li><li><strong>setBinaryStream（）：</strong>此方法用于提供较大的二进制值。</li></ul><p><strong>setXXXStream（）</strong>方法除了参数占位符之外还需要额外的参数，文件大小。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">二进制：</span><br><span class="line">blob :65535约等于64KB</span><br><span class="line">longBlob：约4G</span><br><span class="line">文本：</span><br><span class="line">text:65535约等于64KB</span><br><span class="line">longText:约4G</span><br></pre></td></tr></table></figure><p><strong>2.把图片或大文本保存到数据库字段中（一般不推荐这么做）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 保存blob数据</span><br><span class="line"> * </span><br><span class="line"> * @throws SQLException</span><br><span class="line"> * @throws FileNotFoundException</span><br><span class="line"> */</span><br><span class="line">@Test</span><br><span class="line">public void insertImg() throws SQLException, FileNotFoundException &#123;</span><br><span class="line"></span><br><span class="line">Connection connection = JdbcUtil.findConnection();</span><br><span class="line"></span><br><span class="line">String sql = &quot;insert into Emp(empno,ename,job,img) values(?,?,?,?)&quot;;</span><br><span class="line">PreparedStatement ps = connection.prepareStatement(sql);</span><br><span class="line">ps.setString(1, &quot;8000&quot;);</span><br><span class="line">ps.setString(2, &quot;张三&quot;);</span><br><span class="line">ps.setString(3, &quot;CLERK&quot;);</span><br><span class="line"></span><br><span class="line">// 绑定二进制数据,使用setBinaryStream或setBlob方法</span><br><span class="line">File file = new File(&quot;d:/001.jpg&quot;);</span><br><span class="line">ps.setBinaryStream(3, new FileInputStream(file), file.length());</span><br><span class="line"></span><br><span class="line">ps.execute();</span><br><span class="line"></span><br><span class="line">//关闭资源略</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3.读取二进制或大文本数据</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 读取blob类型数据</span><br><span class="line"> * </span><br><span class="line"> * @throws SQLException</span><br><span class="line"> * @throws IOException</span><br><span class="line"> */</span><br><span class="line">@Test</span><br><span class="line">public void selectImg() throws SQLException, IOException &#123;</span><br><span class="line"></span><br><span class="line">Connection connection = JdbcUtil.findConnection();</span><br><span class="line"></span><br><span class="line">PreparedStatement ps = connection.prepareStatement(&quot;select img from Emp where empno = 8000&quot;);</span><br><span class="line"></span><br><span class="line">ResultSet rs = ps.executeQuery();</span><br><span class="line"></span><br><span class="line">rs.next();</span><br><span class="line"></span><br><span class="line">//结果集对像中获取大数据类型</span><br><span class="line">InputStream is = rs.getBinaryStream(&quot;img&quot;);</span><br><span class="line">//写入本地磁盘</span><br><span class="line">OutputStream os = new FileOutputStream(&quot;d:/2.jpg&quot;);</span><br><span class="line">int i = 0;</span><br><span class="line">while ((i = is.read()) != -1) &#123;</span><br><span class="line">os.write(i);</span><br><span class="line">&#125;</span><br><span class="line">//关闭流</span><br><span class="line">os.close();</span><br><span class="line"></span><br><span class="line">//关闭资源略</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="作业题"><a href="#作业题" class="headerlink" title="作业题"></a>作业题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、实现一个学生管理系统，要求实现增删改查，基于控制台实现即可</span><br><span class="line">   要求可以对学生信息进行添加、修改、删除、查询的功能</span><br></pre></td></tr></table></figure><p>#### </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;JDBC高级使用和数据库事务&quot;&gt;&lt;a href=&quot;#JDBC高级使用和数据库事务&quot; class=&quot;headerlink&quot; title=&quot;JDBC高级使用和数据库事务&quot;&gt;&lt;/a&gt;JDBC高级使用和数据库事务&lt;/h3&gt;&lt;h4 id=&quot;今日内容&quot;&gt;&lt;a href=&quot;#今
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://kongxianghe.top/2018/10/23/Tomcat%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8F%8AServlet%E5%85%A5%E9%97%A8/"/>
    <id>http://kongxianghe.top/2018/10/23/Tomcat服务器及Servlet入门/</id>
    <published>2018-10-23T14:06:03.466Z</published>
    <updated>2018-07-09T06:15:58.687Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Tomcat服务器及Servlet入门"><a href="#Tomcat服务器及Servlet入门" class="headerlink" title="Tomcat服务器及Servlet入门"></a>Tomcat服务器及Servlet入门</h2><h4 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">1.web服务器简介</span><br><span class="line">2.B/S架构和C/S架构</span><br><span class="line">3.tomcat服务器搭建（重点）</span><br><span class="line">tomcat服务器介绍</span><br><span class="line">tomcat服务器安装</span><br><span class="line">tomcat服务器目录介绍</span><br><span class="line">tomcat服务器启动</span><br><span class="line">tomcat服务器的访问</span><br><span class="line">4.eclipse集成tomcat（重点）</span><br><span class="line">5.javaWeb项目创建及结构（重点）</span><br><span class="line">javaWeb项目创建</span><br><span class="line">javaWeb项目结构讲解</span><br><span class="line">javaWeb中的jar包加载</span><br><span class="line">web.xml文件详解</span><br><span class="line">6.HTTP协议简介</span><br><span class="line">HTTP概念</span><br><span class="line">HTTP特点</span><br><span class="line">HTTP通信</span><br><span class="line">HTTP请求</span><br><span class="line">HTTP响应</span><br><span class="line">7.Servlet简介（重点）</span><br><span class="line">Servlet概念</span><br><span class="line">Servlet基本使用</span><br><span class="line">ServletAPI</span><br><span class="line">Servlet的三种创建方式</span><br><span class="line">Servlet的二种配置方式</span><br><span class="line">8.Servlet的生命周期（重点）</span><br><span class="line">概念</span><br><span class="line">生命周期四个阶段</span><br><span class="line">生命周期代码实例</span><br><span class="line">9.Servlet获到页面传参（重点）</span><br><span class="line">页面表单</span><br><span class="line">Servlet获取参数</span><br><span class="line">get请求和post请求异同</span><br><span class="line">中文乱码解决</span><br><span class="line"></span><br><span class="line">10.作业</span><br></pre></td></tr></table></figure><p>####一.web服务器简介</p><p>Web服务器是运行及发布Web应用的容器，只有将开发的Web项目放置到该容器中，才能使网络中的所有用户通过浏览器进行访问。开发Java Web应用所采用的服务器主要是与JSP/Servlet兼容的Web服务器，比较常用的有Tomcat、Resin、JBoss、WebSphere 和 WebLogic 等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Tomcat 服务器</span><br><span class="line">　　目前最为流行的Tomcat服务器是Apache-Jarkarta开源项目中的一个子项目，是一个小型、轻量级的支持JSP和Servlet 技术的Web服务器，也是初学者学习开发JSP应用的首选</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Resin 服务器</span><br><span class="line">　　Resin是Caucho公司的产品，是一个非常流行的支持Servlet和JSP的服务器，速度非常快。Resin本身包含了一个支持HTML的Web服务器，这使它不仅可以显示动态内容，而且显示静态内容的能力也毫不逊色，因此许多网站都是使用Resin服务器构建</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JBoss服务器(通用动web,但不包含servlet和jsp等jar)</span><br><span class="line">　　JBoss是一个种遵从JavaEE规范的、开放源代码的、纯Java的EJB服务器，对于J2EE有很好的支持。JBoss采用JML API实现软件模块的集成与管理，其核心服务又是提供EJB服务器，不包含Servlet和JSP的Web容器，不过它可以和Tomcat完美结合</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WebSphere 服务器</span><br><span class="line">　　WebSphere是IBM公司的产品，可进一步细分为 WebSphere Performance Pack、Cache Manager 和WebSphere Application Server等系列，其中WebSphere Application Server 是基于Java 的应用环境，可以运行于 Sun Solaris、Windows NT 等多种操作系统平台，用于建立、部署和管理Internet和Intranet Web应用程序。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WebLogic 服务器(功能强大)</span><br><span class="line">　　WebLogic 是BEA公司的产品（现在已经被Oracle收购），可进一步细分为 WebLogic Server、WebLogic Enterprise 和 WebLogic Portal 等系列，其中 WebLogic Server 的功能特别强大。WebLogic 支持企业级的、多层次的和完全分布式的Web应用，并且服务器的配置简单、界面友好。对于那些正在寻求能够提供Java平台所拥有的一切应用服务器的用户来说，WebLogic是一个十分理想的选择</span><br></pre></td></tr></table></figure><h4 id="二-服务器架构"><a href="#二-服务器架构" class="headerlink" title="二.服务器架构"></a>二.服务器架构</h4><p><strong>B/S 与C/S模式</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">B/S:Browser/Server或浏览器/服务器模式</span><br><span class="line">优点是用户使用简单只要有浏览器和网络即可</span><br><span class="line">常见的程序：淘宝网、京东网等</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C/S:Client/Server或客户端/服务器模式</span><br><span class="line">C/S的优点是能充分发挥客户端PC的处理能力</span><br><span class="line">缺点是对用户的电脑配置要求较高</span><br><span class="line">常见的CS程序：LOL、穿越火线、QQ</span><br></pre></td></tr></table></figure><p>####三.tomcat服务器搭建（重点）</p><p><strong>1.tomcat服务器介绍</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Tomcat是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目，由Apache、Sun 和其他一些公司及个人共同开发而成。由于有了Sun 的参与和支持，最新的Servlet 和JSP 规范总是能在Tomcat 中得到体现，Tomcat 5支持最新的Servlet 2.4 和JSP 2.0 规范。因为Tomcat 技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web 应用服务器。</span><br><span class="line">Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访</span><br><span class="line">问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。对于一个初学者来说，可以这样认为，当在一台机器上配置好Apache 服务器，可利用它响应HTML（标准通用标记语言下的一个应用）页面的访问请求。实际上Tomcat是Apache 服务器的扩展，但运行时它是独立运行的，所以当你运行tomcat 时，它实际上作为一个与Apache 独立的进程单独运行的。</span><br><span class="line">诀窍是，当配置正确时，Apache 为HTML页面服务，而Tomcat 实际上运行JSP 页面和Servlet。另外，Tomcat和IIS等Web服务器一样，具有处理HTML页面的功能，另外它还是一个Servlet和JSP容器，独立的Servlet容器是Tomcat的默认模式。不过，Tomcat处理静态HTML的能力不如Apache服务器。目前Tomcat最新版本为9.0。</span><br></pre></td></tr></table></figure><p><strong>2.tomcat服务器安装</strong></p><p>tomcat压缩版,安装特别方便,只需要右键解压即可!</p><p>安装步骤如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 下载Tomcat，如果网速比较慢，可以在网盘下载</span><br><span class="line">2. 解压到一个没有特殊符号的目录中（一般纯英文即可）</span><br><span class="line">3. 进入到解压的目录下找到bin\startup.bat双击启动即可</span><br></pre></td></tr></table></figure><p>注意事项:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">不建议将服务器软件放在磁盘层次很多的文件夹中!</span><br><span class="line">不建议放在中文路径下!</span><br><span class="line">tomcat安装需要配置JAVA_HOME环境变量</span><br><span class="line">第一次启动服务器建议使用命名行打开,因为可以提示错误信息!</span><br></pre></td></tr></table></figure><p><strong>3.tomcat服务器目录介绍</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1、bin：该目录下存放的是二进制可执行文件，如果是安装版，那么这个目录下会有两个exe文件：tomcat8.exe、tomcat8w.exe，前者是在控制台下启动Tomcat，后者是弹出UGI窗口启动Tomcat；如果是解压版，那么会有startup.bat和shutdown.bat文件，startup.bat用来启动Tomcat，但需要JDK的配置，shutdawn.bat用来停止Tomcat；</span><br><span class="line"></span><br><span class="line">2、conf：这是一个非常非常重要的目录，这个目录下有四个最为重要的文件：</span><br><span class="line">server.xml：配置整个服务器信息。例如修改端口号，添加虚拟主机等；</span><br><span class="line">tomcatusers.xml：存储tomcat用户的文件，这里保存的是tomcat的用户名及密码，以及用户的角色信息。可以按着该文件中的注释信息添加tomcat用户，然后就可以在Tomcat主页中进入Tomcat Manager页面了；</span><br><span class="line">web.xml：部署描述符文件，这个文件中注册了很多MIME类型，即文档类型。这些MIME类型是客户端与服务器之间说明文档类型的，如用户请求一个html网页，那么服务器还会告诉客户端浏览器响应的文档是text/html类型的，这就是一个MIME类型。客户端浏览器通过这个MIME类型就知道如何处理它了。当然是在浏览器中显示这个html文件了。但如果服务器响应的是一个exe文件，那么浏览器就不可能显示它，而是应该弹出下载窗口才对。</span><br><span class="line">MIME就是用来说明文档的内容是什么类型的,通过服务器响应给客户端，让客户端使用应有的方式去处理</span><br><span class="line">context.xml：对所有应用的统一配置，通常我们不会去配置它。</span><br><span class="line"></span><br><span class="line">3、lib：Tomcat的类库，里面是一大堆jar文件。如果需要添加Tomcat依赖的jar文件，可以把它放到这个目录中，当然也可以把应用依赖的jar文件放到这个目录中，这个目录中的jar所有项目都可以共享之，但这样你的应用放到其他Tomcat下时就不能再共享这个目录下的Jar包了，所以建议只把Tomcat需要的Jar包放到这个目录下；</span><br><span class="line"></span><br><span class="line">4、logs：这个目录中都是日志文件，记录了Tomcat启动和关闭的信息，如果启动Tomcat时有错误，那么异常也会记录在日志文件中。</span><br><span class="line"></span><br><span class="line">5、temp：存放Tomcat的临时文件，这个目录下的东西可以在停止Tomcat后删除！</span><br><span class="line"></span><br><span class="line">6、webapps：存放web项目的目录，其中每个文件夹都是一个项目；如果这个目录下已经存在了目录，那么都是tomcat自带的项目。其中ROOT是一个特殊的项目，在地址栏中没有给出项目目录时，对应的就是ROOT项目。http://localhost:8080/examples，进入示例项目。其中examples就是项目名，即文件夹的名字。</span><br><span class="line"></span><br><span class="line">7、work：运行时生成的文件，最终运行的文件都在这里。通过webapps中的项目生成的！可以把这个目录下的内容删除，再次运行时会生再次生成work目录。当客户端用户访问一个JSP文件时，Tomcat会通过JSP生成Java文件，然后再编译Java文件生成class文件，生成的java和class文件都会存放到这个目录下。</span><br><span class="line"></span><br><span class="line">8、LICENSE：许可证。</span><br><span class="line"></span><br><span class="line">9、NOTICE：说明文件。</span><br></pre></td></tr></table></figure><p><strong>4.tomcat服务器启动</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tomcat安装文件/bin/startup.bat 启动程序</span><br></pre></td></tr></table></figure><p><strong>5.tomcat服务器的访问</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">打开浏览器,输入http://localhost:8080</span><br></pre></td></tr></table></figure><p>出下以下界面表示安装成功</p><p><img src="D:\JAVAEE教案\JAVAEE笔记\第9天 tomcat服务器使用及servlet入门\笔记\pic\3.png" alt="3.png"></p><h4 id="四-eclipse集成tomcat"><a href="#四-eclipse集成tomcat" class="headerlink" title="四.eclipse集成tomcat"></a>四.eclipse集成tomcat</h4><p><strong>1.打开Eclipse的window–&gt;Preferences—&gt;Server</strong></p><p><img src="D:\JAVAEE教案\JAVAEE笔记\第9天 tomcat服务器使用及servlet入门\笔记\pic\5.bmp" alt="6.bmp"></p><p><strong>2.点击add—&gt;选择对应的版本—&gt;Finish即可</strong></p><p><img src="D:\JAVAEE教案\JAVAEE笔记\第9天 tomcat服务器使用及servlet入门\笔记\pic\6.bmp" alt="6.bmp"></p><p><strong>3.然后选择右边的server—&gt;空白处右键new—&gt;server—&gt;Finish即可。</strong></p><p><img src="D:\JAVAEE教案\JAVAEE笔记\第9天 tomcat服务器使用及servlet入门\笔记\pic\7.bmp" alt="7.bmp"></p><p><strong>4.再右键新建的服务器点击open，按照图片进行修改保存即可</strong></p><p><img src="D:\JAVAEE教案\JAVAEE笔记\第9天 tomcat服务器使用及servlet入门\笔记\pic\8.bmp" alt="8.bmp"></p><p><strong>5.选中新建的服务器右键start即可启动</strong></p><h4 id="五-javaWeb项目创建及结构"><a href="#五-javaWeb项目创建及结构" class="headerlink" title="五.javaWeb项目创建及结构"></a>五.javaWeb项目创建及结构</h4><p><strong>1.javaWeb项目创建</strong></p><p><img src="D:\JAVAEE教案\JAVAEE笔记\第9天 tomcat服务器使用及servlet入门\笔记\pic\9.bmp" alt="9.bmp"></p><p><strong>2. javaweb项目结构讲解</strong></p><p><img src="D:\JAVAEE教案\JAVAEE笔记\第9天 tomcat服务器使用及servlet入门\笔记\pic\11.bmp" alt="2.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Java web工程下的webapp或WebContent就是工程的发布文件夹，发布时会把该文件夹发布到tomcat的webapps里。</span><br><span class="line"></span><br><span class="line">开发时classes文件存放路径：</span><br><span class="line">buildpath：在eclipse中项目的右键java build path-source中指定工程中class文件的编译路径，一般为：test/build/classes。（test是工程名）</span><br><span class="line"></span><br><span class="line">发布时classes文件存放路径：</span><br><span class="line">发布到tomcat时（在eclipse里启动tomcat），src文件夹里的java文件经过编译后，会把.class文件放在WEB-INF文件夹里的classes文件夹中。</span><br><span class="line"></span><br><span class="line">有一些配置文件需要放到WEB-INF的classes文件夹下，所以，通常的做法是手动在工程的WEB-INF文件夹下建立classes文件夹。如果不在工程的WEB-INF下手动建立classes，发布到tomcat时tomcat里的WEB-INF中也会有classes文件夹。</span><br></pre></td></tr></table></figure><p><strong>3.javaWeb中的jar包加载</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">【Web App Libraries】 一般是指向web工程的WEB-INF/lib下的包(可以将包copy到此目录下,然后刷新工程,加入的包一般可以自动找到,如果找不到,右键Properties-&gt;Java Build Path-&gt;Libraries-&gt;Add JARs可以加入.</span><br><span class="line"></span><br><span class="line">如果引用了工程以外的jar，一般会在.classpath中添加&lt;classpathentry kind=&quot;lib&quot; path=&quot;xxx/xxx.jar&quot;/&gt;</span><br><span class="line">以此来表示引入该jar包</span><br><span class="line"></span><br><span class="line">而web-info/lib中的jar不会往.classpath文件中会添加</span><br><span class="line"></span><br><span class="line">编绎jar包的顺序：编译的时候先找classpath中的jar如果没有则找web-info/lib中的jar。</span><br><span class="line"></span><br><span class="line">web工程参照了很多文件，因此发布的时候要打成war包，使其变成单独的个体，放到web容器里。开发环境中eclipse会将工程打包放到tomcat下，进行关联。</span><br></pre></td></tr></table></figure><p><strong>4.web.xml文件详解</strong></p><p>Web 应用名称：提供GUI工具可能会用来标记这个特定的Web应用的一个名称，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;display-name&gt;Tomcat Example&lt;/display-name&gt;</span><br></pre></td></tr></table></figure><p>Web 应用描述：给出于此相关的说明性文本，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;desciption&gt;Tomcat Example servlets and JSP pages.&lt;/desciption&gt;</span><br></pre></td></tr></table></figure><p>上下文参数：声明应用范围内的初始化参数，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> &lt;context-param&gt;</span><br><span class="line">      &lt;param-name&gt;参数名&lt;/para-name&gt;</span><br><span class="line">      &lt;param-value&gt;参数值&lt;/param-value&gt;</span><br><span class="line">      &lt;description&gt;参数描述&lt;/description&gt;</span><br><span class="line">  &lt;/context-param&gt;</span><br><span class="line">  </span><br><span class="line">注意：这是全局参数的获得方式，在servlet里面可以通过 getServletContext().getInitParameter(“context/param”)得到</span><br></pre></td></tr></table></figure><p>过滤器配置：将一个名字与一个实现javaxs.servlet.Filter接口的类相关联，如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;filter&gt;</span><br><span class="line">       &lt;filter-name&gt;setCharacterEncoding&lt;/filter-name&gt;</span><br><span class="line">       &lt;filter-class&gt;com.myTest.setCharacterEncodingFilter&lt;/filter-class&gt;</span><br><span class="line">       &lt;init-param&gt;</span><br><span class="line">           &lt;param-name&gt;encoding&lt;/param-name&gt;</span><br><span class="line">           &lt;param-value&gt;GB2312&lt;/param-value&gt;</span><br><span class="line">       &lt;/init-param&gt;</span><br><span class="line">   &lt;/filter&gt;</span><br><span class="line">   &lt;filter-mapping&gt;</span><br><span class="line">      &lt;filter-name&gt;setCharacterEncoding&lt;/filter-name&gt;</span><br><span class="line">      &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span><br><span class="line">  &lt;/filter-mapping&gt;</span><br></pre></td></tr></table></figure><p>监听器配置,如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;listener&gt;</span><br><span class="line">     &lt;listerner-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;</span><br><span class="line"> &lt;/listener&gt;</span><br></pre></td></tr></table></figure><p>Servlet配置，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> &lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt;servlet名称&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt;servlet类全路径&lt;/servlet-class&gt;</span><br><span class="line">    &lt;init-param&gt;</span><br><span class="line">        &lt;param-name&gt;参数名&lt;/param-name&gt;</span><br><span class="line">        &lt;param-value&gt;参数值&lt;/param-value&gt;</span><br><span class="line">    &lt;/init-param&gt;</span><br><span class="line">　 &lt;load-on-startup&gt;指定当Web应用启动时，装载Servlet的次序&lt;/load-on-startup&gt;</span><br><span class="line">&lt;/servlet&gt;</span><br><span class="line">&lt;servlet-mapping&gt;</span><br><span class="line">  &lt;servlet-name&gt;servlet名称&lt;/servlet-name&gt;</span><br><span class="line">  &lt;url-pattern&gt;映射路径&lt;/url-pattern&gt;</span><br><span class="line">&lt;/servlet-mapping&gt;</span><br></pre></td></tr></table></figure><p>会话超时配置（单位为分钟），如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;session-config&gt;</span><br><span class="line">     &lt;session-timeout&gt;120&lt;/session-timeout&gt;</span><br><span class="line">&lt;/session-config&gt;</span><br></pre></td></tr></table></figure><p>MIME类型配置（手动设置扩展名为htm，标记为html文档），如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;mime-mapping&gt;</span><br><span class="line">      &lt;extension&gt;htm&lt;/extension&gt;</span><br><span class="line">      &lt;mime-type&gt;text/html&lt;/mime-type&gt;</span><br><span class="line">&lt;/mime-mapping&gt;</span><br></pre></td></tr></table></figure><p>指定欢迎文件页配置，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;welcome-file-list&gt;</span><br><span class="line">    &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;</span><br><span class="line">    &lt;welcome-file&gt;index.html&lt;/welcome-file&gt;</span><br><span class="line">    &lt;welcome-file&gt;index.htm&lt;/welcome-file&gt;</span><br><span class="line">&lt;/welcome-file-list&gt;</span><br></pre></td></tr></table></figure><p>配置错误页面，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--配置了当系统发生404错误时，跳转到错误处理页面NotFound.jsp--&gt;</span><br><span class="line">&lt;error-page&gt;</span><br><span class="line">       &lt;error-code&gt;404&lt;/error-code&gt;</span><br><span class="line">       &lt;location&gt;/NotFound.jsp&lt;/location&gt;</span><br><span class="line">&lt;/error-page&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--配置了当系统发生java.lang.NullException（即空指针异常）时，跳转到错误处理页面error.jsp--&gt;</span><br><span class="line">&lt;error-page&gt;</span><br><span class="line">     &lt;exception-type&gt;java.lang.NullException&lt;/exception-type&gt;</span><br><span class="line">     &lt;location&gt;/error.jsp&lt;/location&gt;</span><br><span class="line">&lt;/error-page&gt;</span><br></pre></td></tr></table></figure><p>TLD配置（标签库配置），如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;taglib&gt;</span><br><span class="line">     &lt;taglib-uri&gt;标签库唯一访问标识(必须与标签库tld描述文件中的uri一致)&lt;/taglib-uri&gt;</span><br><span class="line">     &lt;taglib-location&gt;标签库tld描述文件本地路径(如/WEB-INF/mytag.tld)&lt;/taglib-location&gt;</span><br><span class="line"> &lt;/taglib&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">如果开发工具一直在报错,应该把&lt;taglib&gt; 放到 &lt;jsp-config&gt;中</span><br><span class="line"> &lt;jsp-config&gt;</span><br><span class="line">      &lt;taglib&gt;</span><br><span class="line">          &lt;taglib-uri&gt;http://jakarta.apache.org/tomcat/debug-taglib&lt;/taglib-uri&gt;</span><br><span class="line">          &lt;taglib-location&gt;/WEB-INF/pager-taglib.tld&lt;/taglib-location&gt;</span><br><span class="line">      &lt;/taglib&gt;</span><br><span class="line">  &lt;/jsp-config&gt;</span><br></pre></td></tr></table></figure><h4 id="六-HTTP协议简介"><a href="#六-HTTP协议简介" class="headerlink" title="六.HTTP协议简介"></a>六.HTTP协议简介</h4><p><strong>1.HTTP概念</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">超文本传输协议（HTTP，HyperText Transfer Protocol)是互联网上应用最为广泛的一种网络协议,是一个基于请求与响应模式的、无状态的、应用层的协议，常基于TCP的连接方式。</span><br><span class="line">它于1990年提出，经过几年的使用与发展，得到不断地完善和扩展。目前在WWW中使用的是HTTP/1.0的第六版，HTTP/1.1的规范化工作正在进行之中，而且HTTP-NG(NextGeneration of HTTP)的建议已经提出。</span><br></pre></td></tr></table></figure><p><strong>2.HTTP特点</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.支持客户/服务器模式。</span><br><span class="line">2.简单快速：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。</span><br><span class="line">3.灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。</span><br><span class="line">4.无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</span><br><span class="line">5.无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。</span><br></pre></td></tr></table></figure><p><strong>3.HTTP通信过程（先请求，后响应）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">HTTP通信机制是在一次完整的HTTP通信过程中，Web浏览器与Web服务器之间将完成下列7个步骤：</span><br><span class="line">1、 建立TCP连接</span><br><span class="line">在HTTP工作开始之前，Web浏览器首先要通过网络与Web服务器建立连接，该连接是通过TCP来完成的，该协议与IP协议共同构建Internet，即著名的TCP/IP协议族，因此Internet又被称作是TCP/IP网络。HTTP是比TCP更高层次的应用层协议，根据规则，只有低层协议建立之后才能进行更高层协议的连接。因此，首先要建立TCP连接，一般TCP连接的端口号是80</span><br><span class="line">2、 浏览器向Web服务器发送请求命令</span><br><span class="line">一旦建立了TCP连接，Web浏览器就会向Web服务器发送请求命令</span><br><span class="line">例如：GET/sample/hello.html HTTP/1.1</span><br><span class="line">3、 浏览器发送请求头信息</span><br><span class="line">浏览器发送其请求命令之后，还要以头信息的形式向Web服务器发送一些别的信息，之后浏览器发送了一空白行来通知服务器，它已经结束了该头信息的发送。</span><br><span class="line">4、 Web服务器应答</span><br><span class="line">客户机向服务器发出请求后，服务器会客户机回送应答，</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">应答的第一部分是协议的版本号和应答状态码</span><br><span class="line">5、 Web服务器发送应答头信息</span><br><span class="line">正如客户端会随同请求发送关于自身的信息一样，服务器也会随同应答向用户发送关于它自己的数据及被请求的文档。</span><br><span class="line">6、 Web服务器向浏览器发送数据</span><br><span class="line">Web服务器向浏览器发送头信息后，它会发送一个空白行来表示头信息的发送到此为结束，接着，它就以Content-Type应答头信息所描述的格式发送用户所请求的实际数据</span><br><span class="line">7、 Web服务器关闭TCP连接</span><br><span class="line">一般情况下，一旦Web服务器向浏览器发送了请求数据，它就要关闭TCP连接，然后如果浏览器或者服务器在其头信息加入了这行代码 Connection:keep-alive</span><br><span class="line">TCP连接在发送后将仍然保持打开状态，于是，浏览器可以继续通过相同的连接发送请求。保持连接节省了为每个请求建立新连接所需的时间，还节约了网络带宽</span><br></pre></td></tr></table></figure><p><strong>4.HTTP请求</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">当浏览器向Web服务器发出请求时，它向服务器传递了一个数据块，也就是请求信息，HTTP请求信息由3部分组成：</span><br><span class="line">1 请求方法URI协议/版本</span><br><span class="line">2 请求头(Request Header)</span><br><span class="line">3 请求正文</span><br></pre></td></tr></table></figure><p>下面是一个HTTP请求的例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">GET/hello HTTP/1.1</span><br><span class="line"></span><br><span class="line">Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Language:zh-CN,zh;q=0.8,en-GB;q=0.6,en;q=0.4</span><br><span class="line">Connection:Keep-Alive</span><br><span class="line">Host:localhost</span><br><span class="line">User-Agent:Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36</span><br><span class="line">Accept-Encoding:gzip, deflate, br </span><br><span class="line"></span><br><span class="line">name=zhangsan</span><br><span class="line"></span><br><span class="line">解析如下：</span><br><span class="line">1、请求方法 URI 协议/版本</span><br><span class="line">请求的第一行是“方法URL议/版本”：GET/hello HTTP/1.1</span><br><span class="line">以上代码中“GET”代表请求方法，“/hello”表示URI，“HTTP/1.1代表协议和协议的版本。</span><br><span class="line">根据HTTP标准，HTTP请求可以使用多种请求方法。例如：HTTP1.1支持7种请求方法：GET、POST、HEAD、OPTIONS、PUT、DELETE和TARCE。在Internet应用中，最常用的方法是GET和POST。</span><br><span class="line">URL完整地指定了要访问的网络资源，通常只要给出相对于服务器的根目录的相对目录即可，因此总是以“/”开头，最后，协议版本声明了通信过程中使用HTTP的版本。</span><br><span class="line">2、请求头(Request Header)</span><br><span class="line">请求头包含许多有关的客户端环境和请求正文的有用信息。例如，请求头可以声明浏览器所用的语言，请求正文的长度等。</span><br><span class="line">Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Language:zh-CN,zh;q=0.8,en-GB;q=0.6,en;q=0.4</span><br><span class="line">Connection:Keep-Alive</span><br><span class="line">Host:localhost</span><br><span class="line">User-Agent:Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36</span><br><span class="line">Accept-Encoding:gzip, deflate, br</span><br><span class="line">3、请求正文</span><br><span class="line">请求头和请求正文之间是一个空行，这个行非常重要，它表示请求头已经结束，接下来的是请求正文。请求正文中可以包含客户提交的查询字符串信息：</span><br><span class="line">name=zhangsan</span><br></pre></td></tr></table></figure><p><strong>5.HTTP响应</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在接收和解释请求消息后，服务器返回一个HTTP响应消息。</span><br><span class="line">HTTP响应也是由三个部分组成，分别是：状态行、消息报头、响应正文</span><br></pre></td></tr></table></figure><p>其中状态行如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">状态行格式如下：</span><br><span class="line">HTTP-Version  Status-Code  Reason-Phrase  CRLF</span><br><span class="line"></span><br><span class="line">其中：</span><br><span class="line">HTTP-Version表示服务器HTTP协议的版本；</span><br><span class="line">Status-Code表示服务器发回的响应状态代码；</span><br><span class="line">Reason-Phrase表示状态代码的文本描述。</span><br><span class="line"></span><br><span class="line">状态代码有三位数字组成，第一个数字定义了响应的类别，且有五种可能取值：</span><br><span class="line">1xx：指示信息--表示请求已接收，继续处理</span><br><span class="line">2xx：成功--表示请求已被成功接收、理解、接受</span><br><span class="line">3xx：重定向--要完成请求必须进行更进一步的操作</span><br><span class="line">4xx：客户端错误--请求有语法错误或请求无法实现</span><br><span class="line">5xx：服务器端错误--服务器未能实现合法的请求</span><br><span class="line">常见状态代码、状态描述、说明：</span><br><span class="line">200 OK      //客户端请求成功（记住）</span><br><span class="line">400 Bad Request  //客户端请求有语法错误，不能被服务器所理解（记住）</span><br><span class="line">401 Unauthorized //请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用 </span><br><span class="line">403 Forbidden  //服务器收到请求，但是拒绝提供服务</span><br><span class="line">404 Not Found  //请求资源不存在，eg：输入了错误的URL（记住）</span><br><span class="line">500 Internal Server Error //服务器发生不可预期的错误（记住）</span><br><span class="line">503 Server Unavailable  //服务器当前不能处理客户端的请求，一段时间后可能恢复正常</span><br><span class="line">eg：HTTP/1.1 200 OK （CRLF）</span><br></pre></td></tr></table></figure><p>如访问<a href="http://www.1000phone.com/" target="_blank" rel="noopener">http://www.1000phone.com/</a></p><p><img src="D:\JAVAEE教案\JAVAEE笔记\第9天 tomcat服务器使用及servlet入门\笔记\pic\10.bmp" alt="10.bmp"></p><h4 id="七-Servlet简介"><a href="#七-Servlet简介" class="headerlink" title="七.Servlet简介"></a>七.Servlet简介</h4><p><strong>1.概念</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Servlet（Server Applet）是Java Servlet的简称，称为小服务程序或服务连接器，用Java编写的服务器端程序，主要功能在于交互式地浏览和修改数据，生成动态Web内容</span><br><span class="line">Servlet运行于支持Java的应用服务器中。从实现上讲，Servlet可以响应任何类型的请求，但绝大多数情况下Servlet只用来扩展基于HTTP协议的Web服务器。</span><br></pre></td></tr></table></figure><p><strong>2.Servlet的基本使用</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 在src创建package</span><br><span class="line">2. 选中刚刚创建的包，右键--&gt;New--&gt;Servlet</span><br><span class="line">3. 发布到tomcat容器中</span><br><span class="line">4. 浏览器输入网址访问：http://localhost:8080/项目名称/HelloServlet</span><br></pre></td></tr></table></figure><p>第一个Servlet代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> *第一个Servlet程序</span><br><span class="line"> */</span><br><span class="line">@WebServlet(&quot;/HelloServlet&quot;)</span><br><span class="line">public class HelloServlet extends HttpServlet &#123;</span><br><span class="line">private static final long serialVersionUID = 1L;</span><br><span class="line">       </span><br><span class="line">    /**</span><br><span class="line">     * @构造函数</span><br><span class="line">     */</span><br><span class="line">    public HelloServlet() &#123;</span><br><span class="line">        super();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  处理Get请求</span><br><span class="line"> */</span><br><span class="line">protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">// 响应内容到浏览器</span><br><span class="line">response.getWriter().print(&quot;Hello Word&quot;);;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 处理Post请求</span><br><span class="line"> */</span><br><span class="line">protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3.ServletAPI</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Servlet编程需要使用到javax.servlet 和 javax.servlet.http两个包下面的类和接口，在所有的类和接口中，javax.servlet.servlet 接口最为重要。所有的servlet程序都必须实现该接口或者继承实现了该接口的类。</span><br><span class="line"></span><br><span class="line">其中：</span><br><span class="line">javax.Servlet是父接口</span><br><span class="line">javax.GenericServlet是抽像类，实现了Servlet接口，该类没有实现http协议</span><br><span class="line">javax.HttpServlet是GenericServlet的子类，该类实现了Http协议，专门处理Http请求服务的</span><br><span class="line"></span><br><span class="line">常用的API</span><br><span class="line">javax.servlet.ServletConfig;</span><br><span class="line">javax.servlet.ServletException;</span><br><span class="line">javax.servlet.http.HttpServlet;</span><br><span class="line">javax.servlet.http.HttpServletRequest;</span><br><span class="line">javax.servlet.http.HttpServletResponse;</span><br><span class="line">javax.servlet.http.HttpSession;</span><br><span class="line">javax.servlet.http.Cookie;</span><br></pre></td></tr></table></figure><p>其中三个重要接口和类如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Servlet接口</span><br><span class="line">在ServletAPI中最重要的是Servlet接口，所有Servlet都会直接或间接的与该接口发生联系，或是直接实现该接口，或间接继承自实现了该接口的类。</span><br><span class="line">该接口包括以下五个方法：</span><br><span class="line"></span><br><span class="line">init(ServletConfig config)</span><br><span class="line">ServletConfig getServletConfig()</span><br><span class="line">service(ServletRequest req,ServletResponse res)</span><br><span class="line">String getServletInfo()</span><br><span class="line">destroy( )</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GenericServlet抽象类</span><br><span class="line">它对Servlet接口中的部分方法（init和destroy）添加了实现，使得开发时只需要考虑针对service方法的业务实现即可。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HttpServlet类</span><br><span class="line">是继承GenericServlet的基础上进一步的扩展，</span><br><span class="line">扩展方法：</span><br><span class="line">public voidinit(ServletConfig config)，</span><br><span class="line">public void init()。他们有如下的关系： init（ServletConfig config）方法由tomcat自动调用，它读取web工程下的web.xml，将读取的信息打包传给此参数，此方法的参数同时将接收的信息传递给GenericServlet类中的成员变量config，同时调用init()。以后程序员想重写init方法可以选择init（ServletConfig config）或者init()，但是选择init（ServletConfig config）势必会覆盖此方法已实现的内容，没有为config变量赋值，此后若是调用getServletConfig（）方法返回config时会产生空指针异常的，所以想重写init（ServletConfig config）方法，必须在方法体中第一句写上 super.init（config），为了防止程序员忘记重写super.init（config）方法sun公司自动为用户生成一个public void init()的方法</span><br></pre></td></tr></table></figure><p><strong>4.Servlet的三种创建方式</strong></p><p>方式一：继承HttpServlet</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Servlet implementation class HelloServlet</span><br><span class="line"> * 演示Servlet的第一种创建方式，继承HttpServlet.也是开发中推荐的</span><br><span class="line"> * </span><br><span class="line"> */</span><br><span class="line">@WebServlet(&quot;/hs1&quot;)</span><br><span class="line">public class HelloServlet extends HttpServlet &#123;</span><br><span class="line">private static final long serialVersionUID = 1L;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line"> */</span><br><span class="line">protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">response.getWriter().print(&quot;我是Servlet创建的第一种方式&quot;);</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line"> */</span><br><span class="line">protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方式二：实现接口Servlet</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Servlet创建的第二种方式：实现接口Servlet</span><br><span class="line"> * */</span><br><span class="line">@WebServlet(&quot;/hs2&quot;)</span><br><span class="line">public class HelloServlet2 implements Servlet&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void destroy() &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public ServletConfig getServletConfig() &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">return null;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public String getServletInfo() &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">return null;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void init(ServletConfig arg0) throws ServletException &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">&#125;</span><br><span class="line">@Override</span><br><span class="line">public void service(ServletRequest request, ServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">System.out.println(&quot;OK&quot;);</span><br><span class="line">response.setContentType(&quot;text/html;charset=UTF-8&quot;);</span><br><span class="line">response.getWriter().println(&quot;我是第二种创建方式&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方式三：继承GenericServlet类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Servlet的第三种创建方式：继承GenericServlet类*/</span><br><span class="line">@WebServlet(value=&quot;/hs3&quot;)</span><br><span class="line">public class HelloServlet3 extends GenericServlet&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void service(ServletRequest request, ServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">System.out.println(&quot;OK&quot;);</span><br><span class="line">response.setContentType(&quot;text/html;charset=UTF-8&quot;);</span><br><span class="line">response.getWriter().println(&quot;我是第三种创建方式&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>5.Servlet的二种配置方式</strong></p><p>方式一：注解式配置 Servlet3.0及以后支持</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Servlet implementation class HelloServlet</span><br><span class="line"> * 演示Servlet注解式配置</span><br><span class="line"> */</span><br><span class="line">@WebServlet(value=&quot;/hello&quot;,loadOnStartup=1)</span><br><span class="line">public class HelloServlet extends HttpServlet &#123;</span><br><span class="line">private static final long serialVersionUID = 1L;</span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line"> */</span><br><span class="line">protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">response.getWriter().print(&quot;OK&quot;);</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line"> */</span><br><span class="line">protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方式二：web.xml配置 Servlet所有版本都支持</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Servlet implementation class HelloServlet</span><br><span class="line"> * 演示Servlet的web.xml配置</span><br><span class="line"> */</span><br><span class="line">public class HelloServlet extends HttpServlet &#123;</span><br><span class="line">private static final long serialVersionUID = 1L;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line"> */</span><br><span class="line">protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">response.getWriter().print(&quot;OK&quot;);</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line"> */</span><br><span class="line">protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>web.xml文件配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;web-app xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns=&quot;http://xmlns.jcp.org/xml/ns/javaee&quot; xsi:schemaLocation=&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot; version=&quot;3.1&quot;&gt;</span><br><span class="line">  &lt;display-name&gt;Web_Day11&lt;/display-name&gt;</span><br><span class="line">  &lt;!--Servlet的第二种配置  --&gt;</span><br><span class="line">  &lt;!--Servlet配置  --&gt;</span><br><span class="line">  &lt;servlet&gt;</span><br><span class="line">  &lt;!--名称  --&gt;</span><br><span class="line">    &lt;servlet-name&gt;hello2&lt;/servlet-name&gt;</span><br><span class="line">    &lt;!--Servlet的全称类名  --&gt;</span><br><span class="line">    &lt;servlet-class&gt;com.qf.web.servlet.HelloServlet&lt;/servlet-class&gt;</span><br><span class="line">    &lt;!--启动的优先级，数字越小越先起作用  --&gt;</span><br><span class="line">    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</span><br><span class="line">  &lt;/servlet&gt;</span><br><span class="line">  &lt;!--映射配置  --&gt;</span><br><span class="line">  &lt;servlet-mapping&gt;</span><br><span class="line">  &lt;!--名称  --&gt;</span><br><span class="line">    &lt;servlet-name&gt;hello2&lt;/servlet-name&gt;</span><br><span class="line">    &lt;!--资源的匹配规则：精确匹配  --&gt;</span><br><span class="line">    &lt;url-pattern&gt;/hello2&lt;/url-pattern&gt;</span><br><span class="line">  &lt;/servlet-mapping&gt;</span><br><span class="line">  &lt;welcome-file-list&gt;</span><br><span class="line">    &lt;welcome-file&gt;login.html&lt;/welcome-file&gt;</span><br><span class="line">  &lt;/welcome-file-list&gt;</span><br><span class="line">&lt;/web-app&gt;</span><br></pre></td></tr></table></figure><h4 id="八-Servlet的生命周期"><a href="#八-Servlet的生命周期" class="headerlink" title="八.Servlet的生命周期"></a>八.Servlet的生命周期</h4><p><strong>1.概念</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">生命周期也就是生命历程，就像人都是从怀胎--&gt;出生--&gt;婴儿--&gt;儿童--&gt;少年--&gt;成年--&gt;中年--&gt;老年--&gt;死亡</span><br></pre></td></tr></table></figure><p><strong>2.生命周期的四个阶段</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">阶段一、实例化</span><br><span class="line">实例化阶段是Servlet生命周期中的第一步，由Servlet容器调用Servlet的构造器创建一个具体的Servlet对象的过程。而这个创建的时机可以是在容器收到针对这个组件的请求之后，即用了才创建；也可以在容器启动之后立刻创建实例，而不管此时Servlet是否使用的上。使用如下代码可以设置Servlet是否在服务器启动时就执行创建</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">阶段二、初始化</span><br><span class="line">Servlet在被加载实例化之后，必须要初始化它。在初始化阶段，init（）方法会被调用。这个方法在javax.servlet.Servlet接口中定义。其中，方法以一个ServletConfig类型的对象作为参数。ServletConfig对象由Servlet引擎负责创建，从中可以读取到事先在web.xml文件中通过&lt;init-param&gt;节点配置的多个name-value名值对。ServletConfig对象还可以让Servlet接受一个ServletContext对象。</span><br><span class="line">一般情况下，init方法不需要编写，因GenericServlet已经提供了init方法的实现，并且提供了getServletConfig方法来获得ServletConfig对象。</span><br><span class="line">注：init方法只被执行一次</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">阶段三、就绪/服务</span><br><span class="line">Servlet被初始化以后就处于能够响应请求的就绪状态。每个对Servlet的请求由一个ServletRequest对象代表，Servlet给客户端的响应由一个ServletResponse对象代表。当客户端有一个请求时，容器就会将请求与响应对象转给Servlet，以参数的形式传给service方法。service方法由javax.servlet.Servlet定义，由具体的Servlet实现</span><br><span class="line">HttpServlet将service方法拆分了。doGet和doPost</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">阶段四、销毁</span><br><span class="line">Servlet容器在销毁Servlet对象时会调用destroy方法来释放资源。通常情况下Servlet容器停止或者重新启动都会引起销毁Servlet对象的动作，但除此之外，Servlet容器也有自身管理Servlet对象的准则，整个生命周期并不需要人为进行干预</span><br></pre></td></tr></table></figure><p><strong>3.生命周期代码如下：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Servlet implementation class LifeServlet</span><br><span class="line"> * 演示Servlet的生命周期：</span><br><span class="line"> * 1、实例化</span><br><span class="line"> * 2、init:初始化</span><br><span class="line"> * 3、service：服务</span><br><span class="line"> * 4、destory：销毁</span><br><span class="line"> */</span><br><span class="line">@WebServlet(&quot;/LifeServlet&quot;)</span><br><span class="line">public class LifeServlet extends HttpServlet &#123;</span><br><span class="line">private static final long serialVersionUID = 1L;</span><br><span class="line">       </span><br><span class="line">    /**</span><br><span class="line">     * @see HttpServlet#HttpServlet()</span><br><span class="line">     */</span><br><span class="line">    public LifeServlet() &#123;</span><br><span class="line">        super();</span><br><span class="line">        System.out.println(&quot;1、完成了实例化&quot;);</span><br><span class="line">        // TODO Auto-generated constructor stub</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    public void init() throws ServletException &#123;</span><br><span class="line">    // TODO Auto-generated method stub</span><br><span class="line">    super.init();</span><br><span class="line">    System.out.println(&quot;2、完成了初始化&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line"> */</span><br><span class="line">protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">System.out.println(&quot;3、就绪中&quot;);</span><br><span class="line">response.getWriter().append(&quot;Served at: &quot;).append(request.getContextPath());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line"> */</span><br><span class="line">protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void destroy() &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">super.destroy();</span><br><span class="line">System.out.println(&quot;4、销毁了&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="九-Servlet获取页面传参"><a href="#九-Servlet获取页面传参" class="headerlink" title="九.Servlet获取页面传参"></a>九.Servlet获取页面传参</h4><p><strong>1.html页面如下：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;欢迎页面&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;欢迎你&lt;/h1&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;form action=&quot;HelloServlet&quot; method=&quot;post&quot;&gt;</span><br><span class="line">&lt;label&gt;姓名：&lt;/label&gt;&lt;input name=&quot;name&quot;&gt;&lt;br/&gt;</span><br><span class="line">&lt;label&gt;年龄：&lt;/label&gt;&lt;input  name=&quot;age&quot;&gt;&lt;br/&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">注意：如查在浏览器地址栏输入如下链接</span><br><span class="line">http://localhost:8080/servlet_day01/login?username=admin&amp;password=1234</span><br><span class="line"></span><br><span class="line">其中？后面称为查询字符串，一般是由键值对组成，键值对与键值对之间使用&amp;符号连接</span><br><span class="line">?username=admin&amp;password=1234</span><br></pre></td></tr></table></figure><p><strong>2.Servlet代码如下：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Servlet implementation class HelloServlet</span><br><span class="line"> * 演示Servlet的获取请求参数</span><br><span class="line"> * </span><br><span class="line"> */</span><br><span class="line">@WebServlet(&quot;/HelloServlet&quot;)</span><br><span class="line">public class HelloServlet extends HttpServlet &#123;</span><br><span class="line">private static final long serialVersionUID = 1L;</span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line"> */</span><br><span class="line">protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">//获取表单提交的姓名</span><br><span class="line">String name=request.getParameter(&quot;name&quot;);</span><br><span class="line">//获取年龄</span><br><span class="line">String age=request.getParameter(&quot;age&quot;);</span><br><span class="line">//服务端输出打印</span><br><span class="line">System.out.println(request.getRemoteAddr()+&quot;发来信息：姓名：&quot;+name+&quot;----&gt;年龄：&quot;+age);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line"> */</span><br><span class="line">protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3.get请求和post请求区别</strong></p><p>默认的请求方式是GET请求，对应的Servlet的方法是doGet方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET提交的数据会放在URL之后，以?分割URL和传输数据，参数之间以&amp;相连</span><br><span class="line">GET提交的数据大小有限制（因为浏览器对URL的长度有限制）</span><br><span class="line">GET方式提交数据，会带来安全问题</span><br><span class="line">效率高</span><br></pre></td></tr></table></figure><p>POST请求，对应的Servlet的方法是doPost</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST方法是把提交的数据放在HTTP包的Body中</span><br><span class="line">POST方法提交的数据没有限制</span><br><span class="line">POST提交的数据相对安全</span><br><span class="line">效率相对没有GET高</span><br></pre></td></tr></table></figure><p><strong>4.中文乱码解决</strong></p><p>产生乱码原因：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">产生乱码，就是因为服务器和客户端沟通的编码不一致造成的，因此解决的办法是：在客户端和服务器之间设置一个统一的编码，之后就按照此编码进行数据的传输和接收</span><br></pre></td></tr></table></figure><p>get中文乱码解决方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">三码一致</span><br><span class="line">1.tomcat中工程的编码要和页面编码一致</span><br><span class="line">2.tomcat服务器编码也要和上述编码一致</span><br><span class="line"></span><br><span class="line">工程编码默认设置方式：</span><br><span class="line">window---&gt;preferences---&gt;general---&gt;workspace</span><br><span class="line"></span><br><span class="line">在server.xml文件中可以配置服务器的编码：</span><br><span class="line"> &lt;Connector connectionTimeout=&quot;20000&quot; port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot; redirectPort=&quot;8443&quot; URIEncoding=&quot;GBK&quot;/&gt;</span><br><span class="line">tomcat 其默认编码是ISO8859-1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在Tomcat7及以下</span><br><span class="line">客户端以UTF-8的编码传输数据到服务器端，而服务器端的request对象使用的是ISO8859-1这个字符编码来接收数据，服务器和客户端沟通的编码不一致因此才会产生中文乱码的。解决办法：在接收到数据后，先获取request对象以ISO8859-1字符编码接收到的原始数据的字节数组，然后通过字节数组以指定的编码构建字符串，解决乱码问题。</span><br><span class="line"></span><br><span class="line">Tomcat8的版本中GET基本就不会乱码了，因为服务器对url的编码格式可以进行自动转换</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Servlet implementation class HelloServlet</span><br><span class="line"> * 演示Servlet的GET请求,中文乱码的问题</span><br><span class="line"> * </span><br><span class="line"> */</span><br><span class="line">@WebServlet(&quot;/GETServlet&quot;)</span><br><span class="line">public class GetServlet extends HttpServlet &#123;</span><br><span class="line">private static final long serialVersionUID = 1L;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line"> */</span><br><span class="line">protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">//获取表单提交的姓名</span><br><span class="line">String name=request.getParameter(&quot;name&quot;);</span><br><span class="line">name=new String(name.getBytes(&quot;ISO8859-1&quot;),&quot;UTF-8&quot;);</span><br><span class="line">//获取年龄</span><br><span class="line">String age=request.getParameter(&quot;age&quot;);</span><br><span class="line">//服务端输出打印</span><br><span class="line">System.out.println(request.getRemoteAddr()+&quot;发来信息：姓名：&quot;+name+&quot;----&gt;年龄：&quot;+age);</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line"> */</span><br><span class="line">protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Post乱码解决方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">由于客户端是以UTF-8字符编码将表单数据传输到服务器端的，因此服务器也需要设置以UTF-8字符编码进行接收，要想完成此操作，服务器可以直接使用从ServletRequest接口继承而来的&quot;setCharacterEncoding(charset)&quot;方法进行统一的编码设置。</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Servlet implementation class HelloServlet</span><br><span class="line"> * 演示Servlet的GET请求,中文乱码的问题</span><br><span class="line"> * </span><br><span class="line"> */</span><br><span class="line">@WebServlet(&quot;/GETServlet&quot;)</span><br><span class="line">public class GetServlet extends HttpServlet &#123;</span><br><span class="line">private static final long serialVersionUID = 1L;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line"> */</span><br><span class="line">protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line"> */</span><br><span class="line">protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">//设置请求参数的编码格式--对GET无效</span><br><span class="line">        request.setCharacterEncoding(&quot;UTF-8&quot;);</span><br><span class="line">//获取表单提交的信息</span><br><span class="line">String name=request.getParameter(&quot;msg&quot;);</span><br><span class="line">//服务端输出打印</span><br><span class="line">System.out.println(request.getRemoteAddr()+&quot;发来信息：&quot;+msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>5.Servlet输出中文</strong></p><p>页面产生乱码原因</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">浏览器识别不到返回的中文是什么编码格式，就会默认使用GB2312,如果返回的是UTF-8格式的那么在浏览器上就会显示乱码的问题</span><br></pre></td></tr></table></figure><p>解决方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.setContentType(&quot;text/html;charset=UTF-8&quot;);</span><br></pre></td></tr></table></figure><h4 id="十-作业"><a href="#十-作业" class="headerlink" title="十.作业"></a>十.作业</h4><p>请结合之前学习的前端技术，用户注册功能（用户名，密码，性别，地址），</p><p>实现一个页面输入内容存储到数据库的功能</p><p>使用Servlet接收页面数据，通过JDBC存储到数据库</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Tomcat服务器及Servlet入门&quot;&gt;&lt;a href=&quot;#Tomcat服务器及Servlet入门&quot; class=&quot;headerlink&quot; title=&quot;Tomcat服务器及Servlet入门&quot;&gt;&lt;/a&gt;Tomcat服务器及Servlet入门&lt;/h2&gt;&lt;h4 i
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://kongxianghe.top/2018/10/23/Servlet%E7%9A%84Request%E5%92%8CResponse%E5%AF%B9%E5%83%8F/"/>
    <id>http://kongxianghe.top/2018/10/23/Servlet的Request和Response对像/</id>
    <published>2018-10-23T14:06:03.462Z</published>
    <updated>2018-07-09T06:15:55.007Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Servlet的Request和Response对像"><a href="#Servlet的Request和Response对像" class="headerlink" title="Servlet的Request和Response对像"></a>Servlet的Request和Response对像</h2><h4 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.servlet请求资源路径（重点）</span><br><span class="line">2.servlet的Request对像（重点）</span><br><span class="line">3.servlet的Response对像（重点）</span><br><span class="line">4.servlet上下文对像（重点）</span><br><span class="line">5.servlet的重定向和转发（重点）</span><br><span class="line">6.servlet的绝对路径和相对路径（重点）</span><br><span class="line">7.servlet线程安全问题（重点）</span><br><span class="line">8.作业</span><br></pre></td></tr></table></figure><h4 id="一-Servlet请求资源路径"><a href="#一-Servlet请求资源路径" class="headerlink" title="一.Servlet请求资源路径"></a>一.Servlet请求资源路径</h4><p><strong>1.请求资源路径的概念</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在浏览器输入：http://127.0.0.1:8080/servlet_day12/HelloServlet</span><br><span class="line">servlet_day12/HelloServlet就是请求资源路径</span><br></pre></td></tr></table></figure><p><strong>2.容器对请求的处理过程</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.在浏览器输入：http://127.0.0.1:8080/servlet_day02/HelloServlet</span><br><span class="line">2.浏览器依据ip，port建立与Servlet容器之间的连接，然后将请求资源路径servlet_day02/HelloServlet发送过去给容器</span><br><span class="line">3.容器依据应用名“/servlet_day12”找到应用所在的文件夹，容器会默认请求的是一个Servlet，</span><br><span class="line">4.如果使用的是XML配置，那么查找web.xml文件中所有的Servlet配置url-pattern,看是否有匹配的Servlet</span><br><span class="line">如果使用的是注解式配置，那么就直接检索注解@WebServlet的值是否匹配</span><br></pre></td></tr></table></figure><p><strong>3.匹配Servlet的规则</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">容器在进行url-pattern比对的时候是遵循一定的匹配原则的</span><br><span class="line">url-pattern定义匹配规则，取值说明：</span><br><span class="line">1. 精确匹配 /具体的资源名称：只有url路径是具体的名称的时候才会触发Servlet后缀匹配</span><br><span class="line">2. *.xxx资源名称：只要是以xxx结尾的就匹配触发Servlet</span><br><span class="line">3. 通配符匹配/*：匹配所有请求，包含服务器的所有资源</span><br></pre></td></tr></table></figure><h4 id="二-Servlet的Request对像"><a href="#二-Servlet的Request对像" class="headerlink" title="二.Servlet的Request对像"></a>二.Servlet的Request对像</h4><p><strong>1.servletRequest对像介绍</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">定义将客户端请求信息提供给某个 servlet 的对象。servlet 容器创建 ServletRequest 对象，并将该对象作为参数传递给该 servlet 的 service 方法。</span><br></pre></td></tr></table></figure><p><strong>2.HttpServletRequest对像介绍</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HttpServletRequest对象代表客户端的请求，当客户端通过HTTP协议访问服务器时，HTTP请求头中的所有信息都封装在这个对象中，开发人员通过这个对象的方法，可以获得客户这些信息。</span><br></pre></td></tr></table></figure><p><strong>3.HttpServletRequest常用API</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">获得客户端信息</span><br><span class="line">　　getRequestURL方法返回客户端发出请求时的完整URL。</span><br><span class="line">　　getRequestURI方法返回请求行中的资源名部分。</span><br><span class="line">　　getQueryString 方法返回请求行中的参数部分。</span><br><span class="line">　　getPathInfo方法返回请求URL中的额外路径信息。额外路径信息是请求URL中的位于Servlet的路径之后和查询参数之前的内容，它以“/”开头。</span><br><span class="line">　　getRemoteAddr方法返回发出请求的客户机的IP地址。</span><br><span class="line">　　getRemoteHost方法返回发出请求的客户机的完整主机名。</span><br><span class="line">　　getRemotePort方法返回客户机所使用的网络端口号。</span><br><span class="line">　　getLocalAddr方法返回WEB服务器的IP地址。</span><br><span class="line">　　getLocalName方法返回WEB服务器的主机名。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">获得客户端请求头</span><br><span class="line">　　getHeader(string name)方法:获取指定名称的String值</span><br><span class="line">　　getHeaders(String name)方法:获取指定名称的Enumeration值</span><br><span class="line">　　getHeaderNames()方法：获取所有的请求消息头的名称</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">获得客户机端请求参数(客户端提交的数据)</span><br><span class="line">    getParameter(String)方法(常用)：获取指定参数的值</span><br><span class="line">    //http://localhost:8080/servlet_day02/req.do?love=reading&amp;love=movie&amp;love=music</span><br><span class="line">    getParameterValues(String name)方法(常用)：获取指定参数的所有的值</span><br><span class="line">    getParameterNames()方法(不常用)：获取所有的请求参数</span><br><span class="line">    getParameterMap()方法(编写框架时常用)：获取所有的请求参数和对应的值</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">设置request域中内容,称为request域，该域可以存放键值对</span><br><span class="line">setAttribute(String key,Object value);</span><br><span class="line">getAttribute(String key);</span><br><span class="line">removeAttribute(String key)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">设置请求的编码格式</span><br><span class="line">setCharacterEncoding(String);设置编码格式，可以解决post乱码</span><br></pre></td></tr></table></figure><p><strong>4.代码如下：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">//1.测试获取请求行数据的方法和请求头的方法</span><br><span class="line">  //1.获取请求行的方法</span><br><span class="line">   //获取请求方式</span><br><span class="line">   String method = request.getMethod();</span><br><span class="line">   //获取请求的url </span><br><span class="line">   String url = request.getRequestURL()+&quot;&quot;;</span><br><span class="line">   //获取uri </span><br><span class="line">   String uri = request.getRequestURI();</span><br><span class="line">   //获取请求的参数</span><br><span class="line">   String query = request.getQueryString();</span><br><span class="line">   //获取请求人的iP</span><br><span class="line">   String ip = request.getRemoteAddr();</span><br><span class="line">   //获取请求的主机名</span><br><span class="line">   String host = request.getRemoteHost();</span><br><span class="line">   </span><br><span class="line">   System.out.println(method+&quot; url:&quot;+url+&quot; uri:&quot;+</span><br><span class="line">   uri+&quot; query:&quot;+query+&quot; ip:&quot;+ip+&quot; host:&quot;+host);</span><br><span class="line">   </span><br><span class="line">  //获取请求信息</span><br><span class="line">  //全部输出  </span><br><span class="line">   String header = request.getHeader(&quot;user-agent&quot;);</span><br><span class="line">   if (header.contains(&quot;firefox&quot;)) &#123;</span><br><span class="line">             //获取所有请求的names</span><br><span class="line">    Enumeration&lt;String&gt; headerNames = request.getHeaderNames();</span><br><span class="line">    while (headerNames.hasMoreElements()) &#123;</span><br><span class="line">String name = (String) headerNames.nextElement();</span><br><span class="line">//根据name获取keys</span><br><span class="line">Enumeration&lt;String&gt; headers = request.getHeaders(name);</span><br><span class="line">while (headers.hasMoreElements()) &#123;</span><br><span class="line">String key = (String) headers.nextElement();</span><br><span class="line">System.out.println(name+&quot;---&gt;&quot;+key);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="三-Servlet的Response对像"><a href="#三-Servlet的Response对像" class="headerlink" title="三.Servlet的Response对像"></a>三.Servlet的Response对像</h4><p><strong>1.Response简介</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">定义辅助servlet将响应发送到客户端的对象。servlet 容器创建 ServletResponse 对象，并将它作为参数传递给 servlet 的 service 方法。</span><br></pre></td></tr></table></figure><p><strong>2.HttpServletResponse介绍</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">扩展 ServletResponse 接口以提供特定于 HTTP 的发送响应功能。</span><br><span class="line">例如，该接口拥有访问 HTTP 头和 cookie 的方法。</span><br><span class="line">客户端向服务器发起的都是HTTP协议操作,所以我们大部分使用HttpServletResponse对象作为直接操作对象!</span><br></pre></td></tr></table></figure><p><strong>3.HttpServletResponse 常用API介绍</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.setStatus(int code)设置响应状态码</span><br><span class="line">2.setHeader(name,value)设置响应信息头</span><br><span class="line">3.setCharacterEncoding(String);设置响应编码格式</span><br><span class="line">4.setContentType(String)设置返回数据mimetype，即设置响应头中contentType属性的值</span><br><span class="line">5.getWriter()获取字符输出流</span><br><span class="line">6.getOutputStream()获取字节输出流</span><br></pre></td></tr></table></figure><p><strong>4.代码如下</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//告诉浏览器解析字符串使用的编码</span><br><span class="line"></span><br><span class="line">1.方案按相对简单,通过设置响应头告知浏览器解析字符串的编码格式!</span><br><span class="line">response.setCharacterEncoding（）</span><br><span class="line">response.setHeader(&quot;Content-type&quot;,&quot;text/html;charset=UTF-8&quot;)</span><br><span class="line"></span><br><span class="line">2.利用setContentType这种综合性的写法解决问题!此方法也是开发中常用的方法!方便!</span><br><span class="line">response.setContentType(&quot;text/html;charset=UTF-8&quot;)</span><br></pre></td></tr></table></figure><p>####四.Servlet上下文对像</p><p><strong>1.概念(ServletContext)</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在web容器启动的时候，会为每一个web应用创建唯一的一个符合ServletContext接口的对象，该对象一般称之为&quot;servlet上下文&quot;,即ServletContext.</span><br><span class="line">当WEB服务器启动时，会为每一个WEB应用程序(webapps下的每个目录就是一个应用程序)创建一块共享的存储区域。该“公共区域”即是ServletContext，也就是同一个WEB应用程序中，所有的Servlet和JSP都可以共享同一个区域。</span><br><span class="line">ServletContext在WEB服务器启动时创建，服务器关闭时销毁。</span><br></pre></td></tr></table></figure><p><strong>2.获取ServletContext上下文</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1:GenericServlet提供了getServletContext()方法。</span><br><span class="line">2:ServletConfig提供了getServletContext()方法。</span><br><span class="line">3:HttpSession提供了getServletContext()方法。</span><br><span class="line">4:HttpServletRequest提供了getServletContext()方法。</span><br></pre></td></tr></table></figure><p><strong>3.Servlet上下文的作用</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1、获取真实路径</span><br><span class="line">获取当前项目的发布路径</span><br><span class="line">request.getSelectContext().getRealPath(&quot;/&quot;);</span><br><span class="line"></span><br><span class="line">2、获取容器的附加信息</span><br><span class="line">request.getServletContext().getServerInfo();</span><br><span class="line">request.getServletContext().getContextPath();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、全局容器</span><br><span class="line">//设置信息到全局容器中</span><br><span class="line">request.getServletContext().setAttribute(&quot;msg&quot;, &quot;共享信息&quot;);</span><br><span class="line">//读取全局内容</span><br><span class="line">request.getServletContext().getAttribute(&quot;msg&quot;)</span><br><span class="line">//移除数据</span><br><span class="line">request.getServletContext().removeAttribute(&quot;msg&quot;);</span><br></pre></td></tr></table></figure><p><strong>4.Servlet上下文特点</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">唯一性: 一个应用对应一个servlet上下文。</span><br><span class="line">一直存在: 只要容器不关闭或者应用不卸载，servlet上下文就一直存在。</span><br></pre></td></tr></table></figure><h4 id="五-Servlet的重定向和转发操作"><a href="#五-Servlet的重定向和转发操作" class="headerlink" title="五.Servlet的重定向和转发操作"></a>五.Servlet的重定向和转发操作</h4><p><strong>1.重定向</strong></p><p>概念：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">重定向就是通过各种方法将各种网络请求重新定个方向转到其它位置</span><br></pre></td></tr></table></figure><p>原理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.客户浏览器发送http请求</span><br><span class="line">2.web服务器接受后发送302状态码响应及对应新的location给客户浏览器</span><br><span class="line">3.客户浏览器发现是302响应，则自动再发送一个新的http请求，请求url是新的location地址</span><br><span class="line">4.服务器根据此请求寻找资源并发送给客户。在这里location可以重定向到任意URL，既然是浏览器重新发出了请求，则就没有什么request传递的概念了。</span><br><span class="line">在客户浏览器路径栏显示的是其重定向的路径，客户可以观察到地址的变化的。</span><br></pre></td></tr></table></figure><p>方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.sendRedirect(&quot;url&quot;);</span><br></pre></td></tr></table></figure><p>特点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1，重定向是客户端行为。</span><br><span class="line">2，重定向是浏览器做了至少两次的访问请求的。（在一个重定向资源中发生了又一次重定向）</span><br><span class="line">3，重定向浏览器地址改变。</span><br><span class="line">4，重定向2次跳转之间传输的信息会丢失（request域中的数据，servletContext中内容不会丢失）。</span><br><span class="line">5，重定向可以指向任何的资源，包括当前应用程序中的其他资源，同一个站点上的其他应用程序中的资源，其他站点的资源。注意：传递给HttpServletResponse.sendRedirect 方法的相对URL以“/”开头，它是相对于整个WEB站点的根目录</span><br></pre></td></tr></table></figure><p>实现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">package servlet;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">import javax.servlet.ServletException;</span><br><span class="line">import javax.servlet.annotation.WebServlet;</span><br><span class="line">import javax.servlet.http.HttpServlet;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line">import com.sun.xml.internal.ws.encoding.soap.SOAP12Constants;</span><br><span class="line">@WebServlet(&quot;/redirect.do&quot;)</span><br><span class="line">public class RedirectServlet extends HttpServlet &#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;RedirectServlet 被访问&quot;);</span><br><span class="line"></span><br><span class="line">//重新定向到另一个资源（本工程内部servlet，html,jsp;外部网站，外部工程中的开放的接口）</span><br><span class="line">//注意：在此处使用/资源位置，其定位到tomcat服务器webApps目录下</span><br><span class="line"> response.sendRedirect(&quot;redirect.html&quot;);</span><br><span class="line">//response.sendRedirect(&quot;ctx.do&quot;);</span><br><span class="line">//response.sendRedirect(&quot;http://www.baidu.com&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">注意：重定向后不要有业务逻辑，所有业务逻辑都要写在重定向代码之前</span><br></pre></td></tr></table></figure><p><strong>2.转发</strong></p><p>概念：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Servlet除了支持重定向之外还支持请求转发，服务器中转请求</span><br></pre></td></tr></table></figure><p>原理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.客户浏览器发送http请求</span><br><span class="line">2.web服务器接受此请求</span><br><span class="line">3.调用内部的一个方法在容器内部完成请求处理和转发动作</span><br><span class="line">4.将目标资源发送给客户。在这里，转发的路径必须是同一个web容器下的url，其不能转向到其他的web路径上去，中间传递的是自己的容器内的request。</span><br><span class="line">在客户浏览器路径栏显示的仍然是其第一次访问的路径，也就是说客户是感觉不到服务器做了转发的</span><br></pre></td></tr></table></figure><p>方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.getRequestDispatcher(&quot;url&quot;).forward(servletrequest, servletresponse);</span><br></pre></td></tr></table></figure><p>特点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1，转发是服务器行为</span><br><span class="line">2，转发是浏览器只做了一次访问请求</span><br><span class="line">3，转发浏览器地址不变</span><br><span class="line">4，转发2次跳转之间传输的信息不会丢失，所以可以通过request进行数据的传递</span><br><span class="line">5，转发只能将请求转发给同一个WEB应用中的组件</span><br><span class="line">注意：如果创建RequestDispatcher 对象时指定的相对URL以“/”开头，它是相对于当前WEB应用程序的根目录。</span><br></pre></td></tr></table></figure><p>实现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">package servlet;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">import javax.servlet.ServletException;</span><br><span class="line">import javax.servlet.annotation.WebServlet;</span><br><span class="line">import javax.servlet.http.HttpServlet;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line">@WebServlet(&quot;/forward.do&quot;)</span><br><span class="line">public class DispatchServlet extends HttpServlet &#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;DispatchServlet被访问&quot;);</span><br><span class="line"></span><br><span class="line">//转发操作，访问下一个资源</span><br><span class="line">//内部资源可以访问，但外部资源访问不了</span><br><span class="line">request.getRequestDispatcher(&quot;forward.html&quot;).forward(request, response);</span><br><span class="line">//request.getRequestDispatcher(&quot;http://www.baidu.com&quot;).forward(request, response);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>####六.servlet的绝对路径和相对路径</p><p><strong>1.绝对路径</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">即绝对路径就是你的主页上的文件或目录在硬盘上真正的路径，(URL和物理路径)</span><br><span class="line">例如：</span><br><span class="line">C:/xyz/test.txt 代表了test.txt文件的绝对路径。</span><br><span class="line">http://www.sun.com/index.htm也代表了一个URL绝对路径</span><br></pre></td></tr></table></figure><p><strong>2.相对路径</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">即相对于某个基准目录的路径。包含Web的相对路径（HTML中的相对目录），</span><br><span class="line">例如：</span><br><span class="line">在Servlet中，&quot;/&quot;代表Web应用的根目录。和物理路径的相对表示。</span><br><span class="line">&quot;./&quot; 代表当前目录(当前被使用的目类),</span><br><span class="line">&quot;../&quot;代表上级目录。这种类似的表示，也是属于相对路径</span><br></pre></td></tr></table></figure><p><strong>3.服务端相对地址</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">服务器端的相对地址指的是相对于你的web应用的地址，这个地址是在服务器端解析的</span><br><span class="line">（不同于html和javascript中的相对地址，他们是由客户端浏览器解析的）</span><br><span class="line">也就是说这时候在jsp和servlet中的相对地址应该是相对于你的web应用，</span><br><span class="line">即相对于http://127.0.0.1:8080/项目名/  的路径</span><br><span class="line"></span><br><span class="line">注意：如果路径前面不加/,表示相对路径，其相对于http://127.0.0.1:8080/项目名/的路径</span><br></pre></td></tr></table></figure><p>####七.servlet线程安全问题</p><p><strong>1.线程安全问题</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">因为每次请求都会创建一个线程，如果多人同时请求，那么就会存在多个线程操作同一个Servlet对象，那么如果在对应的方法中操作了成员变量，就有可能产生线程安全的问题。</span><br></pre></td></tr></table></figure><p><strong>2.创建线程安全的servlet方式</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、synchronized</span><br><span class="line">将存在线程安全问题的代码放到同步代码块中</span><br><span class="line">2、尽可能只使用局部变量</span><br></pre></td></tr></table></figure><p><strong>八.作业</strong><br>用户登录，如果用户名密码输入错误，请跳转到登录页面login.html，如果输入正确，请跳转到index.html,</p><p>请连接数据库，验证用户名密码是否正确</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Servlet的Request和Response对像&quot;&gt;&lt;a href=&quot;#Servlet的Request和Response对像&quot; class=&quot;headerlink&quot; title=&quot;Servlet的Request和Response对像&quot;&gt;&lt;/a&gt;Servlet的
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://kongxianghe.top/2018/10/23/Session%E5%92%8CCookie%E5%AF%B9%E5%83%8F/"/>
    <id>http://kongxianghe.top/2018/10/23/Session和Cookie对像/</id>
    <published>2018-10-23T14:06:03.458Z</published>
    <updated>2018-07-09T06:15:54.925Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Session和Cookie对像"><a href="#Session和Cookie对像" class="headerlink" title="Session和Cookie对像"></a>Session和Cookie对像</h2><h4 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、状态管理</span><br><span class="line">2、Cookie的使用</span><br><span class="line">3、Session的使用</span><br><span class="line">4、作业</span><br></pre></td></tr></table></figure><h4 id="一-状态管理"><a href="#一-状态管理" class="headerlink" title="一.状态管理"></a>一.状态管理</h4><p><strong>1.状态管理原因</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HTTP协议是无状态的，不能保存每次提交的信息，即当服务器返回与请求相对应的应答之后，这次事务的所有信息就丢掉了。 </span><br><span class="line">如果用户发来一个新的请求，服务器无法知道它是否与上次的请求有联系。 </span><br><span class="line">对于那些需要多次提交数据才能完成的Web操作，比如登录来说，就成问题了。</span><br></pre></td></tr></table></figure><p><strong>2.状态管理概念</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WEB应用中的会话（session）是指一个客户端浏览器与WEB服务器之间连续发生的一系列请求和响应过程。</span><br><span class="line">WEB应用的会话状态是指WEB服务器与浏览器在会话过程中产生的状态信息，借助会话状态，WEB服务器能够把属于同一会话中的一系列的请求和响应过程关联起来。</span><br></pre></td></tr></table></figure><p><strong>3.状态管理的两种常见模式</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">服务器状态管理技术：</span><br><span class="line">将状态保存在服务器端。代表性的是session技术（服务器传递sessionID时需要使用Cookie的方式）。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">客户端状态管理技术：将状态保存在客户端。代表性的是Cookie技术。</span><br></pre></td></tr></table></figure><h4 id="二-Cookie对像"><a href="#二-Cookie对像" class="headerlink" title="二.Cookie对像"></a>二.Cookie对像</h4><p><strong>1.概念</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Cookie是在浏览器访问WEB服务器的某个资源时，由WEB服务器在HTTP响应消息头中附带传送给浏览器的一片数据，WEB服务器传送给各个客户端浏览器的数据是可以各不相同的。</span><br><span class="line">一旦WEB浏览器保存了某个Cookie，那么它在以后每次访问该WEB服务器时，都应在HTTP请求头中将这个Cookie回传给WEB服务器。</span><br><span class="line">WEB服务器通过在HTTP响应消息中增加Set-Cookie响应头字段将Cookie信息发送给浏览器，浏览器则通过在HTTP请求消息中增加Cookie请求头字段将Cookie回传给WEB服务器。</span><br><span class="line">一个Cookie只能标识一种信息，它至少含有一个标识该信息的名称（NAME）和设置值（VALUE）。</span><br><span class="line">一个WEB站点可以给一个WEB浏览器发送多个Cookie，一个WEB浏览器也可以存储多个WEB站点提供的Cookie。</span><br><span class="line">浏览器一般只允许存放300个Cookie，每个站点最多存放20个Cookie，每个Cookie的大小限制为4KB</span><br><span class="line">Cookie不支持存放中文字符信息</span><br></pre></td></tr></table></figure><p><strong>2.服务端创建Cookie的方式</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Cookie cookie=new Cookie(&quot;key&quot;, value);</span><br><span class="line"></span><br><span class="line">//设置Cookie的路径</span><br><span class="line">cookie.setPath(&quot;/&quot;);</span><br><span class="line"></span><br><span class="line">//内存存储，取值有三种,单位为秒</span><br><span class="line">//大于0表示cookie生效时间，等于0表示失效，小于0表示内存存储，不写入浏览器</span><br><span class="line">cookie.setMaxAge(-1);</span><br><span class="line"></span><br><span class="line">//把cookie写入客户端浏览器</span><br><span class="line">response.addCookie(cookie);</span><br></pre></td></tr></table></figure><p><strong>3.服务器查询客户端Cookie</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//获取所有的Cookie</span><br><span class="line">Cookie[] cks=request.getCookies();</span><br><span class="line">//遍历Cookie</span><br><span class="line">for(Cookie ck:cks)&#123;</span><br><span class="line">     //通过key值，检索出自己的Cookie</span><br><span class="line">if(ck.getName().equals(&quot;key&quot;))&#123;</span><br><span class="line">       //记录Cookie的值</span><br><span class="line">code=ck.getValue();</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4.修改Cookie</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">只需要保证Cookie的key 及 路径一致即可修改</span><br><span class="line"></span><br><span class="line">//重新写入value2值</span><br><span class="line">Cookie cookie=new Cookie(&quot;key&quot;, value2);</span><br><span class="line">cookie.setPath(&quot;/&quot;);</span><br><span class="line">cookie.setMaxAge(-1);</span><br><span class="line">response.addCookie(cookie);</span><br></pre></td></tr></table></figure><p><strong>5.Cookie的编码与解码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">中文和英文字符不同，中文属于Unicode字符，在内存中占用4个字节，而英文属于ASCII字符，内存中只占2个字节。Cookie中使用Unicode字符时需要对Unicode字符进行编码，否则会出现乱码。</span><br><span class="line">编码可以使用java.net.URLEncoder类的encode(String str,String encoding)方法，</span><br><span class="line">解码使用java.net.URLDecoder类的decode(String str,String encoding)方法</span><br></pre></td></tr></table></figure><p><strong>6.代码如下</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 使用中文的 Cookie. </span><br><span class="line">//其中 name 与 value 都使用 UTF-8 编码. </span><br><span class="line">String key = URLEncoder.encode(&quot;姓名&quot;, &quot;UTF-8&quot;);</span><br><span class="line">String value= URLEncoder.encode(&quot;张三&quot;, &quot;UTF-8&quot;);</span><br><span class="line"></span><br><span class="line">Cookie cookie = new Cookie(key,value）;</span><br><span class="line">// 发送到客户端   </span><br><span class="line">response.addCookie(cookie);</span><br></pre></td></tr></table></figure><p><strong>7.Cookie的路径问题</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cookie一般都是由于用户访问页面而被创建的，可是并不是只有在创建cookie的页面才可以访问这个cookie。</span><br><span class="line">在默认情况下，出于安全方面的考虑，只有与创建 cookie 的页面处于同一个目录或在创建cookie页面的子目录下的网页才可以访问。那么此时如果希望其父级或者整个网页都能够使用cookie，就需要进行路径的设置</span><br></pre></td></tr></table></figure><p><strong>8.浏览器发送Cookie</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">先域名匹配，再路径匹配：</span><br><span class="line">浏览器在发送请求之前，首先会根据请求url中的域名在cookie列表中找所有与当前域名一样的cookie，然后再根据指定的路径进行匹配.</span><br><span class="line">如果两者都匹配成功，那么就会将所有匹配的cookie发送给服务器。</span><br><span class="line">这里要注意的是最大匹配和最小匹配问题，有些cookie服务器在发送之前会有意扩大当前页面cookie的匹配范围，此时这些被扩大范围的cookie也会一起发送给服务器</span><br></pre></td></tr></table></figure><p><strong>9.设置Cookie的路径</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cookie.setPath(&quot;&quot;);</span><br></pre></td></tr></table></figure><p><strong>10.Cookie的特点</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">优点：</span><br><span class="line">可配置到期规则 Cookie 可以在浏览器会话结束时到期，或者可以在客户端计算机上无限期存在，这取决于客户端的到期规则。</span><br><span class="line">不需要任何服务器资源 Cookie 存储在客户端并在发送后由服务器读取。</span><br><span class="line">简单性 Cookie 是一种基于文本的轻量结构，包含简单的键值对。</span><br><span class="line">数据持久性，虽然客户端计算机上 Cookie 的持续时间取决于客户端上的 Cookie 过期处理和用户干预，Cookie 通常是客户端上持续时间最长的数据保留形式</span><br><span class="line"></span><br><span class="line">缺点： </span><br><span class="line">1.大小受到限制</span><br><span class="line">大多数浏览器对 Cookie 的大小有 4096 字节的限制，尽管在当今新的浏览器和客户端设备版本中，支持 8192字节的Cookie大小已愈发常见。</span><br><span class="line">2.用户配置为禁用</span><br><span class="line">有些用户禁用了浏览器或客户端设备接收 Cookie 的能力，因此限制了这一功能。</span><br><span class="line">3.潜在的安全风险</span><br><span class="line">Cookie 可能会被篡改。用户可能会操纵其计算机上的 Cookie，这意味着会对安全性造成潜在风险或者导致依赖于 Cookie 的应用程序失败。</span><br><span class="line">另外，虽然 Cookie 只能被将它们发送到客户端的域访问，历史上黑客已经发现从用户计算机上的其他域访问 Cookie 的方法。您可以手动加密和解密 Cookie，但这需要额外的编码，并且因为加密和解密需要耗费一定的时间而影响应用程序的性能。</span><br></pre></td></tr></table></figure><h4 id="三-Session对像"><a href="#三-Session对像" class="headerlink" title="三.Session对像"></a>三.Session对像</h4><p><strong>1.概念</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Session用于跟踪客户的状态。</span><br><span class="line">Session指的是在一段时间内，单个客户与Web服务器的一连串相关的交互过程。</span><br><span class="line">在一个Session中，客户可能会多次请求访问同一个网页，也有可能请求访问各种不同的服务器资源。</span><br></pre></td></tr></table></figure><p><strong>2.原理</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">session被用于表示一个持续的连接状态，在网站访问中一般指代客户端浏览器的进程从开启到结束的过程。</span><br><span class="line">session其实就是网站分析的访问（visits）度量，表示一个访问的过程。</span><br><span class="line">session的常见实现形式是会话cookie（session cookie），即未设置过期时间的cookie，这个cookie的默认生命周期为浏览器会话期间，只要关闭浏览器窗口，cookie就消失了。实现机制是当用户发起一个请求的时候，服务器会检查该请求中是否包含sessionid，如果未包含，则系统会创造一个名为JSESSIONID的输出cookie返回给浏览器(只放入内存，并不存在硬盘中)，并将其以HashTable的形式写到服务器的内存里面；当已经包含sessionid时，服务端会检查找到与该session相匹配的信息，如果存在则直接使用该sessionid，若不存在则重新生成新的 session。</span><br><span class="line">这里需要注意的是session始终是有服务端创建的，并非浏览器自己生成的。　</span><br><span class="line">但是浏览器的cookie被禁止后session就需要用get方法的URL重写的机制或使用POST方法提交隐藏表单的形式来实现</span><br></pre></td></tr></table></figure><p><strong>3.获取Session</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HttpSession session=request.getSession();</span><br></pre></td></tr></table></figure><p><strong>4.Session常用方法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">唯一标记：</span><br><span class="line">session.getId());</span><br><span class="line">最后一次访问时间，毫秒:</span><br><span class="line">session.getLastAccessedTime();</span><br><span class="line">获取最大的空闲时间，单位秒:</span><br><span class="line">session.getMaxInactiveInterval();</span><br><span class="line">获取Session的创建，单位毫秒:</span><br><span class="line">session.getCreationTime();</span><br></pre></td></tr></table></figure><p><strong>5.使用Session绑定对像</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HttpSession.setAttribute(属性名,Object);</span><br><span class="line"></span><br><span class="line">//删除session中绑定的对像</span><br><span class="line">HttpSession.removeAttribute(属性名);</span><br></pre></td></tr></table></figure><p><strong>6.删除Session</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HttpSession.invalidate();</span><br></pre></td></tr></table></figure><p><strong>7.Session超时</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HttpSession的最后一程访问时间和当前时间的差距大于了指定的最大空闲时间，这时服务器就会销毁Session对象。默认的空闲时间为30分钟。</span><br></pre></td></tr></table></figure><p><strong>8.修改Session的缺省时间限制</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HttpSession.setMaxInactiveInterval(10)，单位秒</span><br></pre></td></tr></table></figure><p><strong>9.Session失效几中机制</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、超过了设置的超时时间</span><br><span class="line">2、主动调用了invalidate方法</span><br><span class="line">3、服务器主动或异常关闭</span><br><span class="line">注意：浏览器关闭并不会让Session失效</span><br></pre></td></tr></table></figure><p><strong>10.浏览器禁用Cookie,导致Session不可用</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">如果浏览器禁用Cookie，session将不可用。</span><br><span class="line">原因是：服务器要读取客户端Cookie的值，来确定此次连接和之前连接是否是同一会话Session，判断标准是读取Cookie中存放的SessionID值。</span><br><span class="line">如果浏览器禁用，则服务器不能把SessionID写入客户端浏览器，则Session的判断标准将失去作用。</span><br><span class="line"></span><br><span class="line">解决方式：</span><br><span class="line">服务器可以使用如URL重写这样的方式来发送jsessionID.</span><br><span class="line">sessionId不能写入cookie，只能通过查询字符串的方式拼接在URL后面，响应给客户端</span><br></pre></td></tr></table></figure><p><strong>11.URL重写</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">浏览器在访问服务器上的某个地址时，不再使用原来的那个地址，而是使用经过改写的地址</span><br><span class="line">（即，在原来的地址后面加上了sessionID）</span><br></pre></td></tr></table></figure><p><strong>12.URL重写的实现</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">生成重写后的URL：</span><br><span class="line">1、response.encodeURL(String url）</span><br><span class="line">2、response.encodeRedirectURL(String url)</span><br><span class="line">该方法的实现机制为： </span><br><span class="line">● 先判断当前的 Web 组件是否启用 Session，如果没有启用 Session，直接返回参数 url。 </span><br><span class="line">● 再判断客户端浏览器是否支持 Cookie，如果支持 Cookie，直接返回参数 url；如果不支持 Cookie，就在参数 url 中加入 Session ID 信息，然后返回修改后的 url。</span><br></pre></td></tr></table></figure><p><strong>13.两种重写方法异同</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">相同点:</span><br><span class="line">都对url附加上jsessionid参数进行了处理，如果需要.则在url的path后面附加上;jsessionid=xxx；如果不需要则直接返回传入的url。</span><br><span class="line">不同点：</span><br><span class="line">encodeURL()是本应用级别的，encodeRedirectURL()是跨应用的。</span><br></pre></td></tr></table></figure><p><strong>14.代码实现</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">package encodeURL;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">import javax.servlet.ServletException;</span><br><span class="line">import javax.servlet.annotation.WebServlet;</span><br><span class="line">import javax.servlet.http.HttpServlet;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * URL重写，解决Cookie被禁用</span><br><span class="line"> * @author kevin</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">@WebServlet(&quot;/encode.do&quot;)</span><br><span class="line">public class EncodeURLServlet extends HttpServlet &#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">response.getWriter().println(&quot;encodeURL&quot;);</span><br><span class="line">String url = &quot;login.html&quot;;</span><br><span class="line">/*</span><br><span class="line">1.先判断当前的 Web 组件是否启用 Session，如果没有启用 Session，直接返回参数 url。 </span><br><span class="line">2.再判断客户端浏览器是否支持 Cookie，如果支持 Cookie，直接返回参数 url；</span><br><span class="line">3.如果不支持 Cookie，就在参数 url 中加入 Session ID 信息，然后返回修改后的 url。 </span><br><span class="line"> */</span><br><span class="line">String newUrl = response.encodeURL(url);</span><br><span class="line">System.out.println(newUrl);</span><br><span class="line">response.sendRedirect(newUrl);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="四-作业"><a href="#四-作业" class="headerlink" title="四.作业"></a>四.作业</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Session和Cookie对像&quot;&gt;&lt;a href=&quot;#Session和Cookie对像&quot; class=&quot;headerlink&quot; title=&quot;Session和Cookie对像&quot;&gt;&lt;/a&gt;Session和Cookie对像&lt;/h2&gt;&lt;h4 id=&quot;内容&quot;&gt;&lt;a hr
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://kongxianghe.top/2018/10/23/Filter%E5%92%8CListener/"/>
    <id>http://kongxianghe.top/2018/10/23/Filter和Listener/</id>
    <published>2018-10-23T14:06:03.444Z</published>
    <updated>2018-07-09T06:15:56.639Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Web之过滤器和监听器"><a href="#Web之过滤器和监听器" class="headerlink" title="Web之过滤器和监听器"></a>Web之过滤器和监听器</h3><h4 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.过滤器</span><br><span class="line">什么是过滤器</span><br><span class="line">过滤器链</span><br><span class="line">过滤器的优先级和参数</span><br><span class="line">过滤器的典型应用</span><br><span class="line">2.监听器</span><br><span class="line">什么是监听器</span><br><span class="line">     常用的监听器</span><br><span class="line">3. 作业题</span><br></pre></td></tr></table></figure><p>#### </p><h4 id="一-过滤器（重点）"><a href="#一-过滤器（重点）" class="headerlink" title="一. 过滤器（重点）"></a>一. 过滤器（重点）</h4><h5 id="1-什么是过滤器"><a href="#1-什么是过滤器" class="headerlink" title="1. 什么是过滤器"></a>1. 什么是过滤器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Filter也称之为过滤器，它是Servlet技术中最激动人心的技术，WEB开发人员通过Filter技术，对web服务器管理的所有web资源：例如Jsp, Servlet, 静态图片文件或静态 html 文件等进行拦截，从而实现一些特殊的功能。例如实现URL级别的权限访问控制、过滤敏感词汇、压缩响应信息等一些高级功能。</span><br><span class="line">Servlet API中提供了一个Filter接口，开发web应用时，如果编写的Java类实现了这个接口，则把这个java类称之为过滤器Filter。通过Filter技术，开发人员可以实现用户在访问某个目标资源之前，对访问的请求和响应进行拦截</span><br></pre></td></tr></table></figure><p>如图所示：</p><p><img src="D:\JAVAEE教案\JAVAEE笔记\第12天 filter和listener\笔记\1.bmp" alt="1.bmp"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">注意：</span><br><span class="line">1.过滤器0-n个过滤器组成过滤器链</span><br><span class="line">2.过滤器可以过滤所有（可设置想过滤的路径）请求和响应</span><br><span class="line">3.过滤器优先于Servlet执行</span><br><span class="line">4.语法只需实现简单的接口filter</span><br><span class="line">5.过滤器会自动执行，web容器调用</span><br></pre></td></tr></table></figure><h5 id="2-如何编写过滤器"><a href="#2-如何编写过滤器" class="headerlink" title="2. 如何编写过滤器"></a>2. 如何编写过滤器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、编写java类实现Filter接口</span><br><span class="line">2、重写doFilter方法</span><br><span class="line">3、设置拦截的url</span><br></pre></td></tr></table></figure><p>#####3. 过滤器的配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">注解式配置:</span><br><span class="line">在自定义的Filter类上使用注解@WebFilter(“/*”)</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">在web.xml中进行过滤器的配置：</span><br><span class="line"><span class="comment">&lt;!--过滤器的xml配置  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--名称--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>sf<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--过滤器类全称--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>过滤器类的完全限定名<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--映射路径配置--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--名称--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>sf<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--过滤的url匹配规则和Servlet的一模一样--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>#####4 .过滤器链</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">通常客户端对服务器请求之后，服务器调用Servlet之前会执行一组过滤器（多个过滤器）,那么这组过滤器就称为一条过滤器链。</span><br><span class="line">每个过滤器实现某个特定的功能，一个过滤器检测多个Servlet。（匹配几个，检测几个）。</span><br><span class="line">一组过滤器中的执行顺序与&lt;filter-mapping&gt;的配置顺序呢有关。</span><br><span class="line">当第一个Filter的doFilter方法被调用时，web服务器会创建一个代表Filter链的FilterChain对象传递给该方法。在doFilter方法中，开发人员如果调用了FilterChain对象的doFilter方法，则web服务器会检查FilterChain对象中是否还有filter，如果有，则调用第2个filter，如果没有，则调用目标资源</span><br></pre></td></tr></table></figure><h5 id="5-过滤器的优先级"><a href="#5-过滤器的优先级" class="headerlink" title="5. 过滤器的优先级"></a>5. 过滤器的优先级</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在一个web应用中，可以开发编写多个Filter，这些Filter组合起来称之为一个Filter链。web服务器根据Filter在web.xml文件中的注册顺序，决定先调用哪个Filter。当第一个Filter的doFilter方法被调用时，web服务器会创建一个代表Filter链的FilterChain对象传递给该方法。在doFilter方法中，开发人员如果调用了FilterChain对象的doFilter方法，则web服务器会检查FilterChain对象中是否还有filter，如果有，则调用第2个filter，如果没有，则调用目标资源</span><br><span class="line"></span><br><span class="line">1.配置优先</span><br><span class="line">2.web.xml文件中配置的顺序来执行</span><br><span class="line">3.如果为注解的话，是按照类名的字符串顺序进行起作用的</span><br></pre></td></tr></table></figure><h5 id="6-过滤器的初始化参数"><a href="#6-过滤器的初始化参数" class="headerlink" title="6. 过滤器的初始化参数"></a>6. 过滤器的初始化参数</h5><p>在过滤器的创建的时候，可以传递初始化参数</p><p>第一种：基于注解的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@WebFilter</span>(value=<span class="string">"/*"</span>,initParams= &#123;<span class="meta">@WebInitParam</span>(name = <span class="string">"version"</span>, value = <span class="string">"1.0"</span>)&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> Filter#destroy() 销毁</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"destroy销毁……"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> Filter#doFilter(ServletRequest, ServletResponse, FilterChain) 过滤</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"><span class="comment">// place your code here</span></span><br><span class="line">System.out.println(<span class="string">"doFilter……过滤"</span>);</span><br><span class="line"><span class="comment">// 是否继续---访问下一个</span></span><br><span class="line">chain.doFilter(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> Filter#init(FilterConfig)</span></span><br><span class="line"><span class="comment"> * 初始化</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig fConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"init……初始化"</span>);</span><br><span class="line">System.out.println(<span class="string">"初始化参数：版本号："</span>+fConfig.getInitParameter(<span class="string">"version"</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二种：基于xml配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  创建过滤器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecondFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> Filter#destroy() 销毁</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> Filter#doFilter(ServletRequest, ServletResponse, FilterChain) 过滤</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"><span class="comment">// 是否继续---访问下一个</span></span><br><span class="line">chain.doFilter(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> Filter#init(FilterConfig)</span></span><br><span class="line"><span class="comment"> * 初始化</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig fConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"初始化参数：版本号："</span>+fConfig.getInitParameter(<span class="string">"version"</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Web.xml实现配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"</span> <span class="attr">version</span>=<span class="string">"3.1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Web_Day<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!--过滤器的xml配置  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>myfilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>filter.SecondFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--过滤器的初始化参数  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>version<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>myfilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="7-过滤器的优点"><a href="#7-过滤器的优点" class="headerlink" title="7 .过滤器的优点"></a>7 .过滤器的优点</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以实现 Web 应用程序中的预处理和后期处理逻辑</span><br></pre></td></tr></table></figure><h5 id="8-过滤器的典型应用"><a href="#8-过滤器的典型应用" class="headerlink" title="8. 过滤器的典型应用"></a>8. 过滤器的典型应用</h5><blockquote><p>禁止浏览器缓存动态页面</p></blockquote><p>过滤器的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 实现禁止浏览器缓存动态页面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/*"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NoCacheFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> Filter#destroy()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest req, ServletResponse res, FilterChain chain)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//注意：响应头设置放在doFilter方法之前</span></span><br><span class="line">HttpServletResponse response = (HttpServletResponse) res;</span><br><span class="line"><span class="comment">//禁止浏览器缓存动态页面信息</span></span><br><span class="line"><span class="comment">//指定缓存过期时间，过期后要请求服务器;-1表示总要请求服务器</span></span><br><span class="line">response.setDateHeader(<span class="string">"Expires"</span>, -<span class="number">1</span>);</span><br><span class="line"><span class="comment">//设置不需要缓存</span></span><br><span class="line">response.setHeader(<span class="string">"Cache-Control"</span>, <span class="string">"no-cache"</span>);</span><br><span class="line">response.setHeader(<span class="string">"Pragma"</span>, <span class="string">"no-cache"</span>);</span><br><span class="line">        </span><br><span class="line">        chain.doFilter(req, res);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> Filter#init(FilterConfig)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig fConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>过滤所有请求和响应的编码</p></blockquote><p>代码实现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">package filter;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import javax.servlet.Filter;</span><br><span class="line">import javax.servlet.FilterChain;</span><br><span class="line">import javax.servlet.FilterConfig;</span><br><span class="line">import javax.servlet.ServletException;</span><br><span class="line">import javax.servlet.ServletRequest;</span><br><span class="line">import javax.servlet.ServletResponse;</span><br><span class="line">import javax.servlet.annotation.WebFilter;</span><br><span class="line">import javax.servlet.annotation.WebInitParam;</span><br><span class="line"></span><br><span class="line">@WebFilter(urlPatterns=&quot;/*&quot;,initParams=&#123;@WebInitParam(name=&quot;version&quot;,value=&quot;1.0&quot;)&#125;)</span><br><span class="line">public class EncodingFilter implements Filter&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void destroy() &#123;</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;执行destory操作&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)</span><br><span class="line">throws IOException, ServletException &#123;</span><br><span class="line"></span><br><span class="line">//设置请求和响应的编码</span><br><span class="line">System.out.println(&quot;请求到达过滤器&quot;);</span><br><span class="line">request.setCharacterEncoding(&quot;utf-8&quot;);</span><br><span class="line">response.setContentType(&quot;text/html;charset=utf-8&quot;);</span><br><span class="line"></span><br><span class="line">chain.doFilter(request, response);</span><br><span class="line">response.setCharacterEncoding(&quot;utf-8&quot;);</span><br><span class="line">System.out.println(&quot;响应到达过滤器&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void init(FilterConfig config) throws ServletException &#123;</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;执行init操作&quot;);</span><br><span class="line">String value = config.getInitParameter(&quot;version&quot;);</span><br><span class="line">System.out.println(value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>对用户登录查行验证</p></blockquote><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 过滤session</span><br><span class="line"> * 业务：用户访问系统APP中资源时，都必须处于登录状态</span><br><span class="line"> * 如果session中没有值，即用户不在登录状态，则强制其返回登录页面，进行登录</span><br><span class="line"> * @author kevin</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">@WebFilter(urlPatterns=&quot;/*&quot;)</span><br><span class="line">public class SessionFilter implements Filter&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void destroy() &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void doFilter(ServletRequest req, ServletResponse res, FilterChain chain)</span><br><span class="line">throws IOException, ServletException &#123;</span><br><span class="line"></span><br><span class="line">HttpServletRequest request = (HttpServletRequest) req;</span><br><span class="line">HttpServletResponse response = (HttpServletResponse) res;</span><br><span class="line">//1.如果访问login.html页，不需session验证</span><br><span class="line">String url = request.getRequestURL().toString();</span><br><span class="line">int index = url.lastIndexOf(&quot;/login.html&quot;);</span><br><span class="line">//2.执行登录操作，不需验证session</span><br><span class="line">int index2 = url.lastIndexOf(&quot;/login.do&quot;);</span><br><span class="line">//3.如果访问index.html，就需要session验证</span><br><span class="line">User sessionUser = (User) request.getSession().getAttribute(&quot;sessionUser&quot;);</span><br><span class="line"></span><br><span class="line">if(index&gt;0)&#123;</span><br><span class="line">//放行</span><br><span class="line">chain.doFilter(req, res);</span><br><span class="line">&#125;else if(index2&gt;0)&#123;</span><br><span class="line">//放行</span><br><span class="line">chain.doFilter(req, res);</span><br><span class="line">&#125;else if(sessionUser !=null)&#123;</span><br><span class="line">//放行</span><br><span class="line">chain.doFilter(req, res);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">//重定向到login.html</span><br><span class="line">response.sendRedirect(&quot;login.html&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void init(FilterConfig arg0) throws ServletException &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二-监听器的使用"><a href="#二-监听器的使用" class="headerlink" title="二 .监听器的使用"></a>二 .监听器的使用</h4><h5 id="1-什么是监听器"><a href="#1-什么是监听器" class="headerlink" title="1. 什么是监听器"></a>1. 什么是监听器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">监听器用于监听web应用中某些对象、信息的创建、销毁、增加，修改，删除等动作的发生，然后作出相应的响应处理。当范围对象的状态发生变化的时候，服务器自动调用监听器对象中的方法。常用于统计在线人数和在线用户，系统加载时进行信息初始化，统计网站的访问量等等</span><br><span class="line"></span><br><span class="line">一般分为三类：</span><br><span class="line">1.对ServletContext监听</span><br><span class="line">2.HttpSession监听</span><br><span class="line">3.HttpServletRequest监听</span><br></pre></td></tr></table></figure><h5 id="2-监听器类型"><a href="#2-监听器类型" class="headerlink" title="2. 监听器类型"></a>2. 监听器类型</h5><blockquote><p>ServletContext类型监听器，监听ServletContext变化（重点）</p></blockquote><p>a.监听生命周期</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ServletContextListener接口</span><br><span class="line">内部方法：</span><br><span class="line">初始化：contextInitialized</span><br><span class="line">销毁：contextDestroyed</span><br></pre></td></tr></table></figure><p>b.监听属性内容变化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ServletContextAttributeListener接口</span><br><span class="line">内部的方法：</span><br><span class="line">attributeAdded：监听属性的添加</span><br><span class="line">attributeRemoved：监听属性的移除</span><br><span class="line">attributeReplaced：监听属性的修改</span><br></pre></td></tr></table></figure><blockquote><p>HttpSession类型监听器，监听HttpSession变化</p></blockquote><p>a.监听生命周期</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HttpSessionListener</span><br><span class="line">内部方法：</span><br><span class="line">sessionCreated：监听Session对象的创建</span><br><span class="line">sessionDestroyed：监听Session对象的销毁</span><br></pre></td></tr></table></figure><p>b.监听属性内容变化(重点)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HttpSessionAttributeListener</span><br><span class="line">监听HttpSession的内容的变化</span><br><span class="line">内部的方法：</span><br><span class="line">attributeAdded：监听属性的添加</span><br><span class="line">attributeRemoved：监听属性的移除</span><br><span class="line">attributeReplaced：监听属性的修改</span><br></pre></td></tr></table></figure><p>c.监听服务器的Session的钝化和活化</p><p>（如果一个对像被放到session中，那么其所属的类要实现该接口）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">注意：该类不需要使用注解@WebListener</span><br><span class="line">HttpSessionActivationListener</span><br><span class="line">监听服务器的钝化和活化</span><br><span class="line">内部方法：</span><br><span class="line">sessionWillPassivate：监听Session内部存储对象的钝化-存储</span><br><span class="line">sessionDidActivate：监听Session内部存储对象的活化---读取</span><br><span class="line">对应类需要实现序列化接口Serializable</span><br></pre></td></tr></table></figure><p>d.监听对象的添加和移除(重要)</p><p>（如果一个对像被放到session中，那么其所属的类要实现该接口）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">注意：该类不需要使用注解@WebListener</span><br><span class="line">HttpSessionBindingListener</span><br><span class="line">监听对象的添加和移除</span><br><span class="line">内部方法：</span><br><span class="line">valueBound：监听对象的绑定</span><br><span class="line">valueUnbound：监听对象的解除绑定</span><br></pre></td></tr></table></figure><p>e.HttpSession的id的变化</p><p>这是Servlet3.1新增的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HttpSessionIdListener</span><br><span class="line">监听HttpSession的id的变化</span><br><span class="line">这是Servlet3.1新增的</span><br><span class="line">内部方法：</span><br><span class="line">sessionIdChanged：监听HttpSession的id的变化</span><br></pre></td></tr></table></figure><blockquote><p>ServletRequest类型监听器，监听ServletRequest的变化</p></blockquote><p>a.监听生命周期</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ServletRequestListener</span><br><span class="line">监听request对象的初始化和销毁</span><br><span class="line">内部方法：</span><br><span class="line">1、requestInitialized：监听request对象的初始化</span><br><span class="line">2、requestDestroyed：监听request对象的销毁</span><br></pre></td></tr></table></figure><p>b.监听属性内容变化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ServletRequestAttributeListener</span><br><span class="line">监听属性内容变化</span><br><span class="line">内部方法：</span><br><span class="line">attributeAdded：监听属性的添加</span><br><span class="line">attributeRemoved：监听属性的移除</span><br><span class="line">attributeReplaced：监听属性的修改</span><br></pre></td></tr></table></figure><p>c.监听异步请求</p><p>Servelt3.1新增监听器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">AsyncListener</span><br><span class="line">监听异步请求</span><br><span class="line">内部方法：</span><br><span class="line">1、onStartAsync：监听异步开始</span><br><span class="line">2、onTimeout：监听超时</span><br><span class="line">3、onError：监听异步的错误信息</span><br><span class="line">4、onComplete：监听异步的完成</span><br></pre></td></tr></table></figure><h5 id="3-监听器的2种配置"><a href="#3-监听器的2种配置" class="headerlink" title="3.监听器的2种配置"></a>3.监听器的2种配置</h5><blockquote><p>xml的配置</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在web.xml中进行配置</span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--直接写出自定义的监听器的类名即可--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>listener.RequestLeftListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注解式配置</p></blockquote><p>Servlet3.0之后新增的，使用注解@WebListener进行监听器的注册</p><p>如下： 实现ServletContext生命周期的监听</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Application Lifecycle Listener implementation class FirstListener</span></span><br><span class="line"><span class="comment"> *监听ServletContext的初始化和销毁,即对整个应用生命周期的监听</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//注解方式</span></span><br><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationLifeListener</span> <span class="keyword">implements</span> <span class="title">ServletContextListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextDestroyed</span><span class="params">(ServletContextEvent arg0)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"Servlet上下文被销毁"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInitialized</span><span class="params">(ServletContextEvent arg0)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">ServletContext ctx = arg0.getServletContext();</span><br><span class="line"><span class="comment">//可以在ServletContext中加上全局参数</span></span><br><span class="line">ctx.setAttribute(<span class="string">"key"</span>, <span class="string">"value"</span>);</span><br><span class="line">System.out.println(<span class="string">"Servlet上下文初始化完成"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如下: 实现ServletContext属性内容的变化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Application Lifecycle Listener implementation class ApplicationAttributeListener</span></span><br><span class="line"><span class="comment"> * 实现ServletContext属性内容变化</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationAttributeListener</span> <span class="keyword">implements</span> <span class="title">ServletContextAttributeListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Default constructor. </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ApplicationAttributeListener</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> ServletContextAttributeListener#attributeAdded(ServletContextAttributeEvent)</span></span><br><span class="line"><span class="comment">     * 新增内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attributeAdded</span><span class="params">(ServletContextAttributeEvent event)</span>  </span>&#123; </span><br><span class="line">         <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    System.out.println(<span class="string">"attributeAdded:"</span>+event.getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> ServletContextAttributeListener#attributeRemoved(ServletContextAttributeEvent)</span></span><br><span class="line"><span class="comment">     * 删除属性内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attributeRemoved</span><span class="params">(ServletContextAttributeEvent event)</span>  </span>&#123; </span><br><span class="line">         <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    System.out.println(<span class="string">"attributeRemoved:"</span>+event.getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> ServletContextAttributeListener#attributeReplaced(ServletContextAttributeEvent)</span></span><br><span class="line"><span class="comment">     * 修改内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attributeReplaced</span><span class="params">(ServletContextAttributeEvent event)</span>  </span>&#123; </span><br><span class="line">         <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    System.out.println(<span class="string">"attributeReplaced:"</span>+event.getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如下：实现HttpSession生命周期的变化和属性内容的变化和id变化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Application Lifecycle Listener implementation class SessionLeftListener</span></span><br><span class="line"><span class="comment"> * 该监听器实现HttpSession的生命周期变化和属性内容的变化</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SessionLeftListener</span> <span class="keyword">implements</span> <span class="title">HttpSessionListener</span>, <span class="title">HttpSessionAttributeListener</span>,<span class="title">HttpSessionIdListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Default constructor. </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SessionLeftListener</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> HttpSessionListener#sessionCreated(HttpSessionEvent)</span></span><br><span class="line"><span class="comment">     * Session的创建</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionCreated</span><span class="params">(HttpSessionEvent se)</span>  </span>&#123; </span><br><span class="line">         <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    System.out.println(<span class="string">"sessionCreated"</span>);</span><br><span class="line">    <span class="keyword">int</span> ct=(<span class="keyword">int</span>) se.getSession().getServletContext().getAttribute(<span class="string">"fwrs"</span>);</span><br><span class="line">    se.getSession().getServletContext().setAttribute(<span class="string">"fwrs"</span>, ++ct);</span><br><span class="line">    se.getSession().setAttribute(<span class="string">"tea"</span>, <span class="keyword">new</span> Teacher(<span class="string">"西施"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> HttpSessionListener#sessionDestroyed(HttpSessionEvent)</span></span><br><span class="line"><span class="comment">     * Session的销毁</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionDestroyed</span><span class="params">(HttpSessionEvent se)</span>  </span>&#123; </span><br><span class="line">         <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    System.out.println(<span class="string">"sessionDestroyed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> HttpSessionAttributeListener#attributeAdded(HttpSessionBindingEvent)</span></span><br><span class="line"><span class="comment">     * Session中属性内容的添加</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attributeAdded</span><span class="params">(HttpSessionBindingEvent event)</span>  </span>&#123; </span><br><span class="line">         <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> HttpSessionAttributeListener#attributeRemoved(HttpSessionBindingEvent)</span></span><br><span class="line"><span class="comment">     * Session中属性内容的移除</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attributeRemoved</span><span class="params">(HttpSessionBindingEvent event)</span>  </span>&#123; </span><br><span class="line">         <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> HttpSessionAttributeListener#attributeReplaced(HttpSessionBindingEvent)</span></span><br><span class="line"><span class="comment">     * Session中属性内容的修改</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attributeReplaced</span><span class="params">(HttpSessionBindingEvent event)</span>  </span>&#123; </span><br><span class="line">         <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//监听HttpSession的id的变化，Servlet3.1新特性</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionIdChanged</span><span class="params">(HttpSessionEvent event, String oldSessionId)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如下:实现对象的绑定和Session的钝化和活化监听器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**演示Session的对象绑定和解除绑定还有Session的活化和钝化*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> <span class="keyword">implements</span> <span class="title">HttpSessionActivationListener</span>,<span class="title">HttpSessionBindingListener</span>,<span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Teacher</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Teacher</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//绑定对象--添加对象</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">valueBound</span><span class="params">(HttpSessionBindingEvent event)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">System.out.println(<span class="string">"添加绑定："</span>+event.getName());</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//解除绑定---移除对象</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">valueUnbound</span><span class="params">(HttpSessionBindingEvent event)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">System.out.println(<span class="string">"解除绑定："</span>+event.getName());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//钝化--从内存到硬盘</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionWillPassivate</span><span class="params">(HttpSessionEvent se)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">System.out.println(<span class="string">"sessionWillPassivate：钝化："</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//活化--从硬盘到内存</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionDidActivate</span><span class="params">(HttpSessionEvent se)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">System.out.println(<span class="string">"sessionWillPassivate：活化："</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如下：实现监听ServletRequest生命周期和属性内容变化和异步请求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Application Lifecycle Listener implementation class RequestLeftListener</span></span><br><span class="line"><span class="comment"> *监听Request对象的内容</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestLeftListener</span> <span class="keyword">implements</span> <span class="title">ServletRequestListener</span>, <span class="title">ServletRequestAttributeListener</span>, <span class="title">AsyncListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Default constructor. </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RequestLeftListener</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> AsyncListener#onComplete(AsyncEvent)</span></span><br><span class="line"><span class="comment">     * 异步监听---完成</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onComplete</span><span class="params">(AsyncEvent event)</span> <span class="keyword">throws</span> java.io.IOException </span>&#123; </span><br><span class="line">         <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> AsyncListener#onError(AsyncEvent)</span></span><br><span class="line"><span class="comment">     * 异步监听---错误</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(AsyncEvent event)</span> <span class="keyword">throws</span> java.io.IOException </span>&#123; </span><br><span class="line">         <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> AsyncListener#onStartAsync(AsyncEvent)</span></span><br><span class="line"><span class="comment">     * 异步监听---启动</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStartAsync</span><span class="params">(AsyncEvent event)</span> <span class="keyword">throws</span> java.io.IOException </span>&#123; </span><br><span class="line">         <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> AsyncListener#onTimeout(AsyncEvent)</span></span><br><span class="line"><span class="comment">     * 异步监听---超时</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTimeout</span><span class="params">(AsyncEvent event)</span> <span class="keyword">throws</span> java.io.IOException </span>&#123; </span><br><span class="line">         <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> ServletRequestListener#requestInitialized(ServletRequestEvent)</span></span><br><span class="line"><span class="comment">     * 请求对象的初始化</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">requestInitialized</span><span class="params">(ServletRequestEvent sre)</span>  </span>&#123; </span><br><span class="line">         <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> ServletRequestListener#requestDestroyed(ServletRequestEvent)</span></span><br><span class="line"><span class="comment">     * 销毁</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">requestDestroyed</span><span class="params">(ServletRequestEvent sre)</span>  </span>&#123; </span><br><span class="line">         <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> ServletRequestAttributeListener#attributeRemoved(ServletRequestAttributeEvent)</span></span><br><span class="line"><span class="comment">     * 移除属性内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attributeRemoved</span><span class="params">(ServletRequestAttributeEvent srae)</span>  </span>&#123; </span><br><span class="line">         <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> ServletRequestAttributeListener#attributeAdded(ServletRequestAttributeEvent)</span></span><br><span class="line"><span class="comment">     * 添加</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attributeAdded</span><span class="params">(ServletRequestAttributeEvent srae)</span>  </span>&#123; </span><br><span class="line">         <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> ServletRequestAttributeListener#attributeReplaced(ServletRequestAttributeEvent)</span></span><br><span class="line"><span class="comment">     * 修改</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attributeReplaced</span><span class="params">(ServletRequestAttributeEvent srae)</span>  </span>&#123; </span><br><span class="line">         <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="三-作业题"><a href="#三-作业题" class="headerlink" title="三.作业题"></a>三.作业题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、使用监听器实现当前登录用户人数和今日访问人数统计</span><br><span class="line">2、使用过滤器实现未登录拦截</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Web之过滤器和监听器&quot;&gt;&lt;a href=&quot;#Web之过滤器和监听器&quot; class=&quot;headerlink&quot; title=&quot;Web之过滤器和监听器&quot;&gt;&lt;/a&gt;Web之过滤器和监听器&lt;/h3&gt;&lt;h4 id=&quot;今日内容&quot;&gt;&lt;a href=&quot;#今日内容&quot; class=&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://kongxianghe.top/2018/10/23/JSP%E6%8A%80%E6%9C%AF/"/>
    <id>http://kongxianghe.top/2018/10/23/JSP技术/</id>
    <published>2018-10-23T14:06:03.440Z</published>
    <updated>2018-07-09T06:15:56.102Z</updated>
    
    <content type="html"><![CDATA[<h3 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h3><h4 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1、JSP</span><br><span class="line">什么是JSP</span><br><span class="line">JSP的语法</span><br><span class="line">JSP的指令</span><br><span class="line">JSP的动作</span><br><span class="line">JSP的内置对象</span><br><span class="line">2、EL表达式</span><br><span class="line">域对象</span><br><span class="line">3、JSTL语言</span><br><span class="line">JSTL的使用</span><br></pre></td></tr></table></figure><p>#### </p><h4 id="一-JSP"><a href="#一-JSP" class="headerlink" title="一. JSP"></a>一. JSP</h4><h5 id="1-jsp概念"><a href="#1-jsp概念" class="headerlink" title="1.jsp概念"></a>1.jsp概念</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">全称：Java Server Pages,java服务器页面。和Servlet一样，是sun公司定义的一种动态网页开发技术。</span><br><span class="line">特点：基于html模版，可以在html模版嵌入java代码和jsp中的标签。</span><br><span class="line">备注：html静态页面。</span><br><span class="line">      CSS:修饰美化html页面。</span><br><span class="line">      JavaScript:动态修改html页面和css样式。</span><br><span class="line">      Servlet：运行在服务器上的java程序。适合编写java代码，写网页困难</span><br><span class="line">      jsp:适合编写动态内容，不适合写java代码，主要用于显示页面</span><br></pre></td></tr></table></figure><h5 id="2-为什么要用jsp"><a href="#2-为什么要用jsp" class="headerlink" title="2. 为什么要用jsp"></a>2. 为什么要用jsp</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 jsp性能好，可以在html页面中动态嵌入元素</span><br><span class="line">2 服务器调用的是已经编译好的JSP文件</span><br><span class="line">3 JSP基于Java Servlet Api,有很多强大企业的支持。</span><br><span class="line">4 JSP可以与处理业务逻辑的Servlet一起使用，该模式被Java Servlet模版引擎所支持。</span><br></pre></td></tr></table></figure><h5 id="3-JSP优势"><a href="#3-JSP优势" class="headerlink" title="3. JSP优势"></a>3. JSP优势</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 与纯 Servlet 相比：JSP可以很方便的编写或者修改HTML网页而不用去面对大量的println语句</span><br><span class="line">2 与JavaScript相比：虽然JavaScript可以在客户端动态生成HTML，但是很难与服务器交互，因此不能提供复杂的服务，比如访问数据库和图像处理等等。</span><br><span class="line">3 与静态HTML相比：静态HTML不包含动态信息</span><br></pre></td></tr></table></figure><h5 id="4-JSP语法"><a href="#4-JSP语法" class="headerlink" title="4. JSP语法"></a>4. JSP语法</h5><p> JSP语法格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">JSP页面中可以包含任意量的Java语句、变量、方法或表达式</span><br><span class="line"></span><br><span class="line">语法格式： &lt;% java代码 %&gt;</span><br><span class="line">声明局部变量： &lt;%  int i=10;%&gt;</span><br><span class="line">声明全局变量： &lt;%!  int i=10;%&gt;</span><br><span class="line">输出变量： &lt;%=2+3%&gt;等价于输出语句  (注意：不能使用分号来结束表达式)</span><br></pre></td></tr></table></figure><p> JSP注释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">格式： &lt;%-- 网页注释 —&gt;：安全，省流量</span><br><span class="line">网页注释：&lt;!-- 网页注释 --&gt; ,特点，不安全，耗流量</span><br></pre></td></tr></table></figure><p>  代码演示</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--指令，页面的设置--%&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--<span class="number">1</span>、模板元素 --%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;第一个JSP页面&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    </span><br><span class="line">&lt;%--我是jsp特有的注释 --%&gt;</span><br><span class="line">&lt;!--我是HTML的注释  --&gt;</span><br><span class="line">    </span><br><span class="line">&lt;a href="http://www.baidu.com"&gt;百度一下&lt;/a&gt;</span><br><span class="line">    </span><br><span class="line">&lt;%--jsp脚本 --%&gt;</span><br><span class="line">&lt;%! <span class="keyword">int</span> c=<span class="number">10</span>; %&gt;</span><br><span class="line">    </span><br><span class="line">&lt;!-- jsp标签 --&gt;</span><br><span class="line">&lt;jsp:include page=""&gt;&lt;/jsp:include&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;%--指令，页面设置信息 --%&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span> <span class="string">"http://www.w3.org/TR/html4/loose.dtd"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;第二个JSP页面&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%--我是JSP的注释，我是不会出现在对应的java类中的 --%&gt;</span><br><span class="line">&lt;!--我是HTML的注释，会写出到页面  --&gt;</span><br><span class="line"></span><br><span class="line">&lt;%-- &lt;%!System.out.println(<span class="number">123</span>); %&gt;带！的意思是声明 --%&gt;</span><br><span class="line">&lt;!--jsp脚本之声明  --&gt;</span><br><span class="line">&lt;!--声明一个属性  --&gt;</span><br><span class="line">&lt;%!<span class="keyword">private</span> <span class="keyword">int</span> count; %&gt;</span><br><span class="line">&lt;!--声明并且实现方法  --&gt;</span><br><span class="line">&lt;%!<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(count); </span><br><span class="line">&#125; %&gt;</span><br><span class="line">&lt;%!<span class="keyword">private</span> <span class="keyword">int</span> age=<span class="number">10</span>; %&gt;</span><br><span class="line">&lt;%-- &lt;%!show(); %&gt; --%&gt;</span><br><span class="line">&lt;!--jsp脚本之方法内使用  --&gt;</span><br><span class="line">&lt;!-- 局部变量 --&gt;</span><br><span class="line">&lt;%<span class="keyword">int</span> c=<span class="number">1</span>;%&gt;</span><br><span class="line">&lt;%count++;</span><br><span class="line">c++;%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">System.out.println(<span class="string">"局部变量："</span>+c);</span><br><span class="line">System.out.println(<span class="string">"全局变量："</span>+count);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%System.out.println(<span class="string">"请求的IP地址："</span>+request.getRemoteAddr()); %&gt;</span><br><span class="line">&lt;!--jsp脚本之三：赋值、输出内容  --&gt;</span><br><span class="line">&lt;h1&gt;访问次数：&lt;%=count %&gt;&lt;/h1&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="5-JSP指令"><a href="#5-JSP指令" class="headerlink" title="5. JSP指令"></a>5. JSP指令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">告诉JSP引擎如何jsp文件中的内容</span><br><span class="line">语法： &lt;%@ 指令名称 属性名称1＝“属性值1” 属性名称2＝“属性值2” 。。。。。%&gt;</span><br><span class="line">示例：&lt;%@ page language=*&quot;java&quot;* contentType=&quot;text/html; charset=UTF-8&quot;  pageEncoding=*&quot;UTF-8&quot;*%&gt;</span><br></pre></td></tr></table></figure><p>page指令</p><p>作用：用于定义JSP页面的各种属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import和java代码的含义一样</span><br><span class="line">&lt;%@ page import=&quot;java.util.Date,java.util.List&quot;%&gt;</span><br><span class="line">或者：</span><br><span class="line">&lt;%@ page import=&quot;java.util.Date&quot;%&gt;</span><br><span class="line">&lt;%@ page import=&quot;java.util.List&quot;%&gt;</span><br><span class="line">session:是否会自动创建session对象，默认值为true;</span><br><span class="line">buffer:JSP中有java.servlet.jsp.JspWriter输出字符流。设置输出数据的缓存大小。默认8kb.</span><br><span class="line">errorPage:如果页面中有错误，跳转到指定的资源 errorPage=&quot;/uri&quot; 如果写“/”则代表当前应用的目录下，绝对路径。如果不写“/”则代表相对路径</span><br><span class="line">isErrorPage:是否创建throwable对象。默认是false</span><br><span class="line">contentType:等同于response.setContentType(“text/html”；charset=utf-8);服务器发送客户端的内容编码</span><br><span class="line">pageEncoding: Jsp文件本身的编码</span><br><span class="line">isELIgnored: 是否支持EL表达式。默认是false,支持表达式, 是true,不支持表达式，$&#123;1+1&#125;;false输出结果2   true按照原样输出</span><br></pre></td></tr></table></figure><p> include指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">include指令</span><br><span class="line">静态包含：把其它资源包含到当前页面中  </span><br><span class="line">&lt;%@ include file=&quot;header.jsp&quot; %&gt;</span><br><span class="line">动态包含： </span><br><span class="line">&lt;jsp:include page=“header.jsp&quot;&gt;&lt;/jsp:include&gt;</span><br><span class="line">     </span><br><span class="line">两者的区别：翻译的时间段不同(可在tomcat工作目录下查看)</span><br><span class="line">静态包含：在翻译时就把两个文件进行合并</span><br><span class="line">动态包含：不会合并文件，当代码执行到include时，才包含另一个文件的内容</span><br></pre></td></tr></table></figure><p> taglib指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">作用：在JSP页面中导入JSTL标签库。替换jsp中的java代码片段。</span><br><span class="line">&lt;%@ taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot;prefix=&quot;c&quot; %&gt;</span><br></pre></td></tr></table></figure><h5 id="6-JSP的6个动作标签"><a href="#6-JSP的6个动作标签" class="headerlink" title="6. JSP的6个动作标签"></a>6. JSP的6个动作标签</h5><p>使用标签的形式表示一段java代码，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">jsp:include 动态包含</span><br><span class="line">jsp:forward请求转发</span><br><span class="line">jsp:param 请求设置参数</span><br><span class="line">jsp:useBean 创建一个对象</span><br><span class="line">jsp:setProperty给指定的对象属性赋值</span><br><span class="line">jsp:getProperty取出指定的对象属值</span><br></pre></td></tr></table></figure><h5 id="7-内置对象（重点）"><a href="#7-内置对象（重点）" class="headerlink" title="7. 内置对象（重点）"></a>7. 内置对象（重点）</h5><table><thead><tr><th>对象名</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>request</td><td>javax.servlet.http.HttpServletRequest</td><td></td></tr><tr><td>response</td><td>javax.servlet.http.HttpServletResponse</td><td></td></tr><tr><td>session</td><td>javax.servlet.http.HttpSession</td><td>由session=“true”开关</td></tr><tr><td>application</td><td>javax.servlet.ServletContext</td><td></td></tr><tr><td>exception</td><td>java.lang.Throwable</td><td>由isErrorPage=“false”开关</td></tr><tr><td>page</td><td>java.lang.Object当前对象this</td><td>当前JSP的servlet实例，相当于对像</td></tr><tr><td>config</td><td>javax.servlet.ServletConfig</td><td></td></tr><tr><td>pageContext</td><td>javax.servlet.jsp.PageContext</td><td>这个对象代表页面上下文，该对象主要用于访问JSP之间的共享数据。 相当于类,可以在其中获取其几个内置</td></tr><tr><td>out</td><td>javax.servlet.jsp.JspWriter</td><td>javax.servlet.jsp.JspWriter</td></tr></tbody></table><p>代码演示：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span> isErrorPage=<span class="string">"true"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span> <span class="string">"http://www.w3.org/TR/html4/loose.dtd"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;JSP内置对象&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line"><span class="comment">//页面上下文对象</span></span><br><span class="line">pageContext.setAttribute(<span class="string">"msg"</span>, <span class="string">"我是PageContext对象"</span>);</span><br><span class="line">System.out.println(pageContext.getAttribute(<span class="string">"msg"</span>));</span><br><span class="line"><span class="comment">//请求对象</span></span><br><span class="line">System.out.println(<span class="string">"请求对象："</span>+request);</span><br><span class="line"><span class="comment">//响应对象</span></span><br><span class="line">response.getWriter().print(<span class="string">"OK"</span>);</span><br><span class="line"><span class="comment">//当前页面对象</span></span><br><span class="line">System.out.println(page.getClass());<span class="comment">//输出到控制台</span></span><br><span class="line"><span class="comment">//输出对象</span></span><br><span class="line">out.print(<span class="number">48</span>);<span class="comment">//输出到浏览器：48</span></span><br><span class="line">out.write(<span class="number">48</span>);<span class="comment">//输出到浏览器：0</span></span><br><span class="line"><span class="keyword">int</span> no=<span class="number">101</span>;</span><br><span class="line"><span class="comment">//会话对象</span></span><br><span class="line">System.out.println(session);</span><br><span class="line"><span class="comment">//全局对象</span></span><br><span class="line">System.out.println(application.getRealPath(<span class="string">"/"</span>));</span><br><span class="line"><span class="comment">//配置对象--初始化参数</span></span><br><span class="line">System.out.println(config.getServletName());</span><br><span class="line"><span class="comment">//异常对象</span></span><br><span class="line">System.out.println(exception);</span><br><span class="line">System.out.println(application);</span><br><span class="line">application.setAttribute(<span class="string">"author"</span>, <span class="string">"1711"</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;h1&gt;jsp脚本：&lt;%=no %&gt;&lt;/h1&gt;</span><br><span class="line">&lt;h1&gt;jsp脚本：&lt;% out.print(no); %&gt;&lt;/h1&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="8-pageContext对象-重点"><a href="#8-pageContext对象-重点" class="headerlink" title="8. pageContext对象(重点)"></a>8. pageContext对象(重点)</h5><p> 域对象</p><p>可以操作其他三个域对象(request,session,application)的数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">void setAttribute(String name,Object o);</span><br><span class="line">Object getAttribute(String name);</span><br><span class="line">void removeAttribute(String name);</span><br><span class="line"></span><br><span class="line">操作其它域对象的方法</span><br><span class="line">    void setAttribute(String name,Objecto,int Scope);</span><br><span class="line">    Object getAttribute(String name,intScope);</span><br><span class="line">    void removeAttribute(String name,intScope);</span><br><span class="line">Scope作用域，值如下:</span><br><span class="line">    PageContext.PAGE_SCOPE</span><br><span class="line">    PageContext.REQUEST_SCOPE</span><br><span class="line">    PageContext.SESSION_SCOPE</span><br><span class="line">    PageContext.APPLICATION_SCOPE</span><br><span class="line"></span><br><span class="line">findAttribute(Stringname)自动从page,request，session，application依次查找，</span><br><span class="line">找到了就取值，结束查找  （作用域的范围由小到大）</span><br></pre></td></tr></table></figure><p>它可以创建其它的8个隐式对象</p><p>  在普通类中可以通过PageContext获取其它JSP隐式对象,具体如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">getException方法返回exception隐式对象 </span><br><span class="line">getPage方法返回page隐式对象</span><br><span class="line">getRequest方法返回request隐式对象 </span><br><span class="line">getResponse方法返回response隐式对象 </span><br><span class="line">getServletConfig方法返回config隐式对象</span><br><span class="line">getServletContext方法返回application隐式对象</span><br><span class="line">getSession方法返回session隐式对象 </span><br><span class="line">getOut方法返回out隐式对象</span><br></pre></td></tr></table></figure><p>提供了简易方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pageContext.forward(“2.jsp”);</span><br><span class="line">pageContext.include(“2.jsp”);</span><br></pre></td></tr></table></figure><h4 id="二-EL表达式"><a href="#二-EL表达式" class="headerlink" title="二. EL表达式"></a>二. EL表达式</h4><h5 id="1-EL概述和基本语法"><a href="#1-EL概述和基本语法" class="headerlink" title="1. EL概述和基本语法"></a>1. EL概述和基本语法</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">EL表达式:expression language表达式语言</span><br><span class="line">目的:简化jsp中java代码开发</span><br><span class="line">它不是一种开发语言，是jsp中获取数据的一种规范</span><br><span class="line">格式如： $&#123;EL表达式&#125; 等价于findAttribute(name)</span><br><span class="line">默认从pageContext中找，找不到，则request中找，再找不到，则session找，再找不到，则application中找</span><br><span class="line">再找不到，不作显示，不会报错</span><br><span class="line">即寻找顺序，从小的域的范围到大的域的范围寻找，即pageContext--request--session--application</span><br><span class="line">也可以精确指定域的范围寻找 $&#123;域.key&#125;</span><br></pre></td></tr></table></figure><h5 id="2-EL的具体功能"><a href="#2-EL的具体功能" class="headerlink" title="2. EL的具体功能"></a>2. EL的具体功能</h5><p>​       案例1：获取实体类中的属性值</p><blockquote>   <figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt;    &lt;%</span><br><span class="line">&gt;    User user= <span class="keyword">new</span> User();</span><br><span class="line">&gt;    user.setName(<span class="string">"gggg"</span>);</span><br><span class="line">&gt;</span><br><span class="line">&gt;    Address  address = <span class="keyword">new</span> Address();</span><br><span class="line">&gt;    address.setAddr(<span class="string">"北京市海淀区"</span>);</span><br><span class="line">&gt;    user.setAddress(address);</span><br><span class="line">&gt;</span><br><span class="line">&gt;    session.setAttribute(<span class="string">"user"</span>, user);</span><br><span class="line">&gt;    <span class="comment">/* request.getRequestDispatcher("testEl.jsp").forward(request, response); */</span></span><br><span class="line">&gt;    response.sendRedirect(<span class="string">"testEl.jsp"</span>);</span><br><span class="line">&gt;    %&gt;</span><br><span class="line">&gt;    &lt;!--  EL表达式中的.表示调用该属性的get方法 --&gt;</span><br><span class="line">&gt;    &lt;%-- 我是：$住在&#123;user.name &#125;  , 住在  $&#123;user.address.addr &#125; --%&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><h5 id="3-使用list和map"><a href="#3-使用list和map" class="headerlink" title="3. 使用list和map"></a>3. 使用list和map</h5><blockquote>   <figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&gt;    &lt;%</span><br><span class="line">&gt;    List&lt;String&gt; list =<span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">&gt;    list.add(<span class="string">"aa"</span>);</span><br><span class="line">&gt;    list.add(<span class="string">"bb"</span>);</span><br><span class="line">&gt;    list.add(<span class="string">"cc"</span>);</span><br><span class="line">&gt;    pageContext.setAttribute(<span class="string">"list"</span>, list);</span><br><span class="line">&gt;</span><br><span class="line">&gt;    Map&lt;String,String&gt; map =<span class="keyword">new</span> HashMap&lt;String,String&gt;();</span><br><span class="line">&gt;    map.put(<span class="string">"aa"</span>, <span class="string">"11"</span>);</span><br><span class="line">&gt;    map.put(<span class="string">"bb"</span>, <span class="string">"22"</span>);</span><br><span class="line">&gt;    map.put(<span class="string">"cc"</span>, <span class="string">"33"</span>);</span><br><span class="line">&gt;</span><br><span class="line">&gt;    pageContext.setAttribute(<span class="string">"map"</span>, map);</span><br><span class="line">&gt;</span><br><span class="line">&gt;    %&gt;</span><br><span class="line">&gt;</span><br><span class="line">&gt;    &lt;h1&gt;1.以数组的下标形式获取list值&lt;/h1&gt;</span><br><span class="line">&gt;    $&#123;list[<span class="number">0</span>]&#125;&lt;br&gt;</span><br><span class="line">&gt;    $&#123;list[<span class="number">1</span>]&#125;&lt;br&gt;</span><br><span class="line">&gt;    $&#123;list[<span class="number">2</span>]&#125;&lt;br&gt;</span><br><span class="line">&gt;    &lt;h1&gt;2.以提供的方法get(index)&lt;/h1&gt;</span><br><span class="line">&gt;    $&#123;list.get(<span class="number">0</span>)&#125;</span><br><span class="line">&gt;</span><br><span class="line">&gt;    &lt;h1&gt;3.使用El表达式获取map中的值(以key的形式获取)&lt;/h1&gt;</span><br><span class="line">&gt;    $&#123;map.aa&#125;&lt;br&gt;</span><br><span class="line">&gt;    $&#123;map.bb&#125;&lt;br&gt;</span><br><span class="line">&gt;    $&#123;map.cc&#125;&lt;br&gt;</span><br><span class="line">&gt;    &lt;h1&gt;4.使用El表达式获取map中的值&lt;/h1&gt;</span><br><span class="line">&gt;    $&#123;map[<span class="string">'aa'</span>]&#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><h5 id="4-使用EL表达式的empty关键"><a href="#4-使用EL表达式的empty关键" class="headerlink" title="4. 使用EL表达式的empty关键"></a>4. 使用EL表达式的empty关键</h5><blockquote>   <figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&gt;    &lt;% String s1=<span class="string">""</span>;</span><br><span class="line">&gt;    pageContext.setAttribute(<span class="string">"s1"</span>, s1);</span><br><span class="line">&gt;    String s2=<span class="keyword">null</span>;</span><br><span class="line">&gt;    pageContext.setAttribute(<span class="string">"s2"</span>, s2);</span><br><span class="line">&gt;    String s3=<span class="string">"122222"</span>;</span><br><span class="line">&gt;    pageContext.setAttribute(<span class="string">"s3"</span>, s3);</span><br><span class="line">&gt;    List list1 =<span class="keyword">new</span> ArrayList();</span><br><span class="line">&gt;    pageContext.setAttribute(<span class="string">"list1"</span>, list1);</span><br><span class="line">&gt;    %&gt;</span><br><span class="line">&gt;</span><br><span class="line">&gt;    &lt;!-- empty关键只要内容是空<span class="keyword">true</span> --&gt;</span><br><span class="line">&gt;    $&#123;empty s1&#125;&lt;br&gt;</span><br><span class="line">&gt;    $&#123;empty s2&#125;&lt;br&gt;</span><br><span class="line">&gt;    $&#123;empty  s3&#125;&lt;br&gt;</span><br><span class="line">&gt;    $&#123;empty  list1&#125;&lt;br&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="三-JSTL"><a href="#三-JSTL" class="headerlink" title="三. JSTL"></a>三. JSTL</h4><h5 id="1-什么是JSTL"><a href="#1-什么是JSTL" class="headerlink" title="1. 什么是JSTL"></a>1. 什么是JSTL</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JSL:全称JavaServerPages Standard TagLibrary,JSP标准标签库</span><br></pre></td></tr></table></figure><h5 id="2-JSTL的作用"><a href="#2-JSTL的作用" class="headerlink" title="2. JSTL的作用"></a>2. JSTL的作用</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">实现JSP页面中逻辑处理。如判断， 循环等；</span><br></pre></td></tr></table></figure><h5 id="3-使用JSTL"><a href="#3-使用JSTL" class="headerlink" title="3.使用JSTL"></a>3.使用JSTL</h5><p>必须在JSP页面添加tablib指令库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;% @  tagliburi=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot;&gt;</span><br></pre></td></tr></table></figure><h5 id="4-常用标签介绍"><a href="#4-常用标签介绍" class="headerlink" title="4. 常用标签介绍"></a>4. 常用标签介绍</h5><p>通用标签set,out,remove</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 基础标签:声明变量，输出变量，移除变量，变量默认值 --&gt;</span><br><span class="line">&lt;h3&gt;基础标签:声明变量，输出变量，移除变量，变量默认值&lt;/h3&gt;</span><br><span class="line">&lt;!--1. var：是变量名  value:变量的值(必须是EL表达式)--&gt;</span><br><span class="line">&lt;p:set var=&quot;k&quot; value=&quot;$&#123;1+1&#125;&quot;&gt;&lt;/p:set&gt;</span><br><span class="line">&lt;!--2. 输出变量k   value:使用EL表示表示变量--&gt;</span><br><span class="line">移除前输出的内容：&lt;p:out value=&quot;$&#123;k&#125;&quot;&gt;&lt;/p:out&gt;&lt;br&gt;</span><br><span class="line">&lt;!--3.移除指定变量  --&gt;</span><br><span class="line">&lt;p:remove var=&quot;k&quot;/&gt;</span><br><span class="line">移除后输出的内容：&lt;p:out value=&quot;$&#123;k&#125;&quot;&gt;&lt;/p:out&gt;&lt;br&gt;</span><br><span class="line">&lt;!--4.给指定变量赋默认值  --&gt;</span><br><span class="line">默认值：&lt;p:out value=&quot;$&#123;m&#125;&quot; default=&quot;123456&quot;&gt;&lt;/p:out&gt;</span><br></pre></td></tr></table></figure><p> 条件标签if,choose</p><p>&lt;c:if&gt;</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 条件标签：<span class="keyword">if</span>  choose --&gt;</span><br><span class="line">&lt;!-- test属性中是条件，但是条件需要使用EL表达式来书写 --&gt;</span><br><span class="line">&lt;h3&gt;条件标签：if&lt;/h3&gt;</span><br><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;8&gt;2 &#125;"</span>&gt;</span><br><span class="line">    <span class="number">8</span>大于<span class="number">2</span>是成立的</span><br><span class="line">     &lt;/c:if&gt;</span><br><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;8&lt;2 &#125;"</span>&gt;</span><br><span class="line">    <span class="number">8</span>小于<span class="number">2</span>是成立的</span><br><span class="line">    &lt;/c:if&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;%--  如果只是一个基本数据类型直接书写不需要$&#123;&#125; --%&gt;</span><br><span class="line">&lt;c:set var="m" value="$&#123;5&#125;"&gt;&lt;/c:set&gt;</span><br><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;m&gt;3&#125;"</span>&gt;</span><br><span class="line">     <span class="number">5</span>大于<span class="number">3</span>是成立的</span><br><span class="line">  &lt;/c:if&gt;</span><br></pre></td></tr></table></figure><p>&lt;c:choose&gt;</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;h3&gt;条件标签：choose(等价于java中switch)&lt;/h3&gt;</span><br><span class="line">&lt;%-- 测试成绩等级 &gt;<span class="number">90</span> 优秀   &gt;<span class="number">80</span>  良好    &gt;<span class="number">70</span> 中等   &gt;<span class="number">60</span>及格--%&gt;</span><br><span class="line">&lt;c:set var="score" value="$&#123;80&#125;"&gt;&lt;/c:set&gt;</span><br><span class="line">&lt;c:choose&gt;</span><br><span class="line">&lt;c:when test="$&#123;score&gt;=90 &#125;"&gt;优秀&lt;/c:when&gt;</span><br><span class="line">&lt;c:when test="$&#123;score&gt;=80 &#125;"&gt;良好&lt;/c:when&gt;</span><br><span class="line">&lt;c:when test="$&#123;score&gt;=70 &#125;"&gt;中等&lt;/c:when&gt;</span><br><span class="line">&lt;c:when test="$&#123;score&gt;=60 &#125;"&gt;及格&lt;/c:when&gt;</span><br><span class="line">&lt;c:otherwise&gt;不及格&lt;/c:otherwise&gt;</span><br><span class="line">&lt;/c:choose&gt;</span><br></pre></td></tr></table></figure><p>迭代标签foreach</p><p>for基础遍历</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 遍历<span class="keyword">for</span>:输出<span class="number">1</span>到<span class="number">10</span> 的值 --&gt;</span><br><span class="line">&lt;!--var: 变量，把遍历的每一个值都存储在变量中进行输出</span><br><span class="line">    begin：开始   如果是变量使用EL表达式表示</span><br><span class="line">    end:结束    如果是变量使用EL表达式表示</span><br><span class="line">    step:间隔的长度</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>( <span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">     System.out.println(i);</span><br><span class="line">    &#125;</span><br><span class="line">     --&gt;</span><br><span class="line">示例代码：</span><br><span class="line">&lt;c:forEach var=<span class="string">"i"</span> begin=<span class="string">"1"</span> end=<span class="string">"10"</span> step=<span class="string">"2"</span>&gt;</span><br><span class="line"> $&#123;i&#125;&lt;br&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure><p>foreach遍历</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;h3&gt;测试list集合遍历获取学生列表&lt;/h3&gt;</span><br><span class="line">    &lt;table border=<span class="string">"1"</span> width=<span class="string">"80%"</span> bordercolor=<span class="string">"red"</span> cellspacing=<span class="string">"0"</span></span><br><span class="line">        align=<span class="string">"center"</span>&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;学号&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;成绩&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;班级&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;是否是第一个&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;是否是最后一个&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;计数count&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;索引index&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line"> &lt;!-- varStatus:变量状态：遍历出的每一项内容的状态：</span><br><span class="line">    isFirst()      first</span><br><span class="line">    isLast()       last</span><br><span class="line">    getCount()     count  计数  重要的</span><br><span class="line">    getIndex()     index</span><br><span class="line">     --&gt;</span><br><span class="line">     &lt;!-- var :遍历出的每一项使用变量先存储</span><br><span class="line">          items：集合(使用El表达式)</span><br><span class="line">          --&gt;</span><br><span class="line">        &lt;c:forEach var=<span class="string">"stu"</span> items=<span class="string">"$&#123;students&#125;"</span> varStatus=<span class="string">"vs"</span>&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;$&#123;stu.id&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;stu.name&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;stu.score&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;stu.classes&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;vs.first&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;vs.last&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;vs.count&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;vs.index&#125;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/c:forEach&gt;</span><br><span class="line"> &lt;/table&gt;</span><br></pre></td></tr></table></figure><h4 id="作业题"><a href="#作业题" class="headerlink" title="作业题"></a>作业题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1、使用JSP实现登录注册和图书后台管理系统</span><br><span class="line">用户注册</span><br><span class="line">用户登录（欢迎XXX登录）</span><br><span class="line">查看所有图书信息（id,bookname,price,author,type,img(可有可无)）</span><br><span class="line">新增图书</span><br><span class="line">修改图书（bookname,price,author,type其中属性一个或多个）</span><br><span class="line">删除指定图书</span><br><span class="line">退出登录</span><br></pre></td></tr></table></figure><h4 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、Jsp和Servlet的区别</span><br><span class="line">2、Jsp的执行原理</span><br><span class="line">3、说说Jsp的隐藏对象有哪些</span><br><span class="line">4、说出Jsp内置对象以及方法</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;JSP&quot;&gt;&lt;a href=&quot;#JSP&quot; class=&quot;headerlink&quot; title=&quot;JSP&quot;&gt;&lt;/a&gt;JSP&lt;/h3&gt;&lt;h4 id=&quot;今日内容&quot;&gt;&lt;a href=&quot;#今日内容&quot; class=&quot;headerlink&quot; title=&quot;今日内容&quot;&gt;&lt;/a&gt;今日内
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://kongxianghe.top/2018/10/23/Web%E4%B9%8B%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%92%8C%E4%B8%8B%E8%BD%BD/"/>
    <id>http://kongxianghe.top/2018/10/23/Web之文件上传和下载/</id>
    <published>2018-10-23T14:06:03.436Z</published>
    <updated>2018-07-09T06:15:57.080Z</updated>
    
    <content type="html"><![CDATA[<h3 id="文件上传和下载"><a href="#文件上传和下载" class="headerlink" title="文件上传和下载"></a>文件上传和下载</h3><h4 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1、文件上传</span><br><span class="line">   一般文件上传</span><br><span class="line">   有缓冲区文件上传</span><br><span class="line">2、文件下载</span><br><span class="line">3、在数据库中链接存取</span><br><span class="line">4、作业</span><br></pre></td></tr></table></figure><h4 id="一-文件上传"><a href="#一-文件上传" class="headerlink" title="一. 文件上传"></a>一. 文件上传</h4><h5 id="1-文件上传三要素"><a href="#1-文件上传三要素" class="headerlink" title="1. 文件上传三要素"></a>1. 文件上传三要素</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 提供form表单,method必须是post!</span><br><span class="line">2. form表单的enctype必须是multipart/form-data</span><br><span class="line">3. 提供 input type=&quot;file&quot; 类型表单输入</span><br></pre></td></tr></table></figure><h5 id="2-实现文件上传"><a href="#2-实现文件上传" class="headerlink" title="2.实现文件上传"></a>2.实现文件上传</h5><p> <strong>项目准备</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">导入: commons-fileupload的jar包</span><br><span class="line"> commons-io的jar包</span><br></pre></td></tr></table></figure><p><strong>编写上传页面</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>文件上传<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"url"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        上传用户：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        上传文件1：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file1"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        上传文件2：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file2"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p> <strong>编写处理代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> me.gacl.web.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileItem;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.disk.DiskFileItemFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.servlet.ServletFileUpload;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UploadHandleServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">      <span class="comment">//得到上传文件的保存目录，将上传的文件存放于WEB-INF目录下，不允许外界直接访问，保证上传文件的安全</span></span><br><span class="line">       String savePath = <span class="keyword">this</span>.getServletContext().getRealPath(<span class="string">"/WEB-INF/upload"</span>);</span><br><span class="line">       File file = <span class="keyword">new</span> File(savePath);</span><br><span class="line">       <span class="comment">//判断上传文件的保存目录是否存在</span></span><br><span class="line">       <span class="keyword">if</span> (!file.exists() &amp;&amp; !file.isDirectory()) &#123;</span><br><span class="line">           System.out.println(savePath+<span class="string">"目录不存在，需要创建"</span>);</span><br><span class="line">            <span class="comment">//创建目录</span></span><br><span class="line">             file.mkdir();</span><br><span class="line">          &#125;</span><br><span class="line">        <span class="comment">//消息提示</span></span><br><span class="line">        String message = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">//使用Apache文件上传组件处理文件上传步骤：</span></span><br><span class="line">            <span class="comment">//1、创建一个DiskFileItemFactory工厂</span></span><br><span class="line">            DiskFileItemFactory factory = <span class="keyword">new</span> DiskFileItemFactory();</span><br><span class="line">            <span class="comment">//2、创建一个文件上传解析器</span></span><br><span class="line">            ServletFileUpload upload = <span class="keyword">new</span> ServletFileUpload(factory);</span><br><span class="line">            <span class="comment">//解决上传文件名的中文乱码</span></span><br><span class="line">            upload.setHeaderEncoding(<span class="string">"UTF-8"</span>); </span><br><span class="line">            <span class="comment">//3、判断提交上来的数据是否是上传表单的数据</span></span><br><span class="line">            <span class="keyword">if</span>(!ServletFileUpload.isMultipartContent(request))&#123;</span><br><span class="line">               <span class="comment">//按照传统方式获取数据</span></span><br><span class="line">               <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="comment">//4、使用ServletFileUpload解析器解析上传数据，解析结果返回的是一个List&lt;FileItem&gt;集合，每一个FileItem对应一个Form表单的输入项</span></span><br><span class="line">            List&lt;FileItem&gt; list = upload.parseRequest(request);</span><br><span class="line">            <span class="keyword">for</span>(FileItem item : list)&#123;</span><br><span class="line">                <span class="comment">//如果fileitem中封装的是普通输入项的数据</span></span><br><span class="line">                <span class="keyword">if</span>(item.isFormField())&#123;</span><br><span class="line">                   String name = item.getFieldName();</span><br><span class="line">                   <span class="comment">//解决普通输入项的数据的中文乱码问题</span></span><br><span class="line">                   String value = item.getString(<span class="string">"UTF-8"</span>);</span><br><span class="line">                   <span class="comment">//value = new String(value.getBytes("iso8859-1"),"UTF-8");</span></span><br><span class="line">                   System.out.println(name + <span class="string">"="</span> + value);</span><br><span class="line">                 &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="comment">//如果fileitem中封装的是上传文件</span></span><br><span class="line">                    <span class="comment">//得到上传的文件名称，</span></span><br><span class="line">                    String filename = item.getName();</span><br><span class="line">                    <span class="keyword">if</span>(filename==<span class="keyword">null</span> || filename.trim().equals(<span class="string">""</span>))&#123;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                     &#125;</span><br><span class="line">              <span class="comment">//注意：不同的浏览器提交的文件名是不一样的，有些浏览器提交上来的文件名是带有路径的，如：  c:\a\b\1.txt，而有些只是单纯的文件名，如：1.txt</span></span><br><span class="line">                    <span class="comment">//处理获取到的上传文件的文件名的路径部分，只保留文件名部分</span></span><br><span class="line">                  filename = filename.substring(filename.lastIndexOf(<span class="string">"\\"</span>)+<span class="number">1</span>);</span><br><span class="line">                  <span class="comment">//获取item中的上传文件的输入流</span></span><br><span class="line">                  InputStream in = item.getInputStream();</span><br><span class="line">                  <span class="comment">//创建一个文件输出流</span></span><br><span class="line">                  FileOutputStream out = <span class="keyword">new</span> FileOutputStream(savePath + <span class="string">"\\"</span> + filename);</span><br><span class="line">                  <span class="comment">//创建一个缓冲区</span></span><br><span class="line">                  <span class="keyword">byte</span> buffer[] = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                  <span class="comment">//判断输入流中的数据是否已经读完的标识</span></span><br><span class="line">                  <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">                  <span class="comment">//循环将输入流读入到缓冲区当中，(len=in.read(buffer))&gt;0就表示in里面还有数据</span></span><br><span class="line">                  <span class="keyword">while</span>((len=in.read(buffer))&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                  <span class="comment">//使用FileOutputStream输出流将缓冲区的数据写入到指定的目录(savePath + "\\" + filename)当中</span></span><br><span class="line">                       out.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">                   &#125;</span><br><span class="line">                   <span class="comment">//关闭流</span></span><br><span class="line">                   in.close();</span><br><span class="line">                   out.close();</span><br><span class="line">                  <span class="comment">//删除处理文件上传时生成的临时文件</span></span><br><span class="line">                   item.delete();</span><br><span class="line">                   message = <span class="string">"文件上传成功！"</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">               &#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    message= <span class="string">"文件上传失败！"</span>;</span><br><span class="line">                    e.printStackTrace();   </span><br><span class="line">                &#125;</span><br><span class="line">                request.setAttribute(<span class="string">"message"</span>,message);</span><br><span class="line">                request.getRequestDispatcher(<span class="string">"/message.jsp"</span>).forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        doGet(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> <strong>配置</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>UploadHandleServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>me.gacl.web.controller.UploadHandleServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>UploadHandleServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/servlet/UploadHandleServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-文件上传细节注意"><a href="#3-文件上传细节注意" class="headerlink" title="3 .文件上传细节注意"></a>3 .文件上传细节注意</h5><p>上述的代码虽然可以成功将文件上传到服务器上面的指定目录当中，但是文件上传功能有许多需要注意的小细节问题，以下列出的几点需要特别注意的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、为保证服务器安全，上传文件应该放在外界无法直接访问的目录下，比如放于WEB-INF目录下。</span><br><span class="line">2、为防止文件覆盖的现象发生，要为上传文件产生一个唯一的文件名。</span><br><span class="line">3、为防止一个目录下面出现太多文件，要使用hash算法打散存储.</span><br><span class="line">4、要限制上传文件的最大值。</span><br><span class="line">5、要限制上传文件的类型，在收到上传文件名时，判断后缀名是否合法。</span><br></pre></td></tr></table></figure><p>最终处理代码改进为:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UploadHandleServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">                <span class="comment">//得到上传文件的保存目录，将上传的文件存放于WEB-INF目录下，不允许外界直接访问，保证上传文件的安全</span></span><br><span class="line">                String savePath = <span class="keyword">this</span>.getServletContext().getRealPath(<span class="string">"/WEB-INF/upload"</span>);</span><br><span class="line">                <span class="comment">//上传时生成的临时文件保存目录</span></span><br><span class="line">                String tempPath = <span class="keyword">this</span>.getServletContext().getRealPath(<span class="string">"/WEB-INF/temp"</span>);</span><br><span class="line">                File tmpFile = <span class="keyword">new</span> File(tempPath);</span><br><span class="line">                <span class="keyword">if</span> (!tmpFile.exists()) &#123;</span><br><span class="line">                    <span class="comment">//创建临时目录</span></span><br><span class="line">                    tmpFile.mkdir();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//消息提示</span></span><br><span class="line">                String message = <span class="string">""</span>;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    <span class="comment">//使用Apache文件上传组件处理文件上传步骤：</span></span><br><span class="line">                    <span class="comment">//1、创建一个DiskFileItemFactory工厂</span></span><br><span class="line">                    DiskFileItemFactory factory = <span class="keyword">new</span> DiskFileItemFactory();</span><br><span class="line">                    <span class="comment">//设置工厂的缓冲区的大小，当上传的文件大小超过缓冲区的大小时，就会生成一个临时文件存放到指定的临时目录当中。</span></span><br><span class="line">                    factory.setSizeThreshold(<span class="number">1024</span>*<span class="number">100</span>);<span class="comment">//设置缓冲区的大小为100KB，如果不指定，那么缓冲区的大小默认是10KB</span></span><br><span class="line">                    <span class="comment">//设置上传时生成的临时文件的保存目录</span></span><br><span class="line">                    factory.setRepository(tmpFile);</span><br><span class="line">                    <span class="comment">//2、创建一个文件上传解析器</span></span><br><span class="line">                    ServletFileUpload upload = <span class="keyword">new</span> ServletFileUpload(factory);</span><br><span class="line">                    <span class="comment">//监听文件上传进度</span></span><br><span class="line">                    upload.setProgressListener(<span class="keyword">new</span> ProgressListener()&#123;</span><br><span class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">long</span> pBytesRead, <span class="keyword">long</span> pContentLength, <span class="keyword">int</span> arg2)</span> </span>&#123;</span><br><span class="line">                            System.out.println(<span class="string">"文件大小为："</span> + pContentLength + <span class="string">",当前已处理："</span> + pBytesRead);</span><br><span class="line">                            <span class="comment">/**</span></span><br><span class="line"><span class="comment">                             * 文件大小为：14608,当前已处理：4096</span></span><br><span class="line"><span class="comment">                                文件大小为：14608,当前已处理：7367</span></span><br><span class="line"><span class="comment">                                文件大小为：14608,当前已处理：11419</span></span><br><span class="line"><span class="comment">                                文件大小为：14608,当前已处理：14608</span></span><br><span class="line"><span class="comment">                             */</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                     <span class="comment">//解决上传文件名的中文乱码</span></span><br><span class="line">                    upload.setHeaderEncoding(<span class="string">"UTF-8"</span>); </span><br><span class="line">                    <span class="comment">//3、判断提交上来的数据是否是上传表单的数据</span></span><br><span class="line">                    <span class="keyword">if</span>(!ServletFileUpload.isMultipartContent(request))&#123;</span><br><span class="line">                        <span class="comment">//按照传统方式获取数据</span></span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//设置上传单个文件的大小的最大值，目前是设置为1024*1024字节，也就是1MB</span></span><br><span class="line">                    upload.setFileSizeMax(<span class="number">1024</span>*<span class="number">1024</span>);</span><br><span class="line">                    <span class="comment">//设置上传文件总量的最大值，最大值=同时上传的多个文件的大小的最大值的和，目前设置为10MB</span></span><br><span class="line">                    upload.setSizeMax(<span class="number">1024</span>*<span class="number">1024</span>*<span class="number">10</span>);</span><br><span class="line">                    <span class="comment">//4、使用ServletFileUpload解析器解析上传数据，解析结果返回的是一个List&lt;FileItem&gt;集合，每一个FileItem对应一个Form表单的输入项</span></span><br><span class="line">                    List&lt;FileItem&gt; list = upload.parseRequest(request);</span><br><span class="line">                    <span class="keyword">for</span>(FileItem item : list)&#123;</span><br><span class="line">                        <span class="comment">//如果fileitem中封装的是普通输入项的数据</span></span><br><span class="line">                        <span class="keyword">if</span>(item.isFormField())&#123;</span><br><span class="line">                            String name = item.getFieldName();</span><br><span class="line">                            <span class="comment">//解决普通输入项的数据的中文乱码问题</span></span><br><span class="line">                            String value = item.getString(<span class="string">"UTF-8"</span>);</span><br><span class="line">                            <span class="comment">//value = new String(value.getBytes("iso8859-1"),"UTF-8");</span></span><br><span class="line">                            System.out.println(name + <span class="string">"="</span> + value);</span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;<span class="comment">//如果fileitem中封装的是上传文件</span></span><br><span class="line">                            <span class="comment">//得到上传的文件名称，</span></span><br><span class="line">                            String filename = item.getName();</span><br><span class="line">                            System.out.println(filename);</span><br><span class="line">                            <span class="keyword">if</span>(filename==<span class="keyword">null</span> || filename.trim().equals(<span class="string">""</span>))&#123;</span><br><span class="line">                                <span class="keyword">continue</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="comment">//注意：不同的浏览器提交的文件名是不一样的，有些浏览器提交上来的文件名是带有路径的，如：  c:\a\b\1.txt，而有些只是单纯的文件名，如：1.txt</span></span><br><span class="line">                            <span class="comment">//处理获取到的上传文件的文件名的路径部分，只保留文件名部分</span></span><br><span class="line">                            filename = filename.substring(filename.lastIndexOf(<span class="string">"\\"</span>)+<span class="number">1</span>);</span><br><span class="line">                            <span class="comment">//得到上传文件的扩展名</span></span><br><span class="line">                            String fileExtName = filename.substring(filename.lastIndexOf(<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">                            <span class="comment">//如果需要限制上传的文件类型，那么可以通过文件的扩展名来判断上传的文件类型是否合法</span></span><br><span class="line">                            System.out.println(<span class="string">"上传的文件的扩展名是："</span>+fileExtName);</span><br><span class="line">                            <span class="comment">//获取item中的上传文件的输入流</span></span><br><span class="line">                            InputStream in = item.getInputStream();</span><br><span class="line">                            <span class="comment">//得到文件保存的名称</span></span><br><span class="line">                            String saveFilename = makeFileName(filename);</span><br><span class="line">                            <span class="comment">//得到文件的保存目录</span></span><br><span class="line">                            String realSavePath = makePath(saveFilename, savePath);</span><br><span class="line">                            <span class="comment">//创建一个文件输出流</span></span><br><span class="line">                            FileOutputStream out = <span class="keyword">new</span> FileOutputStream(realSavePath + <span class="string">"\\"</span> + saveFilename);</span><br><span class="line">                            <span class="comment">//创建一个缓冲区</span></span><br><span class="line">                            <span class="keyword">byte</span> buffer[] = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                            <span class="comment">//判断输入流中的数据是否已经读完的标识</span></span><br><span class="line">                            <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">                            <span class="comment">//循环将输入流读入到缓冲区当中，(len=in.read(buffer))&gt;0就表示in里面还有数据</span></span><br><span class="line">                            <span class="keyword">while</span>((len=in.read(buffer))&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                                <span class="comment">//使用FileOutputStream输出流将缓冲区的数据写入到指定的目录(savePath + "\\" + filename)当中</span></span><br><span class="line">                                out.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="comment">//关闭输入流</span></span><br><span class="line">                            in.close();</span><br><span class="line">                            <span class="comment">//关闭输出流</span></span><br><span class="line">                            out.close();</span><br><span class="line">                            <span class="comment">//删除处理文件上传时生成的临时文件</span></span><br><span class="line">                            <span class="comment">//item.delete();</span></span><br><span class="line">                            message = <span class="string">"文件上传成功！"</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">catch</span> (FileUploadBase.FileSizeLimitExceededException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                    request.setAttribute(<span class="string">"message"</span>, <span class="string">"单个文件超出最大值！！！"</span>);</span><br><span class="line">                    request.getRequestDispatcher(<span class="string">"/message.jsp"</span>).forward(request, response);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;<span class="keyword">catch</span> (FileUploadBase.SizeLimitExceededException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                    request.setAttribute(<span class="string">"message"</span>, <span class="string">"上传文件的总的大小超出限制的最大值！！！"</span>);</span><br><span class="line">                    request.getRequestDispatcher(<span class="string">"/message.jsp"</span>).forward(request, response);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    message= <span class="string">"文件上传失败！"</span>;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">                request.setAttribute(<span class="string">"message"</span>,message);</span><br><span class="line">                request.getRequestDispatcher(<span class="string">"/message.jsp"</span>).forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Method</span>: makeFileName</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Description</span>: 生成上传文件的文件名，文件名以：uuid+"_"+文件的原始名称</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Anthor</span>:孤傲苍狼</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> filename 文件的原始名称</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> uuid+"_"+文件的原始名称</span></span><br><span class="line"><span class="comment">    */</span> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">makeFileName</span><span class="params">(String filename)</span></span>&#123;  <span class="comment">//2.jpg</span></span><br><span class="line">        <span class="comment">//为防止文件覆盖的现象发生，要为上传文件产生一个唯一的文件名</span></span><br><span class="line">        <span class="keyword">return</span> UUID.randomUUID().toString() + <span class="string">"_"</span> + filename;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 为防止一个目录下面出现太多文件，要使用hash算法打散存储</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> filename 文件名，要根据文件名生成存储目录</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> savePath 文件存储路径</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> 新的存储目录</span></span><br><span class="line"><span class="comment">    */</span> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">makePath</span><span class="params">(String filename,String savePath)</span></span>&#123;</span><br><span class="line">        <span class="comment">//得到文件名的hashCode的值，得到的就是filename这个字符串对象在内存中的地址</span></span><br><span class="line">        <span class="keyword">int</span> hashcode = filename.hashCode();</span><br><span class="line">        <span class="keyword">int</span> dir1 = hashcode&amp;<span class="number">0xf</span>;  <span class="comment">//0--15</span></span><br><span class="line">        <span class="keyword">int</span> dir2 = (hashcode&amp;<span class="number">0xf0</span>)&gt;&gt;<span class="number">4</span>;  <span class="comment">//0-15</span></span><br><span class="line">        <span class="comment">//构造新的保存目录</span></span><br><span class="line">        String dir = savePath + <span class="string">"\\"</span> + dir1 + <span class="string">"\\"</span> + dir2;  <span class="comment">//upload\2\3  upload\3\5</span></span><br><span class="line">        <span class="comment">//File既可以代表文件也可以代表目录</span></span><br><span class="line">        File file = <span class="keyword">new</span> File(dir);</span><br><span class="line">        <span class="comment">//如果目录不存在</span></span><br><span class="line">        <span class="keyword">if</span>(!file.exists())&#123;</span><br><span class="line">            <span class="comment">//创建目录</span></span><br><span class="line">            file.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dir;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二-文件下载"><a href="#二-文件下载" class="headerlink" title="二. 文件下载"></a>二. 文件下载</h4><blockquote><p>我们要将Web应用系统中的文件资源提供给用户进行下载，首先我们要有一个页面列出上传文件目录下的所有文件，当用户点击文件下载超链接时就进行下载操作，编写一个ListFileServlet，用于列出Web应用系统中所有下载文件</p></blockquote><h5 id="1-获取文件列表"><a href="#1-获取文件列表" class="headerlink" title="1 .获取文件列表"></a>1 .获取文件列表</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> me.gacl.web.controller;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListFileServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取上传文件的目录</span></span><br><span class="line">        String uploadFilePath = <span class="keyword">this</span>.getServletContext().getRealPath(<span class="string">"/WEB-INF/upload"</span>);</span><br><span class="line">        <span class="comment">//存储要下载的文件名</span></span><br><span class="line">        Map&lt;String,String&gt; fileNameMap = <span class="keyword">new</span> HashMap&lt;String,String&gt;();</span><br><span class="line">        <span class="comment">//递归遍历filepath目录下的所有文件和目录，将文件的文件名存储到map集合中</span></span><br><span class="line">        listfile(<span class="keyword">new</span> File(uploadFilePath),fileNameMap);<span class="comment">//File既可以代表一个文件也可以代表一个目录</span></span><br><span class="line">        <span class="comment">//将Map集合发送到listfile.jsp页面进行显示</span></span><br><span class="line">        request.setAttribute(<span class="string">"fileNameMap"</span>, fileNameMap);</span><br><span class="line">        request.getRequestDispatcher(<span class="string">"/listfile.jsp"</span>).forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">listfile</span><span class="params">(File file,Map&lt;String,String&gt; map)</span></span>&#123;</span><br><span class="line">        <span class="comment">//如果file代表的不是一个文件，而是一个目录</span></span><br><span class="line">        <span class="keyword">if</span>(!file.isFile())&#123;</span><br><span class="line">            <span class="comment">//列出该目录下的所有文件和目录</span></span><br><span class="line">            File files[] = file.listFiles();</span><br><span class="line">            <span class="comment">//遍历files[]数组</span></span><br><span class="line">            <span class="keyword">for</span>(File f : files)&#123;</span><br><span class="line">                <span class="comment">//递归</span></span><br><span class="line">                listfile(f,map);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 处理文件名，上传后的文件是以uuid_文件名的形式去重新命名的，去除文件名的uuid_部分</span></span><br><span class="line"><span class="comment">                file.getName().indexOf("_")检索字符串中第一次出现"_"字符的位置，如果文件名类似于：9349249849-88343-8344_阿_凡_达.avi</span></span><br><span class="line"><span class="comment">                那么file.getName().substring(file.getName().indexOf("_")+1)处理之后就可以得到阿_凡_达.avi部分</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            String realName = file.getName().substring(file.getName().indexOf(<span class="string">"_"</span>)+<span class="number">1</span>);</span><br><span class="line">            <span class="comment">//file.getName()得到的是文件的原始名称，这个名称是唯一的，因此可以作为key，realName是处理过后的名称，有可能会重复</span></span><br><span class="line">            map.put(file.getName(), realName);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里简单说一下ListFileServlet中listfile方法，listfile方法是用来列出目录下的所有文件的，listfile方法内部用到了递归，在实际开发当中，我们肯定会在数据库创建一张表，里面会存储上传的文件名以及文件的具体存放目录，我们通过查询表就可以知道文件的具体存放目录，是不需要用到递归操作的，这个例子是因为没有使用数据库存储上传的文件名和文件的具体存放位置，而上传文件的存放位置又使用了散列算法打散存放，所以需要用到递归，在递归时，将获取到的文件名存放到从外面传递到listfile方法里面的Map集合当中，这样就可以保证所有的文件都存放在同一个Map集合当中。</p><h5 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h5><p>在Web.xml文件中配置ListFileServlet</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ListFileServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>me.gacl.web.controller.ListFileServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ListFileServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/servlet/ListFileServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-下载页面"><a href="#3-下载页面" class="headerlink" title="3 .下载页面"></a>3 .下载页面</h5><p>展示下载文件的listfile.jsp页面如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> <span class="keyword">import</span>=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;下载文件显示页面&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">      &lt;!-- 遍历Map集合 --&gt;</span><br><span class="line">    &lt;c:forEach var=<span class="string">"me"</span> items=<span class="string">"$&#123;fileNameMap&#125;"</span>&gt;</span><br><span class="line">        &lt;c:url value=<span class="string">"/servlet/DownLoadServlet"</span> var=<span class="string">"downurl"</span>&gt;</span><br><span class="line">            &lt;c:param name="filename" value="$&#123;me.key&#125;"&gt;&lt;/c:param&gt;</span><br><span class="line">        &lt;/c:url&gt;</span><br><span class="line">        $&#123;me.value&#125;&lt;a href="$&#123;downurl&#125;"&gt;下载&lt;/a&gt;</span><br><span class="line">        &lt;br/&gt;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="4-实现文件下载"><a href="#4-实现文件下载" class="headerlink" title="4. 实现文件下载"></a>4. 实现文件下载</h5><p>编写一个用于处理文件下载的Servlet，DownLoadServlet的代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DownLoadServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//得到要下载的文件名</span></span><br><span class="line">        String fileName = request.getParameter(<span class="string">"filename"</span>);  <span class="comment">//23239283-92489-阿凡达.avi</span></span><br><span class="line">        fileName = <span class="keyword">new</span> String(fileName.getBytes(<span class="string">"iso8859-1"</span>),<span class="string">"UTF-8"</span>);</span><br><span class="line">        <span class="comment">//上传的文件都是保存在/WEB-INF/upload目录下的子目录当中</span></span><br><span class="line">        String fileSaveRootPath=<span class="keyword">this</span>.getServletContext().getRealPath(<span class="string">"/WEB-INF/upload"</span>);</span><br><span class="line">        <span class="comment">//通过文件名找出文件的所在目录</span></span><br><span class="line">        String path = findFileSavePathByFileName(fileName,fileSaveRootPath);</span><br><span class="line">        <span class="comment">//得到要下载的文件</span></span><br><span class="line">        File file = <span class="keyword">new</span> File(path + <span class="string">"\\"</span> + fileName);</span><br><span class="line">        <span class="comment">//如果文件不存在</span></span><br><span class="line">        <span class="keyword">if</span>(!file.exists())&#123;</span><br><span class="line">            request.setAttribute(<span class="string">"message"</span>, <span class="string">"您要下载的资源已被删除！！"</span>);</span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/message.jsp"</span>).forward(request, response);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//处理文件名</span></span><br><span class="line">        String realname = fileName.substring(fileName.indexOf(<span class="string">"_"</span>)+<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//设置响应头，控制浏览器下载该文件</span></span><br><span class="line">        response.setHeader(<span class="string">"content-disposition"</span>, <span class="string">"attachment;filename="</span> + URLEncoder.encode(realname, <span class="string">"UTF-8"</span>));</span><br><span class="line">        <span class="comment">//读取要下载的文件，保存到文件输入流</span></span><br><span class="line">        FileInputStream in = <span class="keyword">new</span> FileInputStream(path + <span class="string">"\\"</span> + fileName);</span><br><span class="line">        <span class="comment">//创建输出流</span></span><br><span class="line">        OutputStream out = response.getOutputStream();</span><br><span class="line">        <span class="comment">//创建缓冲区</span></span><br><span class="line">        <span class="keyword">byte</span> buffer[] = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//循环将输入流中的内容读取到缓冲区当中</span></span><br><span class="line">        <span class="keyword">while</span>((len=in.read(buffer))&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//输出缓冲区的内容到浏览器，实现文件下载</span></span><br><span class="line">            out.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//关闭文件输入流</span></span><br><span class="line">        in.close();</span><br><span class="line">        <span class="comment">//关闭输出流</span></span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">findFileSavePathByFileName</span><span class="params">(String filename,String saveRootPath)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> hashcode = filename.hashCode();</span><br><span class="line">        <span class="keyword">int</span> dir1 = hashcode&amp;<span class="number">0xf</span>;  <span class="comment">//0--15</span></span><br><span class="line">        <span class="keyword">int</span> dir2 = (hashcode&amp;<span class="number">0xf0</span>)&gt;&gt;<span class="number">4</span>;  <span class="comment">//0-15</span></span><br><span class="line">        String dir = saveRootPath + <span class="string">"\\"</span> + dir1 + <span class="string">"\\"</span> + dir2;  <span class="comment">//upload\2\3  upload\3\5</span></span><br><span class="line">        File file = <span class="keyword">new</span> File(dir);</span><br><span class="line">        <span class="keyword">if</span>(!file.exists())&#123;</span><br><span class="line">            <span class="comment">//创建目录</span></span><br><span class="line">            file.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dir;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="5-配置"><a href="#5-配置" class="headerlink" title="5. 配置"></a>5. 配置</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DownLoadServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>me.gacl.web.controller.DownLoadServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DownLoadServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/servlet/DownLoadServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="作业题"><a href="#作业题" class="headerlink" title="作业题"></a>作业题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1、完善图书图片的上传和下载功能</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;文件上传和下载&quot;&gt;&lt;a href=&quot;#文件上传和下载&quot; class=&quot;headerlink&quot; title=&quot;文件上传和下载&quot;&gt;&lt;/a&gt;文件上传和下载&lt;/h3&gt;&lt;h4 id=&quot;今日内容&quot;&gt;&lt;a href=&quot;#今日内容&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://kongxianghe.top/2018/10/23/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0%E5%92%8CDBUtils%E4%BD%BF%E7%94%A8/"/>
    <id>http://kongxianghe.top/2018/10/23/数据库连接池和DBUtils使用/</id>
    <published>2018-10-23T14:06:03.418Z</published>
    <updated>2018-07-09T06:15:57.282Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数据库连接池和DBUtils使用"><a href="#数据库连接池和DBUtils使用" class="headerlink" title="数据库连接池和DBUtils使用"></a>数据库连接池和DBUtils使用</h3><h4 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1、自定义数据库连接池</span><br><span class="line">2、使用DBCP连接池</span><br><span class="line">3、使用C3P0连接池</span><br><span class="line">4、使用Druid连接池</span><br><span class="line">5、DbUtils的使用</span><br><span class="line">6、作业</span><br></pre></td></tr></table></figure><h4 id="一-自定义连接池"><a href="#一-自定义连接池" class="headerlink" title="一. 自定义连接池"></a>一. 自定义连接池</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用JDBC操作数据库,需要建立Connection,使用传统的JDBC操作需要每次创建Connection,创建Connection是一个非常性能和消耗时间的过程,我们需要在提高程序性能,那么就需要减少每次创建创建连接带来的负面影响,解决这个问题我们将利用池子概念,预先创建一些链接放入池子中,如果需要操作数据,不用创建新的Connection,只需要在池子中获取即可,使用完毕放入池子!这样就形成了复用!</span><br></pre></td></tr></table></figure><h5 id="1-自定义连接池"><a href="#1-自定义连接池" class="headerlink" title="1.自定义连接池"></a>1.自定义连接池</h5><p>我们可以通过自定义的方式实现连接池!分析连接池类应该包含特定的属性和方法!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">属性: 集合 放置Connection</span><br><span class="line"></span><br><span class="line">方法:  获取连接方法</span><br><span class="line"></span><br><span class="line">回收连接方法</span><br></pre></td></tr></table></figure><p>具体实现代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Pool</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> LinkedList&lt;Connection&gt; list  = <span class="keyword">new</span> LinkedList&lt;Connection&gt;();</span><br><span class="line"><span class="keyword">static</span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">Connection connection = JDBCUtils.findConnection();</span><br><span class="line">list.add(connection);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从连接池子中获取连接的方式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (list.isEmpty()) &#123;</span><br><span class="line"></span><br><span class="line">Connection connection = JDBCUtils.findConnection();</span><br><span class="line"></span><br><span class="line">list.addLast(connection);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Connection conn = list.removeFirst();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> conn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回到连接池子中</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addBack</span><span class="params">(Connection conn)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (list.size() &gt;= <span class="number">10</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">list.addLast(conn);  <span class="comment">//10</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取连接池子中连接数量的方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> list.size();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-通过实现java规范实现连接池"><a href="#2-通过实现java规范实现连接池" class="headerlink" title="2. 通过实现java规范实现连接池"></a>2. 通过实现java规范实现连接池</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Java为连接池实现提供了一个规范(接口),规范的写法,我们需要实现DataSource接口!</span><br><span class="line">但是实现DataSource接口有一个弊端,没有提供回收链接方法!这里我们将使用装饰者模式!</span><br></pre></td></tr></table></figure><p>装饰Connection!具体实现代码如下:</p><ol><li>创建装饰Connection</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyConnection</span>   <span class="keyword">implements</span> <span class="title">Connection</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将被装饰者导入</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Connection conn;</span><br><span class="line"><span class="keyword">private</span> LinkedList&lt;Connection&gt; list;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyConnection</span><span class="params">(Connection conn, LinkedList&lt;Connection&gt; list)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line"><span class="keyword">this</span>.conn = conn;</span><br><span class="line"><span class="keyword">this</span>.list = list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">unwrap</span><span class="params">(Class&lt;T&gt; iface)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> conn.unwrap(iface);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isWrapperFor</span><span class="params">(Class&lt;?&gt; iface)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> conn.isWrapperFor(iface);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Statement <span class="title">createStatement</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> conn.createStatement();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PreparedStatement <span class="title">prepareStatement</span><span class="params">(String sql)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> conn.prepareStatement(sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> CallableStatement <span class="title">prepareCall</span><span class="params">(String sql)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">nativeSQL</span><span class="params">(String sql)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAutoCommit</span><span class="params">(<span class="keyword">boolean</span> autoCommit)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">getAutoCommit</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">commit</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"></span><br><span class="line">conn.commit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rollback</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"></span><br><span class="line">conn.rollback();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//连接对像的关闭或归还</span></span><br><span class="line"><span class="keyword">if</span>(list.size()&gt;=<span class="number">10</span>)&#123;</span><br><span class="line">conn.close();</span><br><span class="line">System.out.println(<span class="string">"池中连接对像已满，直接关闭"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">list.addLast(conn);</span><br><span class="line">System.out.println(<span class="string">"池中连接对像未满，归还连接对像"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>基于规范实现的连接池</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建一个规范的连接池子</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSourcePool</span> <span class="keyword">implements</span> <span class="title">DataSource</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> LinkedList&lt;Connection&gt; list  = <span class="keyword">new</span> LinkedList&lt;Connection&gt;();</span><br><span class="line"><span class="keyword">static</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">Connection connection = JDBCUtils.newInstance().getConnection();</span><br><span class="line">list.add(connection);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> list.size();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">//池中对像是否为空</span></span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span>(list.isEmpty())&#123;</span><br><span class="line">conn = JdbcUtil.findConnection();</span><br><span class="line">System.out.println(<span class="string">"池中对像为空，创建新的连接对像"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">conn = list.removeFirst();</span><br><span class="line">System.out.println(<span class="string">"池中对像不为空，返回给使用者"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//返回装饰者对像</span></span><br><span class="line">MyConnection myconn = <span class="keyword">new</span> MyConnection(list,conn);</span><br><span class="line"><span class="keyword">return</span> myconn;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PrintWriter <span class="title">getLogWriter</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLogWriter</span><span class="params">(PrintWriter out)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLoginTimeout</span><span class="params">(<span class="keyword">int</span> seconds)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getLoginTimeout</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Logger <span class="title">getParentLogger</span><span class="params">()</span> <span class="keyword">throws</span> SQLFeatureNotSupportedException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">unwrap</span><span class="params">(Class&lt;T&gt; iface)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isWrapperFor</span><span class="params">(Class&lt;?&gt; iface)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Connection <span class="title">getConnection</span><span class="params">(String username, String password)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二-使用DBCP连接池"><a href="#二-使用DBCP连接池" class="headerlink" title="二. 使用DBCP连接池"></a>二. 使用DBCP连接池</h4><blockquote><p> DBCP(DataBase connection pool),<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0" target="_blank" rel="noopener">数据库连接池</a>。是 apache 上的一个 java 连接池项目，也是 tomcat 使用的连接池组件。单独使用dbcp需要2个包：commons-dbcp.jar,commons-pool.jar由于建立数据库连接是一个非常耗时<a href="https://baike.baidu.com/item/%E8%80%97%E8%B5%84%E6%BA%90" target="_blank" rel="noopener">耗资源</a>的行为，所以通过连接池预先同数据库建立一些连接，放在内存中，应用程序需要建立数据库连接时直接到连接池中申请一个就行，用完后再放回去。</p></blockquote><p>#####1 .DBCP连接池的使用</p><p><strong>创建项目</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">创建JavaWeb项目</span><br></pre></td></tr></table></figure><p> <strong>导入相应jar包</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql-jdbc.jar</span><br><span class="line">commons-dbcp.jar</span><br><span class="line">commons-pool.jar</span><br></pre></td></tr></table></figure><p> <strong>硬编码方式使用DBCP连接池</strong></p><blockquote><p>所谓的硬编码方式就是在代码中添加配置</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testHard</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line"><span class="comment">//TODO 硬编码 使用DBCP连接池子</span></span><br><span class="line">BasicDataSource source = <span class="keyword">new</span> BasicDataSource();</span><br><span class="line"><span class="comment">//设置连接的信息  </span></span><br><span class="line">source.setDriverClassName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">source.setUrl(<span class="string">"jdbc:mysql://localhost:3306/day2"</span>);</span><br><span class="line">source.setUsername(<span class="string">"root"</span>);</span><br><span class="line">source.setPassword(<span class="string">"111"</span>);</span><br><span class="line"></span><br><span class="line">Connection connection = source.getConnection();</span><br><span class="line"></span><br><span class="line">String sql = <span class="string">"select * from student"</span>;</span><br><span class="line"></span><br><span class="line">Statement createStatement = connection.createStatement();</span><br><span class="line"></span><br><span class="line">ResultSet executeQuery = createStatement.executeQuery(sql);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (executeQuery.next()) &#123;</span><br><span class="line"> </span><br><span class="line">System.out.println(executeQuery.getString(<span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line">connection.close(); <span class="comment">//回收</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>#####2.软编码方式使用DBCP连接池</p><blockquote><p>所谓的软编码,就是在项目中添加配置文件,这样就不需要每次代码中添加配合!</p></blockquote><p><strong>项目中添加配置</strong></p><p>​       文件名称: info.properties</p><p>​       文件位置: src下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#连接设置</span><br><span class="line">driverClassName=com.mysql.jdbc.Driver</span><br><span class="line">url=jdbc:mysql://localhost:3306/day2</span><br><span class="line">username=root</span><br><span class="line">password=111</span><br><span class="line">#&lt;!-- 初始化连接 --&gt;</span><br><span class="line">initialSize=10</span><br><span class="line">#最大连接数量</span><br><span class="line">maxActive=50</span><br><span class="line">#&lt;!-- 最大空闲连接 --&gt;</span><br><span class="line">maxIdle=20</span><br><span class="line">#&lt;!-- 最小空闲连接 --&gt;</span><br><span class="line">minIdle=5</span><br><span class="line">#&lt;!-- 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 --&gt;</span><br><span class="line">maxWait=6000</span><br></pre></td></tr></table></figure><p><strong>代码实现</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSoft</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"><span class="comment">//TODO DBCP软编码连接池子使用</span></span><br><span class="line">BasicDataSourceFactory factory = <span class="keyword">new</span> BasicDataSourceFactory();</span><br><span class="line">Properties properties = <span class="keyword">new</span>  Properties();</span><br><span class="line"><span class="comment">//配置文件添加到properties对象中  javase</span></span><br><span class="line">properties.load(<span class="keyword">new</span> FileInputStream(<span class="string">"src/info.properties"</span>));</span><br><span class="line"><span class="comment">//生成连接池子  需要配置文件</span></span><br><span class="line">DataSource source = factory.createDataSource(properties);</span><br><span class="line">       Connection connection = source.getConnection();</span><br><span class="line">String sql = <span class="string">"select * from student"</span>;</span><br><span class="line">Statement createStatement = connection.createStatement();</span><br><span class="line">ResultSet executeQuery = createStatement.executeQuery(sql);</span><br><span class="line"><span class="keyword">while</span> (executeQuery.next()) &#123;</span><br><span class="line">System.out.println(executeQuery.getString(<span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line">connection.close(); <span class="comment">//回收</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="三-使用C3P0连接池"><a href="#三-使用C3P0连接池" class="headerlink" title="三.使用C3P0连接池"></a>三.使用C3P0连接池</h4><blockquote><p>   C3P0是一个开源的JDBC连接池，它实现了数据源和JNDI绑定，支持JDBC3规范和JDBC2的标准扩展。目前使用它的开源项目有Hibernate，Spring等。</p></blockquote><pre><code>c3p0与dbcp区别     1.        dbcp没有自动回收空闲连接的功能        c3p0有自动回收空闲连接功能     2.          dbcp需要手动设置配置文件        c3p0不需要手动设置</code></pre><h5 id="1-使用步骤"><a href="#1-使用步骤" class="headerlink" title="1. 使用步骤"></a>1. 使用步骤</h5><p><strong>创建项目</strong></p><p><strong>导入jar包</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c3p0-0.9.1.2.jar</span><br><span class="line">mysql-connector-java-5.0.8.jar</span><br></pre></td></tr></table></figure><p><strong>添加配置文件</strong></p><blockquote><p>c3p0是在外部添加配置文件,工具直接进行应用,因为直接引用,所以要求固定的命名和文件位置</p></blockquote><p>文件位置: src </p><p>文件命名:c3p0-config.xml/c3p0-config.properties</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">c3p0-config</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 默认配置，如果没有指定则使用这个配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">default-config</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 基本配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClass"</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcUrl"</span>&gt;</span>jdbc:mysql://localhost:3306/day2<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user"</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span>111<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--扩展配置--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 连接超过30秒报错--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"checkoutTimeout"</span>&gt;</span>30000<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--30秒检查空闲连接 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"idleConnectionTestPeriod"</span>&gt;</span>30<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--初始化连接数 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"initialPoolSize"</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!-- 30秒不适用丢弃--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxIdleTime"</span>&gt;</span>30<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--连接池最大连接数 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxPoolSize"</span>&gt;</span>100<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--连接池最小连接数 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minPoolSize"</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--最大会话数量--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxStatements"</span>&gt;</span>200<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">default-config</span>&gt;</span> </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!-- 命名的配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">named-config</span> <span class="attr">name</span>=<span class="string">"mypool"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClass"</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcUrl"</span>&gt;</span>jdbc:mysql://localhost:3306/day2<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user"</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span>111<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 如果池中数据连接不够时一次增长多少个 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"acquireIncrement"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"initialPoolSize"</span>&gt;</span>20<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minPoolSize"</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxPoolSize"</span>&gt;</span>40<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxStatements"</span>&gt;</span>20<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxStatementsPerConnection"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">named-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c3p0-config</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意: c3p0的配置文件内部可以包含命名配置文件和默认配置文件!默认是选择默认配置!如果需要切换命名配置可以在创建c3p0连接池的时候填入命名即可!</p><p> <strong>使用c3p0进行数据库操作</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestC3p0</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.创建C3P0连接池子</span></span><br><span class="line">Connection connection = DataSourceUtils.getConnection();</span><br><span class="line"></span><br><span class="line">Statement createStatement = connection.createStatement();</span><br><span class="line"></span><br><span class="line">String sql = <span class="string">"select * from student;"</span>;</span><br><span class="line"></span><br><span class="line">ResultSet resultSet = createStatement.executeQuery(sql);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line"></span><br><span class="line">System.out.println(resultSet.getString(<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line">DataSourceUtils.close(connection, createStatement, resultSet);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> <strong>使用c3p0连接池编写工具类</strong></p><p>基于c3p0连接池编写数据库操作工具类!</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从连接池子中获取连接！</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> *  C3P0的连接池子</span></span><br><span class="line"><span class="comment"> *  0.获取连接池子对象  DBUtils</span></span><br><span class="line"><span class="comment"> *  1.获取连接</span></span><br><span class="line"><span class="comment"> *  2.关闭资源</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSourceUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span>  ComboPooledDataSource  dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回连接池对象方法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> c3p0连接池子</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  ComboPooledDataSource <span class="title">getDataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> dataSource;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 连接池中获取连接的方法 </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 连接</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">Connection conn  = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">conn = dataSource.getConnection();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> conn;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//关闭资源</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Connection conn)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title">close</span><span class="params">(Statement st)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (st != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">st.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span>  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet  set)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (set != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">set.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Connection conn,Statement st)</span></span>&#123;</span><br><span class="line">close(conn);</span><br><span class="line">close(st);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span>  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Connection conn,Statement st,ResultSet rt)</span></span>&#123;</span><br><span class="line">close(conn);</span><br><span class="line">close(st);</span><br><span class="line">close(rt);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="四-使用Druid数据库连接池"><a href="#四-使用Druid数据库连接池" class="headerlink" title="四.使用Druid数据库连接池"></a>四.使用Druid数据库连接池</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Druid 是目前比较流行的高性能的，分布式列存储的OLAP框架(具体来说是MOLAP)。它有如下几个特点：</span><br><span class="line">一. 亚秒级查询</span><br><span class="line">     druid提供了快速的聚合能力以及亚秒级的OLAP查询能力，多租户的设计，是面向用户分析应用的理想方式。</span><br><span class="line">二.实时数据注入</span><br><span class="line">     druid支持流数据的注入，并提供了数据的事件驱动，保证在实时和离线环境下事件的实效性和统一性</span><br><span class="line">三.可扩展的PB级存储</span><br><span class="line">     druid集群可以很方便的扩容到PB的数据量，每秒百万级别的数据注入。即便在加大数据规模的情况下，也能保证时其效性</span><br><span class="line">四.多环境部署</span><br><span class="line">     druid既可以运行在商业的硬件上，也可以运行在云上。它可以从多种数据系统中注入数据，包括hadoop，spark，kafka，storm和samza等</span><br><span class="line">五.丰富的社区</span><br><span class="line">     druid拥有丰富的社区，供大家学习</span><br></pre></td></tr></table></figure><h5 id="1-使用步骤-1"><a href="#1-使用步骤-1" class="headerlink" title="1. 使用步骤"></a>1. 使用步骤</h5><p> <strong>导入jar包</strong></p><p> <strong>编写工具类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 阿里的数据库连接池</span></span><br><span class="line"><span class="comment"> * 性能最好的</span></span><br><span class="line"><span class="comment"> * Druid</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidUtils</span> </span>&#123;</span><br><span class="line"><span class="comment">//声明连接池对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> DruidDataSource ds;</span><br><span class="line"><span class="keyword">static</span>&#123;</span><br><span class="line"><span class="comment">///实例化数据库连接池对象</span></span><br><span class="line">ds=<span class="keyword">new</span> DruidDataSource();</span><br><span class="line"><span class="comment">//实例化配置对象</span></span><br><span class="line">Properties properties=<span class="keyword">new</span> Properties();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//加载配置文件内容</span></span><br><span class="line">properties.load(DruidUtils.class.getResourceAsStream(<span class="string">"dbcpconfig.properties"</span>));</span><br><span class="line"><span class="comment">//设置驱动类全称</span></span><br><span class="line">ds.setDriverClassName(properties.getProperty(<span class="string">"driverClassName"</span>));</span><br><span class="line"><span class="comment">//设置连接的数据库</span></span><br><span class="line">ds.setUrl(properties.getProperty(<span class="string">"url"</span>));</span><br><span class="line"><span class="comment">//设置用户名</span></span><br><span class="line">ds.setUsername(properties.getProperty(<span class="string">"username"</span>));</span><br><span class="line"><span class="comment">//设置密码</span></span><br><span class="line">ds.setPassword(properties.getProperty(<span class="string">"password"</span>));</span><br><span class="line"><span class="comment">//设置最大连接数量</span></span><br><span class="line">ds.setMaxActive(Integer.parseInt(properties.getProperty(<span class="string">"maxActive"</span>)));</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取连接对象</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">return</span> ds.getConnection();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> <strong>测试</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Druid_Test</span></span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line">  findAll();</span><br><span class="line">  find(<span class="string">"小千千"</span>,<span class="string">"47983"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Master&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Connection conn=<span class="keyword">null</span>;</span><br><span class="line">PreparedStatement pstat=<span class="keyword">null</span>;</span><br><span class="line">ResultSet rs=<span class="keyword">null</span>;</span><br><span class="line">List&lt;Master&gt; masters=<span class="keyword">new</span> ArrayList&lt;Master&gt;();</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">conn=DruidUtils.getConnection();</span><br><span class="line">pstat=conn.prepareStatement(<span class="string">"select * from master"</span>);</span><br><span class="line">rs=pstat.executeQuery();</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line"><span class="keyword">int</span> id=rs.getInt(<span class="string">"id"</span>);</span><br><span class="line">String name=rs.getString(<span class="string">"name"</span>);</span><br><span class="line">String password=rs.getString(<span class="string">"password"</span>);</span><br><span class="line"><span class="keyword">int</span> money=rs.getInt(<span class="string">"money"</span>);</span><br><span class="line">masters.add(<span class="keyword">new</span> Master(id, name, password, money));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> masters;</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">DbUtils.release(rs, pstat, conn);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Master <span class="title">find</span><span class="params">(String name, String password)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Connection conn=<span class="keyword">null</span>;</span><br><span class="line">PreparedStatement pstat=<span class="keyword">null</span>;</span><br><span class="line">ResultSet rs=<span class="keyword">null</span>;</span><br><span class="line">Master master=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">conn=DbUtils.getConnection();</span><br><span class="line">pstat=conn.prepareStatement(<span class="string">"select * from master where name=? and password=?"</span>);</span><br><span class="line">pstat.setString(<span class="number">1</span>, name);</span><br><span class="line">pstat.setString(<span class="number">2</span>, password);</span><br><span class="line">rs=pstat.executeQuery();</span><br><span class="line"><span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line"><span class="keyword">int</span> id=rs.getInt(<span class="string">"id"</span>);</span><br><span class="line"><span class="keyword">int</span> money=rs.getInt(<span class="string">"money"</span>);</span><br><span class="line">master=<span class="keyword">new</span> Master(id, name, password, money);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> master;</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">DbUtils.release(rs, pstat, conn);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="五-DBUtils工具类使用"><a href="#五-DBUtils工具类使用" class="headerlink" title="五 .DBUtils工具类使用"></a>五 .DBUtils工具类使用</h4><blockquote><p>Commons DbUtils是<a href="https://baike.baidu.com/item/Apache/8512995" target="_blank" rel="noopener">Apache</a>组织提供的一个对<a href="https://baike.baidu.com/item/JDBC" target="_blank" rel="noopener">JDBC</a>进行简单封装的开源工具类库，使用它能够简化<a href="https://baike.baidu.com/item/JDBC" target="_blank" rel="noopener">JDBC</a>应用程序的开发，同时也不会影响程序的性能。</p></blockquote><h5 id="1-DBUtils简介"><a href="#1-DBUtils简介" class="headerlink" title="1. DBUtils简介"></a>1. DBUtils简介</h5><p>DBUtils是java编程中的数据库操作实用工具，小巧简单实用，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.对于数据表的读操作，他可以把结果转换成List，Array，Set等java集合，便于程序员操作；</span><br><span class="line">2.对于数据表的写操作，也变得很简单（只需写sql语句）</span><br><span class="line">3.可以使用数据源，使用[JNDI](https://baike.baidu.com/item/JNDI)，[数据库连接池](https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0)等技术来优化性能--重用已经构建好的数据库连接对象，而不像php，asp那样，费时费力的不断重复的构建和析构这样的对象</span><br></pre></td></tr></table></figure><p>DBUtils包括3个包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">org.apache.commons.dbutils</span><br><span class="line">org.apache.commons.dbutils.handlers</span><br><span class="line">org.apache.commons.dbutils.wrappers</span><br></pre></td></tr></table></figure><p>DBUtils封装了对JDBC的操作，简化了JDBC操作，可以少写代码。</p><p>org.apache.commons.dbutils</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">DbUtils 关闭链接等操作</span><br><span class="line">QueryRunner 进行查询的操作</span><br><span class="line">org.apache.commons.dbutils.handlers</span><br><span class="line">ArrayHandler ：将ResultSet中第一行的数据转化成[对象数组]</span><br><span class="line">ArrayListHandler将ResultSet中所有的数据转化成List，List中存放的是Object[]</span><br><span class="line">BeanHandler ：将ResultSet中第一行的数据转化成类对象</span><br><span class="line">BeanListHandler ：将ResultSet中所有的数据转化成List，List中存放的是类对象</span><br><span class="line">ColumnListHandler ：将ResultSet中某一列的数据存成List，List中存放的是Object对象</span><br><span class="line">KeyedHandler ：将ResultSet中存成映射，key为某一列对应为Map。Map中存放的是数据</span><br><span class="line">MapHandler ：将ResultSet中第一行的数据存成Map映射</span><br><span class="line">MapListHandler ：将ResultSet中所有的数据存成List。List中存放的是Map</span><br><span class="line">ScalarHandler ：将ResultSet中一条记录的其中某一列的数据存成Object</span><br><span class="line">org.apache.commons.dbutils.wrappers</span><br><span class="line">SqlNullCheckedResultSet ：对ResultSet进行操作，改变里面的值</span><br><span class="line">StringTrimmedResultSet ：去除ResultSet中中字段的左右空格。Trim()</span><br></pre></td></tr></table></figure><p>主要方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DbUtils类：启动类</span><br><span class="line">ResultSetHandler接口：转换类型接口</span><br><span class="line">MapListHandler类：实现类，把记录转化成List</span><br><span class="line">BeanListHandler类：实现类，把记录转化成List，使记录为JavaBean类型的对象</span><br><span class="line">Query Runner类：执行SQL语句的类</span><br></pre></td></tr></table></figure><h5 id="2-DBUtils-C3P0工具类实现"><a href="#2-DBUtils-C3P0工具类实现" class="headerlink" title="2. DBUtils+C3P0工具类实现"></a>2. DBUtils+C3P0工具类实现</h5><p> <strong>项目准备</strong></p><ul><li>创建项目</li><li>导入jar包 工具类 配置文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dbutils.jar</span><br><span class="line">c3p0.jar</span><br><span class="line">jdbc.jar</span><br><span class="line">之前项目的info.properties</span><br><span class="line">c3p0工具类</span><br></pre></td></tr></table></figure><p><strong>实现代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DbutilDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *取了1条记录，并把数据封装成数组 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testArrayHandler</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(C3P0Util.getDataSource());</span><br><span class="line"></span><br><span class="line">Object[] res = qr.query(<span class="string">"select * from emp where empno=?"</span>, <span class="keyword">new</span> ArrayHandler(), <span class="number">7369</span>);</span><br><span class="line"><span class="keyword">for</span>(Object ob:res)&#123;</span><br><span class="line">System.out.println(ob);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 取1条记录。把当前记录的列名和列值放到一个Map中</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testMapHandler</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line"></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(C3P0Util.getDataSource());</span><br><span class="line"></span><br><span class="line">Map&lt;String,Object&gt; map= qr.query(<span class="string">"select * from emp where empno = ?"</span>, <span class="keyword">new</span> MapHandler(),<span class="number">7499</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(Object key:map.keySet())&#123;</span><br><span class="line">System.out.println(key+<span class="string">"===&gt;"</span>+map.get(key));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 取1条记录，封装成POJO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testBeanHandler</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line"></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(C3P0Util.getDataSource());</span><br><span class="line"></span><br><span class="line">Emp emp= qr.query(<span class="string">"select * from emp where empno = ?"</span>, <span class="keyword">new</span> BeanHandler&lt;&gt;(Emp.class),<span class="number">7369</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(emp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 取单行单列数据,即单个数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testScalarHandler</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line"></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(C3P0Util.getDataSource());</span><br><span class="line"></span><br><span class="line">String str= qr.query(<span class="string">"select * from emp where empno = ?"</span>, <span class="keyword">new</span> ScalarHandler&lt;&gt;(<span class="string">"ename"</span>),<span class="number">7499</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 取某一列数据封装到List中</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testColumnListHandler</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line"></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(C3P0Util.getDataSource());</span><br><span class="line"></span><br><span class="line">List&lt;Object&gt; res = qr.query(<span class="string">"select * from emp"</span>, <span class="keyword">new</span> ColumnListHandler&lt;&gt;(<span class="string">"ename"</span>));</span><br><span class="line"><span class="keyword">for</span>(Object ob:res)&#123;</span><br><span class="line">System.out.println(ob);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 取多条记录，把每条记录封装成数组，再把多个数组封装成List集合</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testArrayListHandler</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line"></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(C3P0Util.getDataSource());</span><br><span class="line"></span><br><span class="line">List&lt;Object[]&gt; res = qr.query(<span class="string">"select * from emp"</span>, <span class="keyword">new</span> ArrayListHandler());</span><br><span class="line"><span class="keyword">for</span>(Object[] ob:res)&#123;</span><br><span class="line">System.out.println(ob[<span class="number">0</span>]+<span class="string">","</span>+ob[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 取多条记录，每一条记录封装到一个Map中，再把这个Map封装到另外一个Map中，key为指定的字段值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testKeyedHandler</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line"></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(C3P0Util.getDataSource());</span><br><span class="line"></span><br><span class="line">Map&lt;Object,Map&lt;String,Object&gt;&gt; map= qr.query(<span class="string">"select * from emp"</span>, <span class="keyword">new</span> KeyedHandler&lt;&gt;(<span class="string">"empno"</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(Object key:map.keySet())&#123;</span><br><span class="line">System.out.println(key+<span class="string">"===&gt;"</span>+map.get(key));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 取多条记录。把每条记录封装到一个Map中，再把Map封装到List中</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testMapListHandler</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line"></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(C3P0Util.getDataSource());</span><br><span class="line"></span><br><span class="line">List&lt;Map&lt;String,Object&gt;&gt; list= qr.query(<span class="string">"select * from emp"</span>, <span class="keyword">new</span> MapListHandler());</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(Map&lt;String,Object&gt; map:list)&#123;</span><br><span class="line">System.out.println(map);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 查找多条记录，把每条记录封装成POJO,然后放入list集合中</span></span><br><span class="line"><span class="comment"> * [jdbc.Emp@69d9c55, jdbc.Emp@13a57a3b]</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testBeanListHandler</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line"></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(C3p0Util.findDataSource());</span><br><span class="line"></span><br><span class="line">List&lt;Emp&gt; list = qr.query(<span class="string">"select * from emp where empno = ?"</span>, <span class="keyword">new</span> BeanListHandler&lt;&gt;(Emp.class),<span class="number">7369</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(list);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 需支持主键自增，一般使用ScalarHandler处理</span></span><br><span class="line"><span class="comment"> * @throws SQLException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line"></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(C3p0Util.findDataSource());</span><br><span class="line"></span><br><span class="line">Long id = qr.insert(<span class="string">"insert into emp (ename,job) values(?,?)"</span>,<span class="keyword">new</span> ScalarHandler&lt;Long&gt;(),<span class="string">"张三"</span>,<span class="string">"CLERK"</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(id);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment"> * update</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line"></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(C3p0Util.findDataSource());</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num = qr.update(<span class="string">"update emp set ename=?,job=? where empno=?"</span>, <span class="string">"王五"</span>,<span class="string">"CLERK"</span>,<span class="number">8001</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(num);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/*</span></span><br><span class="line"><span class="comment"> * delete</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line"></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(C3p0Util.findDataSource());</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num = qr.update(<span class="string">"delete from emp where empno = ?"</span>,<span class="number">8001</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(num);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 通用方法execute</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line"></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(C3p0Util.findDataSource());</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num = qr.execute(<span class="string">"insert into emp (ename,job) values(?,?)"</span>, <span class="string">"李四"</span>,<span class="string">"CLERK"</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(num);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="作业题"><a href="#作业题" class="headerlink" title="作业题"></a>作业题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1、书的增删改查，使用数据库连接池C3p0和DbUtils改造之前的项目</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;数据库连接池和DBUtils使用&quot;&gt;&lt;a href=&quot;#数据库连接池和DBUtils使用&quot; class=&quot;headerlink&quot; title=&quot;数据库连接池和DBUtils使用&quot;&gt;&lt;/a&gt;数据库连接池和DBUtils使用&lt;/h3&gt;&lt;h4 id=&quot;今日内容&quot;&gt;&lt;a 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://kongxianghe.top/2018/10/23/Ajax%E6%8A%80%E6%9C%AF%E5%BA%94%E7%94%A8/"/>
    <id>http://kongxianghe.top/2018/10/23/Ajax技术应用/</id>
    <published>2018-10-23T14:06:03.400Z</published>
    <updated>2018-07-09T06:15:57.354Z</updated>
    
    <content type="html"><![CDATA[<h3 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h3><h4 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、什么是Ajax</span><br><span class="line">2、Ajax工作原理</span><br><span class="line">3、Ajax的使用</span><br><span class="line">4、Ajax的综合练习</span><br></pre></td></tr></table></figure><p>#### </p><h4 id="一-JSON概述"><a href="#一-JSON概述" class="headerlink" title="一. JSON概述"></a>一. JSON概述</h4><h5 id="1-1-什么是json"><a href="#1-1-什么是json" class="headerlink" title="1.1 什么是json"></a>1.1 什么是json</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JSON(JavaScript Object Notation, JS 对象标记) 是一种轻量级的数据交换格式。它基于 ECMAScript (w3c制定的js规范)的一个子集，采用完全独立于编程语言的文本格式来存储和表示数据。简洁和清晰的层次结构使得 JSON 成为理想的数据交换语言。 易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率。</span><br></pre></td></tr></table></figure><h5 id="1-2-json语法"><a href="#1-2-json语法" class="headerlink" title="1.2 json语法"></a>1.2 json语法</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[]  表示数组</span><br><span class="line"></span><br><span class="line">&#123;&#125;  表示对象</span><br><span class="line"></span><br><span class="line">&quot;&quot;  表示是属性名或字符串类型的值</span><br><span class="line"></span><br><span class="line">:   表示属性和值之间的间隔符</span><br><span class="line"></span><br><span class="line">,   表示多个属性的间隔符或者是多个元素的间隔符</span><br></pre></td></tr></table></figure><h4 id="二-JSON解析"><a href="#二-JSON解析" class="headerlink" title="二. JSON解析"></a>二. JSON解析</h4><p>要解析的字符串：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对象嵌套数组嵌套对象</span></span><br><span class="line">String json1=<span class="string">"&#123;'id':1,'name':'JAVAEE-1703','stus':[&#123;'id':101,'name':'刘一','age':16&#125;]&#125;"</span>;</span><br><span class="line"><span class="comment">//数组</span></span><br><span class="line">String json2=<span class="string">"['北京','天津','杭州']"</span>;</span><br></pre></td></tr></table></figure><p>初始的类：</p><p>Student.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(<span class="keyword">int</span> id, String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Student [id="</span> + id + <span class="string">", name="</span> + name + <span class="string">", age="</span> + age + <span class="string">"]"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Grade.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Grade</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;Student&gt; stus;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Grade</span><span class="params">(<span class="keyword">int</span> id, String name, ArrayList&lt;Student&gt; stus)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.stus = stus;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Grade</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Grade [id="</span> + id + <span class="string">", name="</span> + name + <span class="string">", stus="</span> + stus + <span class="string">"]"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ArrayList&lt;Student&gt; <span class="title">getStus</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> stus;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStus</span><span class="params">(ArrayList&lt;Student&gt; stus)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.stus = stus;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-1-原生解析"><a href="#2-1-原生解析" class="headerlink" title="2.1 原生解析"></a>2.1 原生解析</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JSONTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//解析JSON</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> <span class="keyword">throws</span> JSONException</span>&#123;</span><br><span class="line">        <span class="comment">//对象嵌套数组嵌套对象</span></span><br><span class="line">        String json1=<span class="string">"&#123;'id':1,'name':'JAVAEE-1703','stus':[&#123;'id':101,'name':'刘一','age':16&#125;]&#125;"</span>;</span><br><span class="line">        <span class="comment">//数组</span></span><br><span class="line">        String json2=<span class="string">"['北京','天津','杭州']"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1、</span></span><br><span class="line">        <span class="comment">//解析第一层---对象</span></span><br><span class="line">        JSONObject jObject1=<span class="keyword">new</span> JSONObject(json1);</span><br><span class="line">        </span><br><span class="line">        Grade grade=<span class="keyword">new</span> Grade();</span><br><span class="line">        grade.setId(jObject1.getInt(<span class="string">"id"</span>));</span><br><span class="line">        grade.setName(jObject1.getString(<span class="string">"name"</span>));</span><br><span class="line">        ArrayList&lt;Student&gt; stus=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        grade.setStus(stus);</span><br><span class="line">        <span class="comment">//解析第二层----数组</span></span><br><span class="line">        JSONArray jsonArray2=jObject1.getJSONArray(<span class="string">"stus"</span>);</span><br><span class="line">        <span class="comment">//遍历数组获取元素----对象</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;jsonArray2.length();i++)&#123;</span><br><span class="line">            <span class="comment">//解析第三层----对象</span></span><br><span class="line">            JSONObject jObject3=jsonArray2.getJSONObject(i);</span><br><span class="line">            Student student=<span class="keyword">new</span> Student(jObject3.getInt(<span class="string">"id"</span>), jObject3.getString(<span class="string">"name"</span>), jObject3.getInt(<span class="string">"age"</span>));</span><br><span class="line">            grade.getStus().add(student);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(grade);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2、</span></span><br><span class="line">        <span class="comment">//获取数组对象</span></span><br><span class="line">        JSONArray jArray=<span class="keyword">new</span> JSONArray(json2);</span><br><span class="line">        ArrayList&lt;String&gt; list=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//遍历获取元素</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;jArray.length();i++)&#123;</span><br><span class="line">            <span class="comment">//jArray.optString(i);//等价于getXXX</span></span><br><span class="line">            list.add(jArray.getString(i));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"解析结果："</span>+list);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//生成JSON</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> <span class="keyword">throws</span> JSONException</span>&#123;</span><br><span class="line">        JSONObject jo1=<span class="keyword">new</span> JSONObject();</span><br><span class="line">        jo1.put(<span class="string">"id"</span>, <span class="number">1001</span>);</span><br><span class="line">        jo1.put(<span class="string">"name"</span>, <span class="string">"范老"</span>);</span><br><span class="line">        jo1.put(<span class="string">"age"</span>, <span class="number">20</span>);</span><br><span class="line">        JSONObject jo2=<span class="keyword">new</span> JSONObject();</span><br><span class="line">        jo2.put(<span class="string">"id"</span>, <span class="number">1002</span>);</span><br><span class="line">        jo2.put(<span class="string">"name"</span>, <span class="string">"平平"</span>);</span><br><span class="line">        jo2.put(<span class="string">"age"</span>, <span class="number">19</span>);</span><br><span class="line">        JSONArray ja2=<span class="keyword">new</span> JSONArray();</span><br><span class="line">        ja2.put(jo1);</span><br><span class="line">        ja2.put(jo2);</span><br><span class="line">        JSONObject jo3=<span class="keyword">new</span> JSONObject();</span><br><span class="line">        jo3.put(<span class="string">"id"</span>, <span class="number">11</span>);</span><br><span class="line">        jo3.put(<span class="string">"name"</span>, <span class="string">"JAVAEE-1704"</span>);</span><br><span class="line">        jo3.put(<span class="string">"stus"</span>,ja2);        </span><br><span class="line">        String json=jo3.toString();</span><br><span class="line">        System.out.println(json);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-2-FASTJSON解析"><a href="#2-2-FASTJSON解析" class="headerlink" title="2.2 FASTJSON解析"></a>2.2 FASTJSON解析</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">需要jar包：</span><br><span class="line">fastjson.jar</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FASTJson</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">String json=<span class="string">"&#123;'id':1,'name':'JAVAEE-1703','stus':[&#123;'id':101,'name':'刘一','age':16&#125;]&#125;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.把Json字符串转化成java对像</span></span><br><span class="line">Grade grade = JSON.parseObject(json, Grade.class);</span><br><span class="line"></span><br><span class="line">System.out.println(grade.getName()+<span class="string">","</span>+grade.getStus().get(<span class="number">0</span>).getName());</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.把Json字符串式数组解析成java集合</span></span><br><span class="line">String json2 = <span class="string">"['北京','天津','杭州']"</span>;</span><br><span class="line"></span><br><span class="line">List&lt;String&gt; list = JSON.parseArray(json2,String.class);</span><br><span class="line"></span><br><span class="line">System.out.println(list);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.把Java对像或集合转化为JSON字符串</span></span><br><span class="line">Student stu = <span class="keyword">new</span> Student();</span><br><span class="line">stu.setId(<span class="number">1</span>);</span><br><span class="line">stu.setName(<span class="string">"jack"</span>);</span><br><span class="line">stu.setAge(<span class="number">30</span>);</span><br><span class="line">Student stu2 = <span class="keyword">new</span> Student();</span><br><span class="line">stu2.setId(<span class="number">2</span>);</span><br><span class="line">stu2.setName(<span class="string">"tom"</span>);</span><br><span class="line">stu2.setAge(<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">List&lt;Student&gt; stus = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">stus.add(stu);</span><br><span class="line">stus.add(stu2); </span><br><span class="line"></span><br><span class="line">String jsonStr = JSON.toJSONString(stus);</span><br><span class="line">System.out.println(jsonStr);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-3-Jackson解析"><a href="#2-3-Jackson解析" class="headerlink" title="2.3 Jackson解析"></a>2.3 Jackson解析</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">需要jar包:</span><br><span class="line">jackson-lib</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JackSonTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 只支持双引号形式json</span></span><br><span class="line">String json = <span class="string">"&#123;\"id\":1,\"name\":\"JAVAEE-1703\",</span></span><br><span class="line"><span class="string">            \"stus\":[&#123;\"id\":101,\"name\":\"刘一\",\"age\":16&#125;]&#125;"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.json字符串转化为java对像</span></span><br><span class="line">ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">Grade grade = mapper.readValue(json, Grade.class);</span><br><span class="line">System.out.println(grade);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">String json2 = <span class="string">"[\"北京\",\"天津\",\"杭州\"]"</span>;</span><br><span class="line"><span class="comment">//2.Json字符串数组转化为List对像</span></span><br><span class="line">List&lt;String&gt; list = mapper.readValue(json2, <span class="keyword">new</span> TypeReference&lt;ArrayList&lt;String&gt;&gt;() &#123;&#125;);</span><br><span class="line">System.out.println(list);</span><br><span class="line"></span><br><span class="line">List&lt;String&gt; list2 = mapper.readValue(json2,List.class);</span><br><span class="line">System.out.println(list2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//3.将java对像转化为JSON字符串</span></span><br><span class="line">Student stu = <span class="keyword">new</span> Student();</span><br><span class="line">stu.setId(<span class="number">1</span>);</span><br><span class="line">stu.setName(<span class="string">"jack"</span>);</span><br><span class="line">stu.setAge(<span class="number">30</span>);</span><br><span class="line">Student stu2 = <span class="keyword">new</span> Student();</span><br><span class="line">stu2.setId(<span class="number">2</span>);</span><br><span class="line">stu2.setName(<span class="string">"tom"</span>);</span><br><span class="line">stu2.setAge(<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">List&lt;Student&gt; stus = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">stus.add(stu);</span><br><span class="line">stus.add(stu2); </span><br><span class="line"></span><br><span class="line">String jsonstr = mapper.writeValueAsString(stus);</span><br><span class="line">System.out.println(jsonstr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-4-net-sf-json解析"><a href="#2-4-net-sf-json解析" class="headerlink" title="2.4 net.sf.json解析"></a>2.4 net.sf.json解析</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">需要jar包</span><br><span class="line">commons-beanutils.jar</span><br><span class="line">commons-collections.jar</span><br><span class="line">commons-lang.jar</span><br><span class="line">commons-logging.jar</span><br><span class="line">ezmorph.jar</span><br><span class="line">json-lib.jar</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">public void testJson1()&#123;</span><br><span class="line"></span><br><span class="line">//json字符串</span><br><span class="line">String json1=&quot;&#123;&apos;id&apos;:1,&apos;name&apos;:&apos;JAVAEE-1703&apos;,</span><br><span class="line">  &apos;stus&apos;:[&#123;&apos;id&apos;:101,&apos;name&apos;:&apos;刘一&apos;,&apos;age&apos;:16&#125;]&#125;&quot;;</span><br><span class="line">//java对像</span><br><span class="line">Student stu = new Student();</span><br><span class="line">stu.setId(1);</span><br><span class="line">stu.setName(&quot;jack&quot;);</span><br><span class="line">stu.setAge(30);</span><br><span class="line">Student stu2 = new Student();</span><br><span class="line">stu2.setId(2);</span><br><span class="line">stu2.setName(&quot;tom&quot;);</span><br><span class="line">stu2.setAge(30);</span><br><span class="line">//java数组</span><br><span class="line">List&lt;Student&gt; list = new ArrayList&lt;&gt;();</span><br><span class="line">list.add(stu);</span><br><span class="line">list.add(stu2); </span><br><span class="line"></span><br><span class="line">//1.json格式的字符串转化为JSON对像</span><br><span class="line">JSONObject jo1 = JSONObject.fromObject(json1);</span><br><span class="line">System.out.println(jo1.toString());</span><br><span class="line"></span><br><span class="line">//2.java对像转化为JSON对像</span><br><span class="line">JSONObject jo2 = JSONObject.fromObject(stu);</span><br><span class="line">System.out.println(jo2.toString());</span><br><span class="line"></span><br><span class="line">//3.java集合转化为JSON数组</span><br><span class="line">JSONArray ja = JSONArray.fromObject(list);</span><br><span class="line">System.out.println(ja.toString());</span><br><span class="line"></span><br><span class="line">//4.把JSON对像转化为java对像</span><br><span class="line">Student mystu = (Student) JSONObject.toBean(jo2,Student.class);</span><br><span class="line">System.out.println(mystu);</span><br><span class="line"></span><br><span class="line">//如果普通json中有数组这种复杂结构，需要构建map，交待数组将要转化成的类型</span><br><span class="line">Map&lt;String,Class&gt; map = new HashMap&lt;&gt;();</span><br><span class="line">map.put(&quot;stus&quot;, Student.class);</span><br><span class="line">Grade grade = (Grade) JSONObject.toBean(jo1,Grade.class,map);</span><br><span class="line">System.out.println(grade.getStus().get(0).getName());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//5.把JSON数组转化为java集合</span><br><span class="line">List&lt;Student&gt; mylist = (List&lt;Student&gt;) JSONArray.toList(ja,Student.class);</span><br><span class="line">System.out.println(mylist);</span><br><span class="line"></span><br><span class="line">//6.把JSON数组转化为java数组</span><br><span class="line">Student[] stus = (Student[]) JSONArray.toArray(ja,Student.class);</span><br><span class="line">System.out.println(Arrays.toString(stus));</span><br><span class="line"></span><br><span class="line">//7.把java键值对，解析成JSON对像</span><br><span class="line">JSONObject jobj = new JSONObject();</span><br><span class="line">jobj.put(&quot;name&quot;, &quot;jack&quot;);</span><br><span class="line">jobj.put(&quot;age&quot;, 30);</span><br><span class="line">System.out.println(jobj.toString());</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AJAX 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。</p><h4 id="三-Ajax概述"><a href="#三-Ajax概述" class="headerlink" title="三. Ajax概述"></a>三. Ajax概述</h4><h5 id="3-1-什么是AJAX"><a href="#3-1-什么是AJAX" class="headerlink" title="3.1 什么是AJAX"></a>3.1 什么是AJAX</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">AJAX = Async JavaScript And XML。</span><br><span class="line">AJAX 是一种用于创建快速动态网页的技术。</span><br><span class="line">通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。</span><br><span class="line">传统的网页（不使用 AJAX）如果需要更新内容，必需重载整个网页面。</span><br><span class="line">有很多使用 AJAX 的应用程序案例：新浪微博、Google 地图、开心网等等。</span><br></pre></td></tr></table></figure><h5 id="3-2-AJAX工作原理"><a href="#3-2-AJAX工作原理" class="headerlink" title="3.2 AJAX工作原理"></a>3.2 AJAX工作原理</h5><p><img src="img\img1.png" alt="img1"></p><p>AJAX是基于现有的Internet标准，并且联合使用它们：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- XMLHttpRequest 对象 (异步的与服务器交换数据)</span><br><span class="line">- JavaScript/DOM (信息显示/交互)</span><br><span class="line">- CSS (给数据定义样式)</span><br><span class="line">- XML (作为转换数据的格式)</span><br></pre></td></tr></table></figure><h5 id="3-3-AJAX实例"><a href="#3-3-AJAX实例" class="headerlink" title="3.3 AJAX实例"></a>3.3 AJAX实例</h5><p>html代码，上面的 AJAX 应用程序包含一个 div 和一个按钮。</p><p>div 部分用于显示来自服务器的信息。当按钮被点击时，它负责调用名为 loadXMLDoc() 的函数：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myDiv"</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span>使用 AJAX 修改该文本内容<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">onclick</span>=<span class="string">"loadXMLDoc()"</span>&gt;</span>修改内容<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接下来，在页面的 head 部分添加一个 <script> 标签。该标签中包含了这个 loadXMLDoc() 函数：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">function loadXMLDoc()</span></span><br><span class="line"><span class="undefined">&#123;</span></span><br><span class="line"><span class="undefined">    .... AJAX 脚本执行 ...</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-4-创建XMLHttpRequest对象"><a href="#3-4-创建XMLHttpRequest对象" class="headerlink" title="3.4 创建XMLHttpRequest对象"></a>3.4 创建XMLHttpRequest对象</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">XMLHttpRequest对象是AJAX的基础。</span><br><span class="line">所有现代浏览器均支持 XMLHttpRequest 对象（IE5 和 IE6 使用 ActiveXObject）。</span><br><span class="line">XMLHttpRequest 用于在后台与服务器交换数据。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。</span><br></pre></td></tr></table></figure><p>所有现代浏览器（IE7+、Firefox、Chrome、Safari 以及 Opera）均内建 XMLHttpRequest 对象。创建 XMLHttpRequest 对象的语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xmlhttp=<span class="keyword">new</span> XMLHttpRequest();</span><br></pre></td></tr></table></figure><p>老版本的 Internet Explorer （IE5 和 IE6）使用 ActiveX 对象：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xmlhttp=<span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</span><br></pre></td></tr></table></figure><p>为了应对所有的现代浏览器，包括 IE5 和 IE6，请检查浏览器是否支持 XMLHttpRequest 对象。如果支持，则创建 XMLHttpRequest 对象。如果不支持，则创建 ActiveXObject ：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xmlhttp;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//  IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码</span></span><br><span class="line">    xmlhttp=<span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// IE6, IE5 浏览器执行代码</span></span><br><span class="line">    xmlhttp=<span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-5-XMLHttpRequest请求"><a href="#3-5-XMLHttpRequest请求" class="headerlink" title="3.5 XMLHttpRequest请求"></a>3.5 XMLHttpRequest请求</h5><p>如需将请求发送到服务器，我们使用 XMLHttpRequest 对象的 open() 和 send() 方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"ajax_info.txt"</span>,<span class="literal">true</span>);</span><br><span class="line">xmlhttp.send();</span><br></pre></td></tr></table></figure><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>open(<em>method</em>,<em>url</em>,<em>async</em>)</td><td>规定请求的类型、URL 以及是否异步处理请求。<em>method</em>：请求的类型；GET 或 POST<em>url</em>：文件在服务器上的位置<em>async</em>：true（异步）或 false（同步）</td></tr><tr><td>send(<em>string</em>)</td><td>将请求发送到服务器。<em>string</em>：仅用于 POST 请求</td></tr></tbody></table><p><strong><em>GET 还是 POST？</em></strong></p><p>与 POST 相比，GET 更简单也更快，并且在大部分情况下都能用。</p><p>然而，在以下情况中，请使用 POST 请求：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 无法使用缓存文件（更新服务器上的文件或数据库）</span><br><span class="line">- 向服务器发送大量数据（POST 没有数据量限制）</span><br><span class="line">- 发送包含未知字符的用户输入时，POST 比 GET 更稳定也更可靠</span><br></pre></td></tr></table></figure><p><strong><em>GET 请求</em></strong></p><p>一个简单的 GET 请求：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"/try/ajax/demo_get.php"</span>,<span class="literal">true</span>);</span><br><span class="line">xmlhttp.send();</span><br></pre></td></tr></table></figure><p>在上面的例子中，您可能得到的是缓存的结果。</p><p>为了避免这种情况，请向 URL 添加一个唯一的 ID：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"/try/ajax/demo_get.php?t="</span> + <span class="built_in">Math</span>.random(),<span class="literal">true</span>);</span><br><span class="line">xmlhttp.send();</span><br></pre></td></tr></table></figure><p>如果您希望通过 GET 方法发送信息，请向 URL 添加信息：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"/try/ajax/demo_get2.php?fname=Henry&amp;lname=Ford"</span>,<span class="literal">true</span>);</span><br><span class="line">xmlhttp.send();</span><br></pre></td></tr></table></figure><p><strong><em>POST 请求</em></strong></p><p>一个简单 POST 请求：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp.open(<span class="string">"POST"</span>,<span class="string">"/try/ajax/demo_post.php"</span>,<span class="literal">true</span>);</span><br><span class="line">xmlhttp.send();</span><br></pre></td></tr></table></figure><p>如果需要像 HTML 表单那样 POST 数据，请使用 setRequestHeader() 来添加 HTTP 头。然后在 send() 方法中规定您希望发送的数据：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp.open(<span class="string">"POST"</span>,<span class="string">"/try/ajax/demo_post2.php"</span>,<span class="literal">true</span>);</span><br><span class="line">xmlhttp.setRequestHeader(<span class="string">"Content-type"</span>,<span class="string">"application/x-www-form-urlencoded"</span>);</span><br><span class="line">xmlhttp.send(<span class="string">"fname=Henry&amp;lname=Ford"</span>);</span><br></pre></td></tr></table></figure><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>setRequestHeader(<em>header,value</em>)</td><td>向请求添加 HTTP 头。<em>header</em>: 规定头的名称    <em>value</em>: 规定头的值</td></tr></tbody></table><p><strong><em>url - 服务器上的文件</em></strong></p><p>open() 方法的 <em>url</em> 参数是服务器上文件的地址：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"ajax_test.html"</span>,<span class="literal">true</span>);</span><br></pre></td></tr></table></figure><p>该文件可以是任何类型的文件，比如 .txt 和 .xml，或者服务器脚本文件，比如 .asp 和 .php （在传回响应之前，能够在服务器上执行任务）。</p><p><strong><em>异步 - True 或 False</em></strong></p><p>AJAX 指的是异步 JavaScript 和 XML（Asynchronous JavaScript and XML）。<br>XMLHttpRequest 对象如果要用于 AJAX 的话，其 open() 方法的 async 参数必须设置为 true：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"ajax_test.html"</span>,<span class="literal">true</span>);</span><br></pre></td></tr></table></figure><p>对于 web 开发人员来说，发送异步请求是一个巨大的进步。很多在服务器执行的任务都相当费时。AJAX 出现之前，这可能会引起应用程序挂起或停止。</p><p>==通过 AJAX，JavaScript 无需等待服务器的响应，而是：==</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- 在等待服务器响应时执行其他脚本</span><br><span class="line">- 当响应就绪后对响应进行处理</span><br></pre></td></tr></table></figure><p><strong>Async=true</strong></p><p>当使用 async=true 时，请规定在响应处于 onreadystatechange 事件中的就绪状态时执行的函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (xmlhttp.readyState==<span class="number">4</span> &amp;&amp; xmlhttp.status==<span class="number">200</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"myDiv"</span>).innerHTML=xmlhttp.responseText;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"/try/ajax/ajax_info.txt"</span>,<span class="literal">true</span>);</span><br><span class="line">xmlhttp.send();</span><br></pre></td></tr></table></figure><p><strong>Async=false</strong></p><p>如需使用 async=false，请将 open() 方法中的第三个参数改为 false：</p><p>我们不推荐使用 async=false，但是对于一些小型的请求，也是可以的。</p><p>请记住，JavaScript 会等到服务器响应就绪才继续执行。如果服务器繁忙或缓慢，应用程序会挂起或停止。</p><p><strong>注意：</strong>当您使用 async=false 时，请不要编写 onreadystatechange 函数 - 把代码放到 send() 语句后面即可：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"/try/ajax/ajax_info.txt"</span>,<span class="literal">false</span>);</span><br><span class="line">xmlhttp.send();</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"myDiv"</span>).innerHTML=xmlhttp.responseText;</span><br></pre></td></tr></table></figure><h5 id="3-6-XMLHttpRequest响应"><a href="#3-6-XMLHttpRequest响应" class="headerlink" title="3.6 XMLHttpRequest响应"></a>3.6 XMLHttpRequest响应</h5><p><strong><em>服务器响应</em></strong></p><p>如需获得来自服务器的响应，请使用 XMLHttpRequest 对象的 responseText 或 responseXML 属性。</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>responseText</td><td>获得字符串形式的响应数据。</td></tr><tr><td>responseXML</td><td>获得 XML 形式的响应数据。</td></tr></tbody></table><p><strong><em>responseText 属性</em></strong></p><p>如果来自服务器的响应并非 XML，请使用 responseText 属性。</p><p>responseText 属性返回字符串形式的响应，因此您可以这样使用：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"myDiv"</span>).innerHTML=xmlhttp.responseText;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">如果服务器响应的是Json字符串，一定是如下格式：</span></span><br><span class="line"><span class="comment">"｛\"username\":\"admin\",\"password\":1234｝"</span></span><br><span class="line"><span class="comment">即，键必须使用双引号引起，这样在JS中才可以转到Json对像。</span></span><br><span class="line"><span class="comment">js中使用如下方法，可以实现json字符串和json对像的互相转化</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">JSON.stringify(jsonObj)把json对像转化为json字符串</span></span><br><span class="line"><span class="comment">JSON.parse();把json字符串转化为json对像</span></span><br><span class="line"><span class="comment">str.parseJSON(); 把json字符串转化为json对像</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><strong><em>responseXML 属性</em></strong></p><p>如果来自服务器的响应是 XML，而且需要作为 XML 对象进行解析，请使用 responseXML 属性：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">xmlDoc=xmlhttp.responseXML;</span><br><span class="line">txt=<span class="string">""</span>;</span><br><span class="line">x=xmlDoc.getElementsByTagName(<span class="string">"ARTIST"</span>);</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;x.length;i++)</span><br><span class="line">&#123;</span><br><span class="line">    txt=txt + x[i].childNodes[<span class="number">0</span>].nodeValue + <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"myDiv"</span>).innerHTML=txt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">通过JS获取文档中的标签对像</span></span><br><span class="line"><span class="comment">//方法</span></span><br><span class="line"><span class="comment">document.getElementById();</span></span><br><span class="line"><span class="comment">document.getElementsByTagName();</span></span><br><span class="line"><span class="comment">document.getElementsByName();</span></span><br><span class="line"><span class="comment">document.getElementsByClasName();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">//属性</span></span><br><span class="line"><span class="comment">node.childNodes 一组子结点</span></span><br><span class="line"><span class="comment">node.parentNode 获取父接点</span></span><br><span class="line"><span class="comment">node.previousSibling 获取上一个兄弟结点</span></span><br><span class="line"><span class="comment">node.nextSibling 获取下一个兄弟结点</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h5 id="3-7-readyState"><a href="#3-7-readyState" class="headerlink" title="3.7 readyState"></a>3.7 readyState</h5><p><strong><em>onreadystatechange 事件</em></strong></p><p>当请求被发送到服务器时，我们需要执行一些基于响应的任务。<br>每当 readyState 改变时，就会触发 onreadystatechange 事件。<br>readyState 属性存有 XMLHttpRequest 的状态信息。<br>下面是 XMLHttpRequest 对象的三个重要的属性：</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>onreadystatechange</td><td>存储函数（或函数名），每当 readyState 属性改变时，就会调用该函数。</td></tr><tr><td>readyState</td><td>存有 XMLHttpRequest 的状态。从 0 到 4 发生变化。0: 请求未初始化1: 服务器连接已建立2: 请求已接收3: 请求处理中4: 请求已完成，且响应已就绪</td></tr><tr><td>status</td><td>200: “OK”404: 未找到页面</td></tr></tbody></table><p>在 onreadystatechange 事件中，我们规定当服务器响应已做好被处理的准备时所执行的任务。</p><p>当 readyState 等于 4 且状态为 200 时，表示响应已就绪：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (xmlhttp.readyState==<span class="number">4</span> &amp;&amp; xmlhttp.status==<span class="number">200</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"myDiv"</span>).innerHTML=xmlhttp.responseText;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>==onreadystatechange 事件被触发 5 次（0 - 4），对应着 readyState 的每个变化。==</p><p><strong><em>使用回调函数</em></strong></p><p>回调函数是一种以参数形式传递给另一个函数的函数。<br>如果您的网站上存在多个 AJAX 任务，那么您应该为创建 XMLHttpRequest 对象编写一个<em>标准</em>的函数，并为每个 AJAX 任务调用该函数。<br>该函数调用应该包含 URL 以及发生 onreadystatechange 事件时执行的任务（每次调用可能不尽相同）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    loadXMLDoc(<span class="string">"/try/ajax/ajax_info.txt"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (xmlhttp.readyState==<span class="number">4</span> &amp;&amp; xmlhttp.status==<span class="number">200</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">"myDiv"</span>).innerHTML=xmlhttp.responseText;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>else</em>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">100——客户必须继续发出请求</span><br><span class="line"></span><br><span class="line">101——客户要求服务器根据请求转换HTTP协议版本</span><br><span class="line"></span><br><span class="line">200——交易成功</span><br><span class="line"></span><br><span class="line">201——提示知道新文件的URL</span><br><span class="line"></span><br><span class="line">202——接受和处理、但处理未完成</span><br><span class="line"></span><br><span class="line">203——返回信息不确定或不完整</span><br><span class="line"></span><br><span class="line">204——请求收到，但返回信息为空</span><br><span class="line"></span><br><span class="line">205——服务器完成了请求，用户代理必须复位当前已经浏览过的文件</span><br><span class="line"></span><br><span class="line">206——服务器已经完成了部分用户的GET请求</span><br><span class="line"></span><br><span class="line">300——请求的资源可在多处得到</span><br><span class="line"></span><br><span class="line">301——删除请求数据</span><br><span class="line"></span><br><span class="line">302——在其他地址发现了请求数据</span><br><span class="line"></span><br><span class="line">303——建议客户访问其他URL或访问方式</span><br><span class="line"></span><br><span class="line">304——客户端已经执行了GET，但文件未变化</span><br><span class="line"></span><br><span class="line">305——请求的资源必须从服务器指定的地址得到</span><br><span class="line"></span><br><span class="line">306——前一版本HTTP中使用的代码，现行版本中不再使用</span><br><span class="line"></span><br><span class="line">307——申明请求的资源临时性删除</span><br><span class="line"></span><br><span class="line">400——错误请求，如语法错误</span><br><span class="line"></span><br><span class="line">401——请求授权失败</span><br><span class="line"></span><br><span class="line">402——保留有效ChargeTo头响应</span><br><span class="line"></span><br><span class="line">403——请求不允许</span><br><span class="line"></span><br><span class="line">404——没有发现文件、查询或URl</span><br><span class="line"></span><br><span class="line">405——用户在Request-Line字段定义的方法不允许</span><br><span class="line"></span><br><span class="line">406——根据用户发送的Accept拖，请求资源不可访问</span><br><span class="line"></span><br><span class="line">407——类似401，用户必须首先在代理服务器上得到授权</span><br><span class="line"></span><br><span class="line">408——客户端没有在用户指定的饿时间内完成请求</span><br><span class="line"></span><br><span class="line">409——对当前资源状态，请求不能完成</span><br><span class="line"></span><br><span class="line">410——服务器上不再有此资源且无进一步的参考地址</span><br><span class="line"></span><br><span class="line">411——服务器拒绝用户定义的Content-Length属性请求</span><br><span class="line"></span><br><span class="line">412——一个或多个请求头字段在当前请求中错误</span><br><span class="line"></span><br><span class="line">413——请求的资源大于服务器允许的大小</span><br><span class="line"></span><br><span class="line">414——请求的资源URL长于服务器允许的长度</span><br><span class="line"></span><br><span class="line">415——请求资源不支持请求项目格式</span><br><span class="line"></span><br><span class="line">416——请求中包含Range请求头字段，在当前请求资源范围内没有range指示值，请求也不包含If-Range请求头字段</span><br><span class="line"></span><br><span class="line">417——服务器不满足请求Expect头字段指定的期望值，如果是代理服务器，可能是下一级服务器不能满足请求</span><br><span class="line"></span><br><span class="line">500——服务器产生内部错误</span><br><span class="line"></span><br><span class="line">501——服务器不支持请求的函数</span><br><span class="line"></span><br><span class="line">502——服务器暂时不可用，有时是为了防止发生系统过载</span><br><span class="line"></span><br><span class="line">503——服务器过载或暂停维修</span><br><span class="line"></span><br><span class="line">504——关口过载，服务器使用另一个关口或服务来响应用户，等待时间设定值较长</span><br><span class="line"></span><br><span class="line">505——服务器不支持或拒绝支请求头中指定的HTTP版本</span><br></pre></td></tr></table></figure><h4 id="第四章-Ajax的使用"><a href="#第四章-Ajax的使用" class="headerlink" title="第四章 Ajax的使用"></a>第四章 Ajax的使用</h4><h5 id="4-1-Ajax与服务器交互"><a href="#4-1-Ajax与服务器交互" class="headerlink" title="4.1 Ajax与服务器交互"></a>4.1 Ajax与服务器交互</h5><ul><li><p>模拟登陆验证</p><blockquote><p>验证用户是否可以注册!利用ajax技术!进行动态验证</p></blockquote><p>1.编写注册页面</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">import</span>=<span class="string">"java.util.*"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">path</span> = <span class="string">request.getContextPath();</span></span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">basePath</span> = <span class="string">request.getScheme()+</span>"<span class="attr">:</span>//"+<span class="attr">request.getServerName</span>()+"<span class="attr">:</span>"+<span class="attr">request.getServerPort</span>()+<span class="attr">path</span>+"/";</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">"&lt;%=basePath%&gt;"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>My JSP 'index.jsp' starting page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"cache-control"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"expires"</span> <span class="attr">content</span>=<span class="string">"0"</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"keyword1,keyword2,keyword3"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"This is my page"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"./ajax.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">&lt;link rel="stylesheet" type="text/css" href="styles.css"&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span> <span class="attr">size</span>=<span class="string">"7"</span>&gt;</span>qq注册页面<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">onkeyup</span>=<span class="string">"kp(this)"</span> /&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"sp"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">   </span></span><br><span class="line"><span class="javascript">   <span class="comment">//当用户名输入框输入内容就调用此方法</span></span></span><br><span class="line"><span class="javascript">   <span class="function"><span class="keyword">function</span> <span class="title">kp</span>(<span class="params">ipt</span>)</span>&#123;</span></span><br><span class="line"><span class="undefined">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">//1.获取input输入框的value</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> value = ipt.value;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//2.进行验证</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span>(value != <span class="literal">null</span> &amp;&amp; value !=<span class="string">""</span>)&#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">//1-5</span></span></span><br><span class="line"><span class="javascript">          <span class="comment">//1.创建Ajax</span></span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> xmlhttp = getAjax();</span></span><br><span class="line"><span class="undefined">          </span></span><br><span class="line"><span class="javascript">          <span class="comment">//2.设置状态改变监听</span></span></span><br><span class="line"><span class="javascript">          xmlhttp.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="undefined">          </span></span><br><span class="line"><span class="javascript">          <span class="comment">//5获取响应数据</span></span></span><br><span class="line"><span class="javascript">          <span class="keyword">if</span>(xmlhttp.readyState == <span class="number">4</span> &amp;&amp; xmlhttp.status ==<span class="number">200</span>)</span></span><br><span class="line"><span class="undefined">          &#123;</span></span><br><span class="line"><span class="undefined">          </span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> result = xmlhttp.responseText; <span class="comment">//获取结果</span></span></span><br><span class="line"><span class="undefined">          </span></span><br><span class="line"><span class="javascript">          <span class="comment">//  1 行    2 不行</span></span></span><br><span class="line"><span class="undefined">          </span></span><br><span class="line"><span class="javascript">          <span class="comment">//1.找到span标签</span></span></span><br><span class="line"><span class="undefined">          </span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> sp = <span class="built_in">document</span>.getElementById(<span class="string">"sp"</span>);</span></span><br><span class="line"><span class="undefined">          </span></span><br><span class="line"><span class="javascript">          <span class="keyword">if</span>(result == <span class="string">"1"</span>)&#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">//成功的 span 提示一句绿色的话</span></span></span><br><span class="line"><span class="javascript">          sp.innerHTML=<span class="string">""</span>; <span class="comment">//清空</span></span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> ft = <span class="built_in">document</span>.createElement(<span class="string">"font"</span>);</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> fttext = <span class="built_in">document</span>.createTextNode(<span class="string">"恭喜您!可以注册!!"</span>); <span class="comment">//文本标签</span></span></span><br><span class="line"><span class="javascript">          ft.setAttribute(<span class="string">"color"</span>, <span class="string">"green"</span>);</span></span><br><span class="line"><span class="undefined">          ft.appendChild(fttext);</span></span><br><span class="line"><span class="undefined">          sp.appendChild(ft);  </span></span><br><span class="line"><span class="javascript">          &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">//失败的 span 提示一句红色的话</span></span></span><br><span class="line"><span class="javascript">          sp.innerText=<span class="string">"用户已经被注册!"</span>;</span></span><br><span class="line"><span class="javascript">          sp.style.color = <span class="string">"red"</span>;</span></span><br><span class="line"><span class="undefined">          &#125;</span></span><br><span class="line"><span class="undefined">          &#125;</span></span><br><span class="line"><span class="undefined">          </span></span><br><span class="line"><span class="undefined">          &#125;</span></span><br><span class="line"><span class="undefined">          </span></span><br><span class="line"><span class="javascript">          <span class="comment">//3.设置ajax method  url</span></span></span><br><span class="line"><span class="javascript">          xmlhttp.open(<span class="string">"POST"</span>,</span></span><br><span class="line"><span class="javascript">           <span class="string">"$&#123;pageContext.request.contextPath&#125;/servlet/DealServlet"</span>);</span></span><br><span class="line"><span class="undefined">            </span></span><br><span class="line"><span class="javascript">           <span class="comment">//4.发送请求</span></span></span><br><span class="line"><span class="javascript">           <span class="comment">//设置一个请求头</span></span></span><br><span class="line"><span class="javascript">           xmlhttp.setRequestHeader(<span class="string">"Content-type"</span>,<span class="string">"application/x-www-form-urlencoded"</span>);</span></span><br><span class="line"><span class="javascript">           xmlhttp.send(<span class="string">"value="</span>+value);</span></span><br><span class="line"><span class="undefined">      </span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">   &#125;</span></span><br><span class="line"><span class="undefined">   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="4-2-编写Ajax处理servlet"><a href="#4-2-编写Ajax处理servlet" class="headerlink" title="4.2 编写Ajax处理servlet"></a>4.2 编写Ajax处理servlet</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DealServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">//0.设置编码格式</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">    response.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);</span><br><span class="line"><span class="comment">//1.</span></span><br><span class="line">    String value = request.getParameter(<span class="string">"value"</span>);</span><br><span class="line"><span class="comment">//2.</span></span><br><span class="line">    String  result = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (value.equals(<span class="string">"root"</span>) | value.equals(<span class="string">"admin"</span>)) &#123;</span><br><span class="line">   result = <span class="string">"2"</span>;</span><br><span class="line">   <span class="comment">//代表已经存在</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//可以注册</span></span><br><span class="line">result = <span class="string">"1"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3.</span></span><br><span class="line">response.getWriter().write(result);   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="作业题"><a href="#作业题" class="headerlink" title="作业题"></a>作业题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">1、使用Ajax实现进行数据的异步提交和结果回显</span><br><span class="line">2、请完成下列数据的解析</span><br><span class="line">&#123;</span><br><span class="line">    &quot;state&quot;: &quot;success&quot;,</span><br><span class="line">    &quot;code&quot;: &quot;0&quot;,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;acc&quot;: 100,</span><br><span class="line">        &quot;city&quot;: &quot;北京市&quot;,</span><br><span class="line">        &quot;dist&quot;: &quot;通州区&quot;,</span><br><span class="line">        &quot;addr&quot;: &quot;北京市通州区永乐店镇北京金篮子生态种植有限公司&quot;,</span><br><span class="line">        &quot;prov&quot;: &quot;北京市&quot;,</span><br><span class="line">        &quot;lon&quot;: 116.82106018,</span><br><span class="line">        &quot;number&quot;: &quot;13&quot;,</span><br><span class="line">        &quot;town&quot;: &quot;永乐店镇&quot;,</span><br><span class="line">        &quot;street&quot;: &quot;永乐大街&quot;,</span><br><span class="line">        &quot;lat&quot;: 39.69581985</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">3、请完成下列数据的解析并添加到数据库</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    error_code: 0,</span><br><span class="line">    reason: &quot;查询成功&quot;,</span><br><span class="line">    result: &#123;</span><br><span class="line">        count: 1,</span><br><span class="line">        items: [</span><br><span class="line">            &#123;</span><br><span class="line">                company: &quot;北京棱镜魔方科技有限公司&quot;,</span><br><span class="line">                product: &quot;企名片&quot;,</span><br><span class="line">                icon: &quot;http://img.798youxi.com/product/icon/logo_qmp.jpg&quot;,</span><br><span class="line">                gw_link: &quot;http://qimingpian.com/&quot;,</span><br><span class="line">                tags: &quot;企业画像|大数据分析&quot;,</span><br><span class="line">                miaoshu: &quot;企名片，企业结构化信息聚合平台，一站式解决企业推广难，了解企业难的问题，提高企业运行效率，同时帮助客户及时获取企业信息变化、为商业决策提供大数据支撑。&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></script></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;AJAX&quot;&gt;&lt;a href=&quot;#AJAX&quot; class=&quot;headerlink&quot; title=&quot;AJAX&quot;&gt;&lt;/a&gt;AJAX&lt;/h3&gt;&lt;h4 id=&quot;今日内容&quot;&gt;&lt;a href=&quot;#今日内容&quot; class=&quot;headerlink&quot; title=&quot;今日内容&quot;&gt;&lt;/a
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://kongxianghe.top/2018/10/23/jQuery/"/>
    <id>http://kongxianghe.top/2018/10/23/jQuery/</id>
    <published>2018-10-23T14:06:03.376Z</published>
    <updated>2018-07-09T06:15:58.474Z</updated>
    
    <content type="html"><![CDATA[<h3 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h3><h4 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1、什么是jQuery</span><br><span class="line">2、jQuery的使用</span><br><span class="line">3、jQuery的语法</span><br><span class="line">4、jQuery常用事件</span><br><span class="line">5、jQuery的效果</span><br><span class="line">6、jQuery对HTML的操作</span><br><span class="line">7、jQuery的遍历操作</span><br><span class="line">8、jQuery的Ajax操作</span><br></pre></td></tr></table></figure><h4 id="一-jQuery概述"><a href="#一-jQuery概述" class="headerlink" title="一.jQuery概述"></a>一.jQuery概述</h4><h5 id="1-1-jQuery简介"><a href="#1-1-jQuery简介" class="headerlink" title="1.1 jQuery简介"></a>1.1 jQuery简介</h5><p>jQuery是一个快速、简洁的JavaScript框架，是继Prototype之后又一个优秀的JavaScript代码库（<em>或JavaScript框架</em>）。==jQuery设计的宗旨是“write Less，Do More”==，即倡导写更少的代码，做更多的事情。它封装JavaScript常用的功能代码，提供一种简便的JavaScript设计模式，优化HTML文档操作、事件处理、动画设计和Ajax交互。</p><p>jQuery的核心特性可以总结为：具有独特的==链式语法==和短小清晰的多功能接口；具有高效灵活的css选择器，并且可对CSS选择器进行扩展；拥有便捷的插件扩展机制和丰富的插件。jQuery兼容各种主流浏览器，如IE 6.0+、FF 1.5+、Safari 2.0+、Opera 9.0+等。</p><h5 id="1-2-什么是jQuery？"><a href="#1-2-什么是jQuery？" class="headerlink" title="1.2 什么是jQuery？"></a>1.2 什么是jQuery？</h5><p>jQuery是一个JavaScript函数库。<br>jQuery是一个轻量级的”写的少，做的多”的JavaScript库。<br>jQuery库包含以下功能：</p><ul><li>HTML 元素选取</li><li>HTML 元素操作</li><li>CSS 操作</li><li>HTML 事件函数</li><li>JavaScript 特效和动画</li><li>HTML DOM 遍历和修改</li><li>AJAX</li><li>Utilities<h5 id="1-3-为什么要用jQuery"><a href="#1-3-为什么要用jQuery" class="headerlink" title="1.3 为什么要用jQuery"></a>1.3 为什么要用jQuery</h5>目前网络上有大量开源的 JS 框架, 但是 jQuery 是目前最流行的 JS 框架，而且提供了大量的扩展。<br>很多大公司都在使用 jQuery， 例如:</li><li>Google</li><li>Microsoft</li><li>IBM</li><li>Netflix<h4 id="二-jQuery安装"><a href="#二-jQuery安装" class="headerlink" title="二. jQuery安装"></a>二. jQuery安装</h4><h5 id="2-1-网页中添加-jQuery"><a href="#2-1-网页中添加-jQuery" class="headerlink" title="2.1 网页中添加 jQuery"></a>2.1 网页中添加 jQuery</h5></li></ul><p>可以通过多种方法在网页中添加 jQuery。 您可以使用以下方法：</p><ul><li>从 <a href="http://jquery.com/download/" target="_blank" rel="noopener">jquery.com</a> 下载 jQuery 库</li><li>从 CDN 中载入 jQuery, 如从 Google 中加载 jQuery<br>有两个版本的 jQuery 可供下载：</li><li>Production version - 用于实际的网站中，已被精简和压缩。</li><li>Development version - 用于测试和开发（未压缩，是可读的代码）<br>以上两个版本都可以从 <a href="http://jquery.com/download/" target="_blank" rel="noopener">jquery.com</a> 中下载。<br>jQuery 库是一个 JavaScript 文件，您可以使用 HTML 的 <script> 标签引用它：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery-1.10.2.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>当然你也可以使用其它网站的CDN：</p><h5 id="2-2-百度-CDN"><a href="#2-2-百度-CDN" class="headerlink" title="2.2 百度 CDN"></a>2.2 百度 CDN</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-3-新浪-CDN"><a href="#2-3-新浪-CDN" class="headerlink" title="2.3 新浪 CDN"></a>2.3 新浪 CDN</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://lib.sinaapp.com/js/jquery/2.0.2/jquery-2.0.2.min.js"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-4-Google-CDN"><a href="#2-4-Google-CDN" class="headerlink" title="2.4 Google CDN"></a>2.4 Google CDN</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-5-Microsoft-CDN"><a href="#2-5-Microsoft-CDN" class="headerlink" title="2.5 Microsoft CDN"></a>2.5 Microsoft CDN</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://ajax.htmlnetcdn.com/ajax/jQuery/jquery-1.10.2.min.js"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="三-jQuery语法"><a href="#三-jQuery语法" class="headerlink" title="三. jQuery语法"></a>三. jQuery语法</h4><p>Query 语法是通过选取 HTML 元素，并对选取的元素执行某些操作。</p><p>基础语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(selector).action()</span><br><span class="line">其中selector是选择器</span><br><span class="line">action()是动作，如函数，事件</span><br></pre></td></tr></table></figure><ul><li>美元符号定义 jQuery</li><li>选择符（selector）”查询”和”查找” HTML 元素</li><li>jQuery 的 action() 执行对元素的操作<br>实例:</li><li>$(this).hide() - 隐藏当前元素</li><li>$(“p”).hide() - 隐藏所有 <p> 元素</li><li>$(“p.test”).hide() - 隐藏所有 class=”test” 的 <p> 元素</li><li>$(“#test”).hide() - 隐藏所有 id=”test” 的元素<h5 id="3-1-jQuery选择器"><a href="#3-1-jQuery选择器" class="headerlink" title="3.1 jQuery选择器"></a>3.1 jQuery选择器</h5></li></ul><p>==以下是基本选择器==</p><p>######3.1.1 元素选择器<br>jQuery 元素选择器基于元素名选取元素。<br>在页面中选取所有 <p> 元素:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"p"</span>).hide();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>######3.1.2 id选择器<br>jQuery #id 选择器通过 HTML 元素的 id 属性选取指定的元素。<br>页面中元素的 id 应该是唯一的，所以您要在页面中选取唯一的元素需要通过 #id 选择器。<br>通过 id 选取元素语法如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#test"</span>).hide();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>######3.1.3 class选择器<br>jQuery 类选择器可以通过指定的 class 查找元素。<br>语法如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">".test"</span>).hide();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h5 id="3-2-jQuery事件"><a href="#3-2-jQuery事件" class="headerlink" title="3.2 jQuery事件"></a>3.2 jQuery事件</h5><h6 id="3-2-1-什么是事件？"><a href="#3-2-1-什么是事件？" class="headerlink" title="3.2.1 什么是事件？"></a>3.2.1 什么是事件？</h6><p>页面对不同访问者的响应叫做事件。<br>事件处理程序指的是当 HTML 中发生某些事件时所调用的方法。<br>实例：</p><ul><li>在元素上移动鼠标。</li><li>选取单选按钮</li><li>点击元素<br>在事件中经常使用术语”触发”（或”激发”）例如： “当您按下按键时触发 keypress 事件”。<br>常见 DOM 事件：<br>| 鼠标事件       | 键盘事件     | 表单事件   | 文档/窗口事件 |<br>| ———- | ——– | —— | ——- |<br>| click      | keypress | submit | load    |<br>| dblclick   | keydown  | change | resize  |<br>| mouseenter | keyup    | focus  | scroll  |<br>| mouseleave |          | blur   | unload  |<h6 id="3-2-2-jQuery-事件方法语法"><a href="#3-2-2-jQuery-事件方法语法" class="headerlink" title="3.2.2 jQuery 事件方法语法"></a>3.2.2 jQuery 事件方法语法</h6></li></ul><p>在 jQuery 中，大多数 DOM 事件都有一个等效的 jQuery 方法。<br>页面中指定一个点击事件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).click();</span><br></pre></td></tr></table></figure><p>下一步是定义什么时间触发事件。您可以通过一个事件函数实现：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//设置事件，执行你想要的动作</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>==也就是说，不传参数是点击，传参数是设置事件。即click事件中有function函数作为参数，即是设置事件==<br><strong>常用的 jQuery 事件方法</strong><br>==$(document).ready() 方法允许我们在文档完全加载完后执行函数。==该事件方法在 <a href="http://www.runoob.com/jquery/jquery-syntax.html">jQuery 语法</a> 章节中已经提到过。<br><strong><em>click()</em></strong><br>当按钮点击事件被触发时会调用一个函数。<br>该函数在用户点击 HTML 元素时执行。<br>在下面的实例中，当点击事件在某个 <p> 元素上触发时，隐藏当前的 <p> 元素：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="keyword">this</span>).hide();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p><strong><em>dblclick()</em></strong><br>当双击元素时，会发生 dblclick 事件。<br>dblclick() 方法触发 dblclick 事件，或规定当发生 dblclick 事件时运行的函数：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).dblclick(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="keyword">this</span>).hide();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p><strong><em>mouseenter()</em></strong><br>当鼠标指针穿过元素时，会发生 mouseenter 事件。<br>mouseenter() 方法触发 mouseenter 事件，或规定当发生 mouseenter 事件时运行的函数：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#p1"</span>).mouseenter(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">'您的鼠标移到了 id="p1" 的元素上!'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p><strong><em>mouseleave()</em></strong><br>当鼠标指针离开元素时，会发生 mouseleave 事件。<br>mouseleave() 方法触发 mouseleave 事件，或规定当发生 mouseleave 事件时运行的函数：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#p1"</span>).mouseleave(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">"再见，您的鼠标离开了该段落。"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p><strong><em>mousedown()</em></strong><br>当鼠标指针移动到元素上方，并按下鼠标按键时，会发生 mousedown 事件。<br>mousedown() 方法触发 mousedown 事件，或规定当发生 mousedown 事件时运行的函数：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#p1"</span>).mousedown(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">"鼠标在该段落上按下！"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p><strong><em>mouseup()</em></strong><br>当在元素上松开鼠标按钮时，会发生 mouseup 事件。<br>mouseup() 方法触发 mouseup 事件，或规定当发生 mouseup 事件时运行的函数：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#p1"</span>).mouseup(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">"鼠标在段落上松开。"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p><strong><em>hover()</em></strong><br>hover()方法用于模拟光标悬停事件。<br>当鼠标移动到元素上时，会触发指定的第一个函数(mouseenter);当鼠标移出这个元素时，会触发指定的第二个函数(mouseleave)。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#p1"</span>).hover(</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">"你进入了 p1!"</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">"拜拜! 现在你离开了 p1!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><p><strong><em>focus()</em></strong><br>当元素获得焦点时，发生 focus 事件。<br>当通过鼠标点击选中元素或通过 tab 键定位到元素时，该元素就会获得焦点。<br>focus() 方法触发 focus 事件，或规定当发生 focus 事件时运行的函数：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"input"</span>).focus(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="keyword">this</span>).css(<span class="string">"background-color"</span>,<span class="string">"#cccccc"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p><strong><em>blur()</em></strong><br>当元素失去焦点时，发生 blur 事件。<br>blur() 方法触发 blur 事件，或规定当发生 blur 事件时运行的函数：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"input"</span>).blur(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="keyword">this</span>).css(<span class="string">"background-color"</span>,<span class="string">"#ffffff"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h4 id="四-jQuery效果"><a href="#四-jQuery效果" class="headerlink" title="四. jQuery效果"></a>四. jQuery效果</h4><p>#####4.1 隐藏显示<br><strong><em>hide()</em></strong><br>您可以使用 hide() 将元素隐藏<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#hide"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"p"</span>).hide();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p><strong><em>show()</em></strong><br>您可以使用show()将元素显示<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#show"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"p"</span>).show();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p><strong><em>toggle()</em></strong><br>通过 jQuery，您可以使用 toggle() 方法来切换 hide() 和 show() 方法。<br>显示被隐藏的元素，并隐藏已显示的元素：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"p"</span>).toggle();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>事实上，这三种方法都是有两个参数的：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(selector).hide(speed,callback);</span><br><span class="line">$(selector).show(speed,callback);</span><br><span class="line">$(selector).toggle(speed,callback);</span><br></pre></td></tr></table></figure></p><p>可选的 speed 参数规定隐藏/显示的速度，可以取以下值：”slow”、”fast” 或毫秒。<br>可选的 callback 参数是隐藏或显示完成后所执行的函数名称。</p><h5 id="4-2-淡入淡出"><a href="#4-2-淡入淡出" class="headerlink" title="4.2 淡入淡出"></a>4.2 淡入淡出</h5><p>通过 jQuery，您可以实现元素的淡入淡出效果。<br>jQuery 拥有下面四种 fade 方法：</p><ul><li>fadeIn()</li><li>fadeOut()</li><li>fadeToggle()</li><li>fadeTo()</li></ul><p><strong><em>jQuery fadeIn() 方法</em></strong><br>jQuery fadeIn() 用于淡入已隐藏的元素。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).fadeIn(speed,callback);</span><br></pre></td></tr></table></figure><p>可选的 speed 参数规定效果的时长。它可以取以下值：”slow”、”fast” 或毫秒。.<br>可选的 callback 参数是 fading 完成后所执行的函数名称。<br>下面的例子演示了带有不同参数的 fadeIn() 方法：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"#div1"</span>).fadeIn();</span><br><span class="line">  $(<span class="string">"#div2"</span>).fadeIn(<span class="string">"slow"</span>);</span><br><span class="line">  $(<span class="string">"#div3"</span>).fadeIn(<span class="number">3000</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p><strong><em>jQuery fadeOut() 方法</em></strong><br>jQuery fadeOut() 方法用于淡出可见元素。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).fadeOut(speed,callback);</span><br></pre></td></tr></table></figure></p><p>可选的 speed 参数规定效果的时长。它可以取以下值：”slow”、”fast” 或毫秒。<br>可选的 callback 参数是 fading 完成后所执行的函数名称。<br>下面的例子演示了带有不同参数的 fadeOut() 方法：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"#div1"</span>).fadeOut();</span><br><span class="line">  $(<span class="string">"#div2"</span>).fadeOut(<span class="string">"slow"</span>);</span><br><span class="line">  $(<span class="string">"#div3"</span>).fadeOut(<span class="number">3000</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p><strong><em>jQuery fadeToggle() 方法</em></strong><br>jQuery fadeToggle() 方法可以在 fadeIn() 与 fadeOut() 方法之间进行切换。<br>如果元素已淡出，则 fadeToggle() 会向元素添加淡入效果。<br>如果元素已淡入，则 fadeToggle() 会向元素添加淡出效果。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).fadeToggle(speed,callback);</span><br></pre></td></tr></table></figure></p><p>可选的 speed 参数规定效果的时长。它可以取以下值：”slow”、”fast” 或毫秒。<br>可选的 callback 参数是 fading 完成后所执行的函数名称。<br>下面的例子演示了带有不同参数的 fadeToggle() 方法：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"#div1"</span>).fadeToggle();</span><br><span class="line">  $(<span class="string">"#div2"</span>).fadeToggle(<span class="string">"slow"</span>);</span><br><span class="line">  $(<span class="string">"#div3"</span>).fadeToggle(<span class="number">3000</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p><strong><em>jQuery fadeTo() 方法</em></strong><br>jQuery fadeTo() 方法允许渐变为给定的不透明度（值介于 0 与 1 之间）。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).fadeTo(speed,opacity,callback);</span><br></pre></td></tr></table></figure></p><p>必需的 speed 参数规定效果的时长。它可以取以下值：”slow”、”fast” 或毫秒。<br>fadeTo() 方法中必需的 opacity 参数将淡入淡出效果设置为给定的不透明度（值介于 0 与 1 之间）。<br>可选的 callback 参数是该函数完成后所执行的函数名称。<br>下面的例子演示了带有不同参数的 fadeTo() 方法：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"#div1"</span>).fadeTo(<span class="string">"slow"</span>,<span class="number">0.15</span>);</span><br><span class="line">  $(<span class="string">"#div2"</span>).fadeTo(<span class="string">"slow"</span>,<span class="number">0.4</span>);</span><br><span class="line">  $(<span class="string">"#div3"</span>).fadeTo(<span class="string">"slow"</span>,<span class="number">0.7</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h5 id="4-3-滑动"><a href="#4-3-滑动" class="headerlink" title="4.3 滑动"></a>4.3 滑动</h5><p>通过 jQuery，您可以在元素上创建滑动效果。<br>jQuery 拥有以下滑动方法：</p><ul><li>slideDown()</li><li>slideUp()</li><li>slideToggle()</li></ul><p><strong><em>slideDown() 方法</em></strong></p><p>jQuery slideDown() 方法用于向下滑动元素。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).slideDown(speed,callback);</span><br></pre></td></tr></table></figure><p>可选的 speed 参数规定效果的时长。它可以取以下值：”slow”、”fast” 或毫秒。</p><p>可选的 callback 参数是滑动完成后所执行的函数名称。</p><p>下面的例子演示了 slideDown() 方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#flip"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"#panel"</span>).slideDown();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong><em>slideUp() 方法</em></strong></p><p>jQuery slideUp() 方法用于向上滑动元素。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).slideUp(speed,callback);</span><br></pre></td></tr></table></figure><p>可选的 speed 参数规定效果的时长。它可以取以下值：”slow”、”fast” 或毫秒。</p><p>可选的 callback 参数是滑动完成后所执行的函数名称。</p><p>下面的例子演示了 slideUp() 方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#flip"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"#panel"</span>).slideUp();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong><em>slideToggle() 方法</em></strong></p><p>jQuery slideToggle() 方法可以在 slideDown() 与 slideUp() 方法之间进行切换。</p><p>如果元素向下滑动，则 slideToggle() 可向上滑动它们。</p><p>如果元素向上滑动，则 slideToggle() 可向下滑动它们。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).slideToggle(speed,callback);</span><br></pre></td></tr></table></figure><p>可选的 speed 参数规定效果的时长。它可以取以下值：”slow”、”fast” 或毫秒。</p><p>可选的 callback 参数是滑动完成后所执行的函数名称。</p><p>下面的例子演示了 slideToggle() 方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#flip"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"#panel"</span>).slideToggle();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="4-4-动画"><a href="#4-4-动画" class="headerlink" title="4.4 动画"></a>4.4 动画</h5><h6 id="4-4-1-animate-方法"><a href="#4-4-1-animate-方法" class="headerlink" title="4.4.1 animate() 方法"></a>4.4.1 animate() 方法</h6><p>jQuery animate() 方法用于创建自定义动画。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).animate(&#123;params&#125;,speed,callback);</span><br></pre></td></tr></table></figure><p>必需的 params 参数定义形成动画的 CSS 属性。</p><p>可选的 speed 参数规定效果的时长。它可以取以下值：”slow”、”fast” 或毫秒。</p><p>可选的 callback 参数是动画完成后所执行的函数名称。</p><p>下面的例子演示 animate() 方法的简单应用。它把 <div> 元素往右边移动了 250 像素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"div"</span>).animate(&#123;<span class="attr">left</span>:<span class="string">'250px'</span>&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h6 id="4-4-2-操作多个属性"><a href="#4-4-2-操作多个属性" class="headerlink" title="4.4.2 操作多个属性"></a>4.4.2 操作多个属性</h6><p>请注意，生成动画的过程中可同时使用多个属性：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"div"</span>).animate(&#123;</span><br><span class="line">    left:<span class="string">'250px'</span>,</span><br><span class="line">    opacity:<span class="string">'0.5'</span>,</span><br><span class="line">    height:<span class="string">'150px'</span>,</span><br><span class="line">    width:<span class="string">'150px'</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>可以用 animate() 方法来操作所有 CSS 属性吗？</strong></p><p>是的，几乎可以！不过，需要记住一件重要的事情：当使用 animate() 时，必须使用 Camel 标记法书写所有的属性名，比如，必须使用 paddingLeft 而不是 padding-left，使用 marginRight 而不是 margin-right，等等。</p><p>同时，色彩动画并不包含在核心 jQuery 库中。</p><p>如果需要生成颜色动画，您需要从 <a href="http://jquery.com/download/">jquery.com</a> 下载 <a href="http://plugins.jquery.com/color/">颜色动画</a> 插件。</p><p>######4.4.3 使用相对值</p><p>也可以定义相对值（该值相对于元素的当前值）。需要在值的前面加上 += 或 -=：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"div"</span>).animate(&#123;</span><br><span class="line">    left:<span class="string">'250px'</span>,</span><br><span class="line">    height:<span class="string">'+=150px'</span>,<span class="comment">//原来基础下+150px</span></span><br><span class="line">    width:<span class="string">'+=150px'</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h6 id="4-4-4-预定义的值"><a href="#4-4-4-预定义的值" class="headerlink" title="4.4.4 预定义的值"></a>4.4.4 预定义的值</h6><p>您甚至可以把属性的动画值设置为 “show”、”hide” 或 “toggle”：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"div"</span>).animate(&#123;</span><br><span class="line">    height:<span class="string">'toggle'</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h6 id="4-4-5-使用队列功能"><a href="#4-4-5-使用队列功能" class="headerlink" title="4.4.5 使用队列功能"></a>4.4.5 使用队列功能</h6><p>默认地，jQuery 提供针对动画的队列功能。</p><p>这意味着如果您在彼此之后编写多个 animate() 调用，jQuery 会创建包含这些方法调用的”内部”队列。然后逐一运行这些 animate 调用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> div=$(<span class="string">"div"</span>);</span><br><span class="line">  div.animate(&#123;<span class="attr">height</span>:<span class="string">'300px'</span>,<span class="attr">opacity</span>:<span class="string">'0.4'</span>&#125;,<span class="string">"slow"</span>);</span><br><span class="line">  div.animate(&#123;<span class="attr">width</span>:<span class="string">'300px'</span>,<span class="attr">opacity</span>:<span class="string">'0.8'</span>&#125;,<span class="string">"slow"</span>);</span><br><span class="line">  div.animate(&#123;<span class="attr">height</span>:<span class="string">'100px'</span>,<span class="attr">opacity</span>:<span class="string">'0.4'</span>&#125;,<span class="string">"slow"</span>);</span><br><span class="line">  div.animate(&#123;<span class="attr">width</span>:<span class="string">'100px'</span>,<span class="attr">opacity</span>:<span class="string">'0.8'</span>&#125;,<span class="string">"slow"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>下面的例子把 <div> 元素往右边移动了 100 像素，然后增加文本的字号：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> div=$(<span class="string">"div"</span>);</span><br><span class="line">  div.animate(&#123;<span class="attr">left</span>:<span class="string">'100px'</span>&#125;,<span class="string">"slow"</span>);</span><br><span class="line">  div.animate(&#123;<span class="attr">fontSize</span>:<span class="string">'3em'</span>&#125;,<span class="string">"slow"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="4-5-停止动画"><a href="#4-5-停止动画" class="headerlink" title="4.5 停止动画"></a>4.5 停止动画</h5><p><strong><em>jQuery stop() 方法</em></strong></p><p>jQuery stop() 方法用于停止动画或效果，在它们完成之前。</p><p>stop() 方法适用于所有 jQuery 效果函数，包括滑动、淡入淡出和自定义动画。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).stop(stopAll,goToEnd);</span><br></pre></td></tr></table></figure><p>可选的 stopAll 参数规定是否应该清除动画队列。默认是 false，即仅停止当前活动的动画，允许任何排入队列的动画向后执行。</p><p>可选的 goToEnd 参数规定是否立即完成当前动画。默认是 false。</p><p>因此，==默认地，stop() 会清除在被选元素上指定的当前动画。==</p><p>下面的例子演示 stop() 方法，不带参数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#stop"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"#panel"</span>).stop();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="4-6-Callback"><a href="#4-6-Callback" class="headerlink" title="4.6 Callback"></a>4.6 Callback</h5><p>许多 jQuery 函数涉及动画。这些函数也许会将 <em>speed</em> 或 <em>duration</em> 作为可选参数。</p><p>例子：<em>$(“p”).hide(“slow”)</em></p><p><em>speed</em> 或 <em>duration</em> 参数可以设置许多不同的值，比如 “slow”, “fast”, “normal” 或毫秒。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"p"</span>).hide(<span class="string">"slow"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">"段落现在被隐藏了"</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>以下实例没有回调函数，警告框会在隐藏效果完成前弹出：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"p"</span>).hide(<span class="number">1000</span>);</span><br><span class="line">  alert(<span class="string">"段落现在被隐藏了"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="4-7-链式编程"><a href="#4-7-链式编程" class="headerlink" title="4.7 链式编程"></a>4.7 链式编程</h5><p>直到现在，我们都是一次写一条 jQuery 语句（一条接着另一条）。</p><p>不过，有一种名为链接（chaining）的技术，允许我们在相同的元素上运行多条 jQuery 命令，一条接着另一条。</p><p><strong>提示：</strong> 这样的话，浏览器就不必多次查找相同的元素。</p><p>如需链接一个动作，您只需简单地把该动作追加到之前的动作上。</p><p>下面的例子把 css()、slideUp() 和 slideDown() 链接在一起。”p1” 元素首先会变为红色，然后向上滑动，再然后向下滑动：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#p1"</span>).css(<span class="string">"color"</span>,<span class="string">"red"</span>).slideUp(<span class="number">2000</span>).slideDown(<span class="number">2000</span>);</span><br></pre></td></tr></table></figure><p>如果需要，我们也可以添加多个方法调用。</p><p><strong>提示：</strong>当进行链接时，代码行会变得很差。不过，jQuery 语法不是很严格；您可以按照希望的格式来写，包含换行和缩进。</p><p>如下书写也可以很好地运行：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#p1"</span>).css(<span class="string">"color"</span>,<span class="string">"red"</span>)</span><br><span class="line">  .slideUp(<span class="number">2000</span>)</span><br><span class="line">  .slideDown(<span class="number">2000</span>);</span><br></pre></td></tr></table></figure><h4 id="五-jQuery-HTML"><a href="#五-jQuery-HTML" class="headerlink" title="五. jQuery HTML"></a>五. jQuery HTML</h4><h5 id="5-1-捕获"><a href="#5-1-捕获" class="headerlink" title="5.1 捕获"></a>5.1 捕获</h5><p>jQuery 拥有可操作 HTML 元素和属性的强大方法。</p><p><strong><em>jQuery DOM 操作</em></strong></p><p>jQuery 中非常重要的部分，就是操作 DOM 的能力。</p><p>jQuery 提供一系列与 DOM 相关的方法，这使访问和操作元素和属性变得很容易。</p><p><strong><em>获得内容 - text()、html() 以及 val()</em></strong></p><p>三个简单实用的用于 DOM 操作的 jQuery 方法：</p><ul><li>text() - 设置或返回所选元素的文本内容</li><li>html() - 设置或返回所选元素的内容（包括 HTML 标记）</li><li>val() - 设置或返回表单字段的值</li></ul><p>下面的例子演示如何通过 jQuery text() 和 html() 方法来获得内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#btn1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  alert(<span class="string">"Text: "</span> + $(<span class="string">"#test"</span>).text());</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">"#btn2"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  alert(<span class="string">"HTML: "</span> + $(<span class="string">"#test"</span>).html());</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>下面的例子演示如何通过 jQuery val() 方法获得输入字段的值：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#btn1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  alert(<span class="string">"值为: "</span> + $(<span class="string">"#test"</span>).val());</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>获取属性-attr()</p><p>jQuery attr() 方法用于获取属性值。</p><p>下面的例子演示如何获得链接中 href 属性的值：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  alert($(<span class="string">"#a1"</span>).attr(<span class="string">"href"</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="5-2-设置"><a href="#5-2-设置" class="headerlink" title="5.2 设置"></a>5.2 设置</h5><p><strong><em>设置内容 - text()、html() 以及 val()</em></strong></p><p>我们将使用前一章中的三个相同的方法来设置内容：</p><ul><li>text() - 设置或返回所选元素的文本内容</li><li>html() - 设置或返回所选元素的内容（包括 HTML 标记）</li><li>val() - 设置或返回表单字段的值</li></ul><p>下面的例子演示如何通过 text()、html() 以及 val() 方法来设置内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#btn1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#test1"</span>).text(<span class="string">"Hello world!"</span>);</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">"#btn2"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#test2"</span>).html(<span class="string">"&lt;b&gt;Hello world!&lt;/b&gt;"</span>);</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">"#btn3"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#test3"</span>).val(<span class="string">"Hello world!"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong><em>text()、html() 以及 val() 的回调函数</em></strong></p><p>上面的三个 jQuery 方法：text()、html() 以及 val()，同样拥有回调函数。回调函数有两个参数：被选元素列表中当前元素的下标，以及原始（旧的）值。然后以函数新值返回您希望使用的字符串。</p><p>下面的例子演示带有回调函数的 text() 和 html()：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#btn1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#test1"</span>).text(<span class="function"><span class="keyword">function</span>(<span class="params">i,origText</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//return 作用：覆盖origText</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"旧文本: "</span> + origText + <span class="string">" 新文本: Hello world! (index: "</span> + i + <span class="string">")"</span>; </span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">$(<span class="string">"#btn2"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#test2"</span>).html(<span class="function"><span class="keyword">function</span>(<span class="params">i,origText</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"旧 html: "</span> + origText + <span class="string">" 新 html: Hello &lt;b&gt;world!&lt;/b&gt; (index: "</span> + i + <span class="string">")"</span>; </span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong><em>设置属性 - attr()</em></strong></p><p>jQuery attr() 方法也用于设置/改变属性值。</p><p>下面的例子演示如何改变（设置）文本中 color属性的值：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"#font1"</span>).attr(<span class="string">"color"</span>,<span class="string">"red"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="5-3-添加元素"><a href="#5-3-添加元素" class="headerlink" title="5.3 添加元素"></a>5.3 添加元素</h5><p><strong>添加新的 HTML 内容</strong></p><p>我们将学习用于添加新内容的四个 jQuery 方法：</p><ul><li>append() - 在被选元素的结尾插入内容</li><li>prepend() - 在被选元素的开头插入内容</li><li>after() - 在被选元素之后插入内容</li><li>before() - 在被选元素之前插入内容</li></ul><p><strong>jQuery append() 方法</strong></p><p>jQuery append() 方法在被选元素的结尾插入内容。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).append(<span class="string">"追加文本"</span>);</span><br></pre></td></tr></table></figure><p><strong>jQuery prepend() 方法</strong></p><p>jQuery prepend() 方法在被选元素的开头插入内容。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).prepend(<span class="string">"在开头追加文本"</span>);</span><br></pre></td></tr></table></figure><p><strong>通过 append() 和 prepend() 方法添加若干新元素</strong></p><p>在上面的例子中，我们只在被选元素的开头/结尾插入文本/HTML。</p><p>不过，append() 和 prepend() 方法能够通过参数接收无限数量的新元素。可以通过 jQuery 来生成文本/HTML（就像上面的例子那样），或者通过 JavaScript 代码和 DOM 元素。</p><p>在下面的例子中，我们创建若干个新元素。这些元素可以通过 text/HTML、jQuery 或者 JavaScript/DOM 来创建。然后我们通过 append() 方法把这些新元素追加到文本中（对 prepend() 同样有效）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">appendText</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> txt1=<span class="string">"&lt;p&gt;文本。&lt;/p&gt;"</span>;              <span class="comment">// 使用 HTML 标签创建文本</span></span><br><span class="line">    <span class="keyword">var</span> txt2=$(<span class="string">"&lt;p&gt;&lt;/p&gt;"</span>).text(<span class="string">"文本。"</span>);  <span class="comment">// 使用 jQuery 创建文本</span></span><br><span class="line">    <span class="keyword">var</span> txt3=<span class="built_in">document</span>.createElement(<span class="string">"p"</span>);</span><br><span class="line">    txt3.innerHTML=<span class="string">"文本。"</span>;               <span class="comment">// 使用 DOM 创建文本 text with DOM</span></span><br><span class="line">    $(<span class="string">"body"</span>).append(txt1,txt2,txt3);        <span class="comment">// 追加新元素</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>jQuery after() 和 before() 方法</strong></p><p>jQuery after() 方法在被选元素之后插入内容。</p><p>jQuery before() 方法在被选元素之前插入内容。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"img"</span>).after(<span class="string">"在后面添加文本"</span>);</span><br><span class="line"> </span><br><span class="line">$(<span class="string">"img"</span>).before(<span class="string">"在前面添加文本"</span>);</span><br></pre></td></tr></table></figure><p><strong>通过 after() 和 before() 方法添加若干新元素</strong></p><p>after() 和 before() 方法能够通过参数接收无限数量的新元素。可以通过 text/HTML、jQuery 或者 JavaScript/DOM 来创建新元素。</p><p>在下面的例子中，我们创建若干新元素。这些元素可以通过 text/HTML、jQuery 或者 JavaScript/DOM 来创建。然后我们通过 after() 方法把这些新元素插到文本中（对 before() 同样有效）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">afterText</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> txt1=<span class="string">"&lt;b&gt;I &lt;/b&gt;"</span>;                    <span class="comment">// 使用 HTML 创建元素</span></span><br><span class="line">    <span class="keyword">var</span> txt2=$(<span class="string">"&lt;i&gt;&lt;/i&gt;"</span>).text(<span class="string">"love "</span>);     <span class="comment">// 使用 jQuery 创建元素</span></span><br><span class="line">    <span class="keyword">var</span> txt3=<span class="built_in">document</span>.createElement(<span class="string">"big"</span>);  <span class="comment">// 使用 DOM 创建元素</span></span><br><span class="line">    txt3.innerHTML=<span class="string">"jQuery!"</span>;</span><br><span class="line">    $(<span class="string">"img"</span>).after(txt1,txt2,txt3);          <span class="comment">// 在图片后添加多个文本</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="5-4-删除元素"><a href="#5-4-删除元素" class="headerlink" title="5.4 删除元素"></a>5.4 删除元素</h5><p><strong>删除元素/内容</strong></p><p>如需删除元素和内容，一般可使用以下两个 jQuery 方法：</p><ul><li>remove() - 删除被选元素（及其子元素）</li><li>empty() - 从被选元素中删除子元素</li></ul><p><strong>jQuery remove(选择器) 方法</strong></p><p>jQuery remove() 方法删除被选元素及其子元素。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#div1"</span>).remove();</span><br></pre></td></tr></table></figure><p><strong>jQuery empty() 方法</strong></p><p>jQuery empty() 方法删除被选元素的子元素。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#div1"</span>).empty();</span><br></pre></td></tr></table></figure><p><strong>过滤被删除的元素</strong></p><p>jQuery remove() 方法也可接受一个参数，允许您对被删元素进行过滤。</p><p>==该参数可以是任何 jQuery 选择器的语法。==</p><p>下面的例子删除 class=”italic” 的所有 <p> 元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).remove(<span class="string">".italic"</span>);</span><br></pre></td></tr></table></figure><h5 id="5-5-CSS类"><a href="#5-5-CSS类" class="headerlink" title="5.5 CSS类"></a>5.5 CSS类</h5><p><strong>jQuery 操作 CSS</strong></p><p>jQuery 拥有若干进行 CSS 操作的方法。我们将学习下面这些：</p><ul><li>addClass() - 向被选元素添加一个或多个类</li><li>removeClass() - 从被选元素删除一个或多个类</li><li>toggleClass() - 对被选元素进行添加/删除类的切换操作</li><li>css() - 设置或返回样式属性</li></ul><p><strong>实例样式表</strong></p><p>下面的样式表将用于本页的所有例子：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.important</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="attribute">font-weight</span>:bold;</span><br><span class="line">        <span class="attribute">font-size</span>:xx-large;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-class">.blue</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>jQuery addClass() 方法</strong></p><p>下面的例子展示如何向不同的元素添加 class 属性。当然，在添加类时，您也可以选取多个元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"h1,h2,p"</span>).addClass(<span class="string">"blue"</span>);</span><br><span class="line">  $(<span class="string">"div"</span>).addClass(<span class="string">"important"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>您也可以在 addClass() 方法中规定多个类：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"body div:first"</span>).addClass(<span class="string">"important blue"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>jQuery removeClass() 方法</strong></p><p>下面的例子演示如何在不同的元素中删除指定的 class 属性：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//复合选择器：并集选择器，选中所有h1标签，h2标签和p标签</span></span><br><span class="line">    <span class="comment">//*表示选中所有标签,即$("*")</span></span><br><span class="line">  $(<span class="string">"h1,h2,p"</span>).removeClass(<span class="string">"blue"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>jQuery toggleClass() 方法</strong></p><p>下面的例子将展示如何使用 jQuery toggleClass() 方法。该方法对被选元素进行添加/删除类的切换操作：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"h1,h2,p"</span>).toggleClass(<span class="string">"blue"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="5-6-css-方法"><a href="#5-6-css-方法" class="headerlink" title="5.6 css()方法"></a>5.6 css()方法</h5><p><strong>jQuery css() 方法</strong></p><p>css() 方法设置或返回被选元素的一个或多个样式属性。</p><p><strong>返回 CSS 属性</strong></p><p>如需返回指定的 CSS 属性的值，请使用如下语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">css(<span class="string">"propertyname"</span>);</span><br></pre></td></tr></table></figure><p>下面的例子将返回首个匹配元素的 background-color 值：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).css(<span class="string">"background-color"</span>);</span><br></pre></td></tr></table></figure><p><strong>设置 CSS 属性</strong></p><p>如需设置指定的 CSS 属性，请使用如下语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">css(<span class="string">"propertyname"</span>,<span class="string">"value"</span>);</span><br></pre></td></tr></table></figure><p>下面的例子将为所有匹配元素设置 background-color 值：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).css(<span class="string">"background-color"</span>,<span class="string">"yellow"</span>);</span><br></pre></td></tr></table></figure><p><strong>设置多个 CSS 属性</strong></p><p>如需设置多个 CSS 属性，请使用如下语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">css(&#123;<span class="string">"propertyname"</span>:<span class="string">"value"</span>,<span class="string">"propertyname"</span>:<span class="string">"value"</span>,...&#125;);</span><br></pre></td></tr></table></figure><p>下面的例子将为所有匹配元素设置 background-color 和 font-size：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).css(&#123;<span class="string">"background-color"</span>:<span class="string">"yellow"</span>,<span class="string">"font-size"</span>:<span class="string">"200%"</span>&#125;);</span><br></pre></td></tr></table></figure><h5 id="5-7-尺寸"><a href="#5-7-尺寸" class="headerlink" title="5.7 尺寸"></a>5.7 尺寸</h5><p><strong>jQuery 尺寸方法</strong></p><p>jQuery 提供多个处理尺寸的重要方法：</p><ul><li>width()</li><li>height()</li><li>innerWidth()</li><li>innerHeight()</li><li>outerWidth()</li><li>outerHeight()</li></ul><p><img src="img\1.png" alt="1"></p><p><strong>jQuery width() 和 height() 方法</strong></p><p>width() 方法设置或返回元素的宽度（==不包括内边距、边框或外边距==）。</p><p>height() 方法设置或返回元素的高度（==不包括内边距、边框或外边距==）。</p><p>下面的例子返回指定的 &lt;div&gt; 元素的宽度和高度：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> txt=<span class="string">""</span>;</span><br><span class="line">  txt+=<span class="string">"div 的宽度是: "</span> + $(<span class="string">"#div1"</span>).width() + <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">  txt+=<span class="string">"div 的高度是: "</span> + $(<span class="string">"#div1"</span>).height();</span><br><span class="line">  $(<span class="string">"#div1"</span>).html(txt);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>jQuery innerWidth() 和 innerHeight() 方法</strong></p><p>innerWidth() 方法返回元素的宽度（==包括内边距==）。</p><p>innerHeight() 方法返回元素的高度（==包括内边距==）。</p><p>下面的例子返回指定的 &lt;div&gt; 元素的 inner-width/height：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> txt=<span class="string">""</span>;</span><br><span class="line">  txt+=<span class="string">"div 宽度，包含内边距: "</span> + $(<span class="string">"#div1"</span>).innerWidth() + <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">    txt+=<span class="string">"div 高度，包含内边距: "</span> + $(<span class="string">"#div1"</span>).innerHeight();</span><br><span class="line">  $(<span class="string">"#div1"</span>).html(txt);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>jQuery outerWidth() 和 outerHeight() 方法</strong></p><p>outerWidth() 方法返回元素的宽度（包括内边距和边框）。</p><p>outerHeight() 方法返回元素的高度（包括内边距和边框）。</p><p>下面的例子返回指定的 &lt;div&gt; 元素的 outer-width/height：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> txt=<span class="string">""</span>;</span><br><span class="line">  txt+=<span class="string">"div 宽度，包含内边距和边框: "</span> + $(<span class="string">"#div1"</span>).outerWidth() + <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">  txt+=<span class="string">"div 高度，包含内边距和边框: "</span> + $(<span class="string">"#div1"</span>).outerHeight();</span><br><span class="line">  $(<span class="string">"#div1"</span>).html(txt);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="七-jQuery遍历"><a href="#七-jQuery遍历" class="headerlink" title="七. jQuery遍历"></a>七. jQuery遍历</h4><h5 id="6-1-遍历"><a href="#6-1-遍历" class="headerlink" title="6.1 遍历"></a>6.1 遍历</h5><p>jQuery 遍历，意为”移动”，用于根据其相对于其他元素的关系来”查找”（或选取）HTML 元素。以某项选择开始，并沿着这个选择移动，直到抵达您期望的元素为止。</p><p>下图展示了一个家族树。通过 jQuery 遍历，您能够从被选（当前的）元素开始，轻松地在家族树中向上移动（祖先），向下移动（子孙），水平移动（同胞）。这种移动被称为对 DOM 进行遍历。</p><p>#####6.2 祖先</p><p><strong>jQuery parent() 方法</strong></p><p>parent() 方法返回被选元素的==直接父元素==。</p><p>该方法只会向上一级对 DOM 树进行遍历。</p><p>下面的例子返回每个 <span> 元素的的直接父元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"span"</span>).parent();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>jQuery parents() 方法</strong></p><p>parents() 方法返回被选元素的==所有祖先元素==，它一路向上直到文档的根元素 (<html>)。</p><p>下面的例子返回所有 <span> 元素的所有祖先：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"span"</span>).parents();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>您也可以使用可选参数来过滤对祖先元素的搜索。</p><p>下面的例子返回所有 <span> 元素的所有祖先，并且它是 <ul> 元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"span"</span>).parents(<span class="string">"ul"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>jQuery parentsUntil() 方法</strong></p><p>parentsUntil() 方法返回介于两个给定元素之间的所有祖先元素。</p><p>下面的例子返回介于 <span> 与 <div> 元素之间的所有祖先元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"span"</span>).parentsUntil(<span class="string">"div"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>#####6.3 后代</p><p><strong>jQuery children() 方法</strong></p><p>children() 方法返回被选元素的所有直接子元素。</p><p>该方法只会向下一级对 DOM 树进行遍历。</p><p>下面的例子返回每个 <div> 元素的==所有直接子元素：==</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"div"</span>).children();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>您也可以使用==可选参数（参数为选择器）来过滤对子元素的搜索==。</p><p>下面的例子返回类名为 “1” 的所有 <p> 元素，并且它们是 <div> 的直接子元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"div"</span>).children(<span class="string">"p.1"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>jQuery find() 方法</strong></p><p>find() 方法返回==被选元素的后代元素，一路向下直到最后一个后代。==</p><p>下面的例子返回属于 <div> 后代的所有 <span> 元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"div"</span>).find(<span class="string">"span"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>下面的例子返回 <div> 的==所有后代==：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"div"</span>).find(<span class="string">"*"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>#####6.4 同胞</p><p><strong>jQuery siblings() 方法</strong></p><p>siblings() 方法返回被选元素的所有同胞元素。</p><p>下面的例子返回 <h2> 的==所有同胞元素：==</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"h2"</span>).siblings();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>您也可以使用==可选参数（选择器）来过滤对同胞元素的搜索。==</p><p>下面的例子返回属于 <h2> 的同胞元素的所有 <p> 元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"h2"</span>).siblings(<span class="string">"p"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>jQuery next() 方法</strong></p><p>next() 方法返回被选元素的==下一个同胞元素。==</p><p>该方法只返回一个元素。</p><p>下面的例子返回 <h2> 的下一个同胞元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"h2"</span>).next();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>jQuery nextAll() 方法</strong></p><p>nextAll() 方法返回被选元素的==所有跟随的同胞元素。==</p><p>下面的例子返回 <h2> 的所有跟随的同胞元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"h2"</span>).nextAll();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>jQuery nextUntil() 方法</strong></p><p>nextUntil() 方法返回==介于两个给定参数之间的所有跟随的同胞元素。==</p><p>下面的例子返回介于 <h2> 与 <h6> 元素之间的所有同胞元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"h2"</span>).nextUntil(<span class="string">"h6"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>#####6.5 过滤</p><p><strong>jQuery first() 方法</strong></p><p>==first() 方法返回被选元素的首个元素。==</p><p>下面的例子选取首个 <div> 元素内部的第一个 <p> 元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"div p"</span>).first();<span class="comment">//注意，对两上标签都有效</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>jQuery last() 方法</strong></p><p>==last() 方法返回被选元素的最后一个元素。==</p><p>下面的例子选择最后一个 <div> 元素中的最后一个 <p> 元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"div p"</span>).last();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>jQuery eq() 方法</strong></p><p>eq() 方法返回被选元素中带有指定索引号的元素。</p><p>索引号从 0 开始，因此首个元素的索引号是 0 而不是 1。下面的例子选取第二个 <p> 元素（索引号 1）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"p"</span>).eq(<span class="number">1</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>jQuery filter() 方法</strong></p><p>filter() 方法允许您规定一个标准。不匹配这个标准的元素会被从集合中删除，匹配的元素会被返回。</p><p>下面的例子返回带有类名 “url” 的所有 <p> 元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"p"</span>).filter(<span class="string">".url"</span>);<span class="comment">//包含</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>jQuery not() 方法</strong></p><p>not() 方法返回不匹配标准的所有元素。</p><p>提示：not() 方法与 filter() 相反。</p><p>下面的例子返回不带有类名 “url” 的所有 <p> 元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"p"</span>).not(<span class="string">".url"</span>);<span class="comment">//不包含</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>####七. jQuery AJAX</p><p>#####7.1 jQuery AJAX简介</p><p><strong>什么是 AJAX？</strong></p><p>AJAX = 异步 JavaScript 和 XML（Asynchronous JavaScript and XML）。</p><p>简短地说，在不重载整个网页的情况下，AJAX 通过后台加载数据，并在网页上进行显示。</p><p>使用 AJAX 的应用程序案例：谷歌地图、腾讯微博、优酷视频、人人网等等。</p><h5 id="7-2-load方法"><a href="#7-2-load方法" class="headerlink" title="7.2 load方法"></a>7.2 load方法</h5><p><strong>jQuery load() 方法</strong></p><p>jQuery load() 方法是简单但强大的 AJAX 方法。</p><p>load() 方法==从服务器加载数据==，==并把返回的数据放入被选元素中。==</p><p><strong>语法:</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).load(URL,data,callback);</span><br></pre></td></tr></table></figure><p>必需的 <em>URL</em> 参数规定您希望加载的 URL。</p><p>可选的 <em>data</em> 参数规定与请求一同发送的查询字符串键/值对集合。</p><p>可选的 <em>callback</em> 参数是 load() 方法完成后所执行的函数名称。</p><p>这是示例文件（”demo_test.txt”）的内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>jQuery AJAX 是个非常棒的功能！<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span>&gt;</span>这是段落的一些文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>下面的例子会把文件 “demo_test.txt” 的内容加载到指定的 <div> 元素中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#div1"</span>).load(<span class="string">"demo_test.txt"</span>);</span><br></pre></td></tr></table></figure><p>也可以把 jQuery 选择器添加到 URL 参数。</p><p>下面的例子把 “demo_test.txt” 文件中 id=”p1” 的元素的内容，加载到指定的 <div> 元素中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#div1"</span>).load(<span class="string">"demo_test.txt #p1"</span>);</span><br></pre></td></tr></table></figure><p>可选的 callback 参数规定当 load() 方法完成后所要允许的回调函数。回调函数可以设置不同的参数：</p><ul><li><em>responseTxt</em> - 包含调用成功时的结果内容</li><li><em>statusTXT</em> - 包含调用的状态</li><li><em>xhr</em> - 包含 XMLHttpRequest 对象</li></ul><p>下面的例子会在 load() 方法完成后显示一个提示框。如果 load() 方法已成功，则显示”外部内容加载成功！”，而如果失败，则显示错误消息：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"#div1"</span>).load(<span class="string">"demo_test.txt"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">responseTxt,statusTxt,xhr</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(statusTxt==<span class="string">"success"</span>)</span><br><span class="line">      alert(<span class="string">"外部内容加载成功!"</span>);</span><br><span class="line">    <span class="keyword">if</span>(statusTxt==<span class="string">"error"</span>)</span><br><span class="line">      alert(<span class="string">"Error: "</span>+xhr.status+<span class="string">": "</span>+xhr.statusText);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="7-3-get和post方法"><a href="#7-3-get和post方法" class="headerlink" title="7.3 get和post方法"></a>7.3 get和post方法</h5><p><strong>jQuery $.get() 方法</strong></p><p>$.get() 方法通过 HTTP GET 请求从服务器上请求数据。</p><p>语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$.get(URL,callback);</span><br></pre></td></tr></table></figure><p>必需的 <em>URL</em> 参数规定您希望请求的 URL。</p><p>可选的 <em>callback</em> 参数是请求成功后所执行的函数名。</p><p>下面的例子使用 $.get() 方法从服务器上的一个文件中取回数据：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $.get(<span class="string">"demo_test.php"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">data,status</span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">"数据: "</span> + data + <span class="string">"\n状态: "</span> + status);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>jQuery $.post() 方法</strong></p><p>$.post() 方法通过 HTTP POST 请求从服务器上请求数据。</p><p><strong>语法:</strong></p><p>$.post(<em>URL,data,callback</em>);</p><p>必需的 <em>URL</em> 参数规定您希望请求的 URL。</p><p>可选的 <em>data</em> 参数规定连同请求发送的数据。</p><p>可选的 <em>callback</em> 参数是请求成功后所执行的函数名。</p><p>下面的例子使用 $.post() 连同请求一起发送数据：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $.post(<span class="string">"/try/ajax/demo_test_post.jsp"</span>,</span><br><span class="line">    &#123;</span><br><span class="line">        name:<span class="string">"百度"</span>,</span><br><span class="line">        url:<span class="string">"http://www.baidu.com"</span></span><br><span class="line">    &#125;,</span><br><span class="line">        <span class="function"><span class="keyword">function</span>(<span class="params">data,status</span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">"数据: \n"</span> + data + <span class="string">"\n状态: "</span> + status);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="7-5-ajax（）方法"><a href="#7-5-ajax（）方法" class="headerlink" title="7.5 ajax（）方法"></a>7.5 ajax（）方法</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;&lt;/h1&gt;</span><br><span class="line">&lt;form action=&quot;#&quot;&gt;</span><br><span class="line">用户名：&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt; &lt;br&gt; &lt;input</span><br><span class="line">type=&quot;button&quot; value=&quot;doAjax&quot; id=&quot;btn&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">$(function() &#123;</span><br><span class="line">$(&quot;#btn&quot;).click(function() &#123;</span><br><span class="line"></span><br><span class="line">var un = $(&quot;input[type=&apos;text&apos;]&quot;).val();</span><br><span class="line">//发送ajax请求</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">url : &quot;ajax.do&quot;,</span><br><span class="line">data : &#123;</span><br><span class="line">&quot;username&quot; : un</span><br><span class="line">&#125;,</span><br><span class="line">//data:&quot;username=&quot;+un,</span><br><span class="line">type : &quot;post&quot;,//请求方法</span><br><span class="line">dataType : &quot;json&quot;,//服务器写回数据的类型text|json|xml|script</span><br><span class="line">cache : false,//是否启用浏览器缓存</span><br><span class="line">async : true,//异步</span><br><span class="line">success : function(rec) &#123;</span><br><span class="line">$(&quot;h1&quot;).html(rec.mess);</span><br><span class="line">&#125;,</span><br><span class="line">error : function() &#123;</span><br><span class="line"></span><br><span class="line">alert(&quot;发送ajax失败&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="八-其他"><a href="#八-其他" class="headerlink" title="八. 其他"></a>八. 其他</h4><p>#####8.1 jQuery noConflict方法</p><p><strong>jQuery 和其他 JavaScript 框架</strong></p><p>正如您已经了解到的，jQuery 使用 $ 符号作为 jQuery 的简写。</p><p>如果其他 JavaScript 框架也使用 $ 符号作为简写怎么办？</p><p>其他一些 JavaScript 框架包括：MooTools、Backbone、Sammy、Cappuccino、Knockout、JavaScript MVC、Google Web Toolkit、Google Closure、Ember、Batman 以及 Ext JS。</p><p>其中某些框架也使用 $ 符号作为简写（就像 jQuery），如果您在用的两种不同的框架正在使用相同的简写符号，有可能导致脚本停止运行。</p><p>jQuery 的团队考虑到了这个问题，并实现了 noConflict() 方法。</p><p><strong>jQuery noConflict() 方法</strong></p><p>noConflict() 方法会释放对 $ 标识符的控制，这样其他脚本就可以使用它了。</p><p>当然，您仍然可以通过全名替代简写的方式来使用 jQuery：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$.noConflict();<span class="comment">//不使用$,使用默认的字符串jQuery</span></span><br><span class="line">jQuery(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  jQuery(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    jQuery(<span class="string">"p"</span>).text(<span class="string">"jQuery 仍然在工作!"</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>您也可以创建自己的简写。noConflict() 可返回对 jQuery 的引用，您可以把它存入变量，以供稍后使用。请看这个例子： </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> jq = $.noConflict();<span class="comment">//不使用$，使用自定义标识</span></span><br><span class="line">jq(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  jq(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    jq(<span class="string">"p"</span>).text(<span class="string">"jQuery 仍然在工作!"</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>如果你的 jQuery 代码块使用 $ 简写，并且您不愿意改变这个快捷方式，那么您可以把 $ 符号作为变量传递给 ready 方法。这样就可以在函数内使用 $ 符号了 - 而在函数外，依旧不得不使用 “jQuery”：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$.noConflict();</span><br><span class="line">jQuery(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"p"</span>).text(<span class="string">"jQuery 仍然在工作!"</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="作业题"><a href="#作业题" class="headerlink" title="作业题"></a>作业题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1、写一个综合模块，要求能够尽可能多的使用jQuery实现</span><br></pre></td></tr></table></figure><h4 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、jQuery的美元符号$有什么作用？</span><br><span class="line">2、body中的onload()函数和jQuery中的document.ready()有什么区别？</span><br><span class="line">3、jQuery中有哪几种类型的选择器？</span><br><span class="line">4、如何用jQuery禁用浏览器的前进后退按钮？</span><br></pre></td></tr></table></figure></script></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;jQuery&quot;&gt;&lt;a href=&quot;#jQuery&quot; class=&quot;headerlink&quot; title=&quot;jQuery&quot;&gt;&lt;/a&gt;jQuery&lt;/h3&gt;&lt;h4 id=&quot;今日内容&quot;&gt;&lt;a href=&quot;#今日内容&quot; class=&quot;headerlink&quot; title=&quot;今
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://kongxianghe.top/2018/10/23/Validate%E5%92%8CBootstrap/"/>
    <id>http://kongxianghe.top/2018/10/23/Validate和Bootstrap/</id>
    <published>2018-10-23T14:06:03.373Z</published>
    <updated>2018-07-09T06:15:57.641Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Validate和Bootstrap"><a href="#Validate和Bootstrap" class="headerlink" title="Validate和Bootstrap"></a>Validate和Bootstrap</h3><h4 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、Validate插件的使用</span><br><span class="line">2、Bootstrap的栅格系统</span><br><span class="line">3、BootStrap常用的排版</span><br><span class="line">4、BootStrap的表单</span><br><span class="line">5、BootStrap的组件</span><br></pre></td></tr></table></figure><h4 id="第一章-validate插件"><a href="#第一章-validate插件" class="headerlink" title="第一章 validate插件"></a>第一章 validate插件</h4><h5 id="1-validate概述"><a href="#1-validate概述" class="headerlink" title="1.validate概述"></a>1.validate概述</h5><pre><code>validate: jquery的一个插件,依赖jquery使用，Validation是历史最悠久的jQuery插件之一，经过了全球范围内不同项目的验证，并得到了许多Web开发者的好评。作为一个标准的验证方法库，Validation拥有如下特点：    1.内置验证规则： 拥有必填、数字、Email、URL和信用卡号码等19类内置验证规则   2.自定义验证规则： 可以很方便地自定义验证规则   3.简单强大的验证信息提示： 默认了验证信息提示，并提供自定义覆盖默认的提示信息的功能   4.实时验证： 可能通过keyup或blur事件触发验证，而不仅仅在表单提交的时候验证</code></pre><h5 id="2-validate使用步骤"><a href="#2-validate使用步骤" class="headerlink" title="2.validate使用步骤"></a>2.validate使用步骤</h5><pre><code>使用步骤:1.导入jquery文件2.导入validate.js和messages_zh.js中文提示3.页面加载成功后!对表单进行验证!  $(&quot;选择器&quot;).validate();4.在validate中编写校验规则    $(&quot;#form&quot;).validate({json格式});如：    $(&quot;选择器&quot;).validate({       rules:{},       messages:{}，       submitHandler:function(frm){           //手动提交，当然submitHandler可以省略，验证通过也会默认提交           //注意，若手动提交，则需使用返回form对像，而不要手动获取。           frm.submit();       }    });</code></pre><h5 id="3-校验规则"><a href="#3-校验规则" class="headerlink" title="3. 校验规则"></a>3. 校验规则</h5><p>默认校验规则：    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">(1)required:true   必输字段</span><br><span class="line">(2)remote:&quot;check.php&quot;  使用ajax方法调用check.php验证输入值</span><br><span class="line">(3)email:true      必须输入正确格式的电子邮件</span><br><span class="line">(4)url:true        必须输入正确格式的网址</span><br><span class="line">(5)date:true       必须输入正确格式的日期 日期校验ie6出错，慎用</span><br><span class="line">(6)dateISO:true    必须输入正确格式的日期(ISO)，例如：2009-06-23，1998/01/22 只验证格式，不验证有效性</span><br><span class="line">(7)number:true     必须输入合法的数字(负数，小数)</span><br><span class="line">(8)digits:true     必须输入整数</span><br><span class="line">(9)creditcard:     必须输入合法的信用卡号</span><br><span class="line">(10)equalTo:&quot;#field&quot; 输入值必须和#field相同</span><br><span class="line">(11)accept:         输入拥有合法后缀名的字符串（上传文件的后缀）</span><br><span class="line">(12)maxlength:5     输入长度最多是5的字符串(汉字算一个字符)</span><br><span class="line">(13)minlength:10    输入长度最小是10的字符串(汉字算一个字符)</span><br><span class="line">(14)rangelength:[5,10] 输入长度必须介于 5 和 10 之间的字符串&quot;)(汉字算一个字符)</span><br><span class="line">(15)range:[5,10]    输入值必须介于 5 和 10 之间</span><br><span class="line">(16)max:5           输入值不能大于5</span><br><span class="line">(17)min:10          输入值不能小于10</span><br></pre></td></tr></table></figure><p>==注意：当使用remote校验器的注意事项==</p><p>远程地址只能输出 “true” 或 “false”，不能有其他输出。否则表单提交不了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">remote: &#123;</span><br><span class="line">    url: &quot;check-email.do&quot;,     //后台处理程序</span><br><span class="line">    type: &quot;post&quot;,               //数据发送方式，可省略</span><br><span class="line">    dataType: &quot;json&quot;,           //接受数据格式，可省略  </span><br><span class="line">    data: &#123;                     //传递给服务器json数据，可省略</span><br><span class="line">        username: function() &#123;</span><br><span class="line">            return $(&quot;#username&quot;).val();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">｝</span><br></pre></td></tr></table></figure><h5 id="4-validate练习"><a href="#4-validate练习" class="headerlink" title="4. validate练习"></a>4. validate练习</h5><p>核心代码：            </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="string">"#formId"</span>).validate(&#123;</span><br><span class="line">rules:&#123;</span><br><span class="line"><span class="comment">//1.校验元素的name属性  username:"校验器" 使用单一的校验器</span></span><br><span class="line"><span class="comment">//2.校验元素的name属性  username:&#123;校验器:"值",校验器:"值"&#125;</span></span><br><span class="line">username:<span class="string">"required"</span>,</span><br><span class="line">password:&#123;<span class="attr">required</span>:<span class="literal">true</span>,<span class="attr">digits</span>:<span class="literal">true</span>&#125;,</span><br><span class="line">repassword:&#123;<span class="attr">equalTo</span>:<span class="string">"[name='password']"</span>&#125;,</span><br><span class="line">zxz:&#123;<span class="attr">min</span>:<span class="number">3</span>,<span class="attr">required</span>:<span class="literal">true</span>&#125;,</span><br><span class="line">shuzhiqujian:&#123;<span class="attr">range</span>:[<span class="number">5</span>,<span class="number">10</span>],<span class="attr">required</span>:<span class="literal">true</span>&#125;</span><br><span class="line">&#125;,</span><br><span class="line">messages:&#123;</span><br><span class="line">username:<span class="string">"xxx"</span>,</span><br><span class="line">password:&#123;<span class="attr">required</span>:<span class="string">"req"</span>,<span class="attr">digits</span>:<span class="string">"dddd"</span>&#125;,</span><br><span class="line">zxz:&#123;<span class="attr">min</span>:<span class="string">"最小值应该大于&#123;0&#125;"</span>&#125;,</span><br><span class="line">shuzhiqujian:&#123;<span class="attr">range</span>:<span class="string">"值应该在&#123;0&#125;-&#123;1&#125;之间!"</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>注意：</p><p>单个rules和message的值，可使用“校验器”引起，</p><p>多个rules和message的值，可以使用｛校验器：”值“，。。。。｝</p></blockquote><p>实现步骤：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 导入jquery.js和validate.js，messages_zh.js中文提示</span><br><span class="line"><span class="number">2.</span> 载完成 进行验证username必填</span><br><span class="line"><span class="number">3.</span> 用户名必须设置</span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="string">"#formId"</span>).validate(&#123;</span><br><span class="line">rules:&#123;</span><br><span class="line"><span class="comment">//1.校验元素的name属性  username:"校验器" 使用单一的校验器</span></span><br><span class="line"><span class="comment">//2.校验元素的name属性  username:&#123;校验器:"值",校验器:"值"&#125;</span></span><br><span class="line">username:<span class="string">"required"</span></span><br><span class="line">&#125;,</span><br><span class="line">messages:&#123;&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;)  </span><br><span class="line"></span><br><span class="line"><span class="number">4.</span> messages设置 </span><br><span class="line">name的属性:提示信息</span><br><span class="line">name的属性:&#123;校验器:<span class="string">"xx"</span>,<span class="string">"校验器"</span>:<span class="string">"xxx"</span>&#125;</span><br><span class="line">username:<span class="string">"xxx"</span>,</span><br><span class="line">password:&#123;<span class="attr">required</span>:<span class="string">"req"</span>,<span class="attr">digits</span>:<span class="string">"dddd"</span>&#125;</span><br><span class="line">此处可以导入messages中文提示库!</span><br><span class="line"><span class="number">5.</span>密码须为数字 </span><br><span class="line">password:&#123;<span class="attr">required</span>:<span class="literal">true</span>, <span class="attr">digits</span>:<span class="literal">true</span>&#125;</span><br><span class="line"><span class="number">6.</span>重复密码</span><br><span class="line">equalTo:<span class="string">"#field"</span>  repassword:&#123;<span class="attr">equalTo</span>:<span class="string">"[name='password']"</span>&#125;</span><br><span class="line"><span class="number">7.</span>最小值</span><br><span class="line">min 注意 需要添加必填</span><br><span class="line"><span class="number">8.</span>动态修改提示的值</span><br><span class="line"><span class="number">0</span>是索引!!</span><br><span class="line">zxz:&#123;<span class="attr">min</span>:<span class="string">"最小值应该大于&#123;0&#125;"</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="第二章-bootstrap"><a href="#第二章-bootstrap" class="headerlink" title="第二章 bootstrap"></a>第二章 bootstrap</h4><h5 id="1-bootstrap概述"><a href="#1-bootstrap概述" class="headerlink" title="1. bootstrap概述"></a>1. bootstrap概述</h5><pre><code>bootstrap简介：    bootstrap 是一个用于快速开发 Web 应用程序和网站的前端框架。bootstrap 是基于 HTML、CSS、JAVASCRIPT 的。bootstrap 是由 Twitter 的 Mark Otto 和 Jacob Thornton 开发的。bootstrap 是 2011 年八月在 GitHub 上发布的开源产品。</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">boostrap特点:</span><br><span class="line">1 移动设备优先：自 bootstrap 3 起，框架包含了贯穿于整个库的移动设备优先的样式。</span><br><span class="line">2 所有的主流浏览器都支持 bootstrap(Internet|Explorer|Firefox|Opera|Google|Chrome|Safari)</span><br><span class="line">3 容易上手：只要您具备 HTML 和 CSS 的基础知识，您就可以开始学习 bootstrap。</span><br><span class="line">4 响应式设计（自适应式）：bootstrap 的响应式 CSS 能够自适应于台式机、平板电脑和手机。</span><br><span class="line"></span><br><span class="line">教程：http://www.runoob.com/bootstrap/bootstrap-tutorial.html</span><br></pre></td></tr></table></figure><h5 id="2-案例-响应式的页面"><a href="#2-案例-响应式的页面" class="headerlink" title="2.案例:响应式的页面"></a>2.案例:响应式的页面</h5><pre><code>需求:    创建一套页面!根据上网设备的不同自动调节显示的效果!    m.taobao.com      taobao.com bootstrap的使用步骤：1.下载bootstrap    http://www.bootcss.com/2.导入bootstrap.css文件3.导入jquery.js4.导入bootstrap.js    &lt;!--导入css--&gt;    &lt;link rel=&quot;stylesheet&quot; href=&quot;css/bootstrap.min.css&quot; /&gt;    &lt;!-- 导入jquery--&gt;    &lt;script type=&quot;text/javascript&quot; src=&quot;js/jquery-1.11.0.js&quot; &gt;&lt;/script&gt;    &lt;!--导入css.js --&gt;    &lt;script type=&quot;text/javascript&quot; src=&quot;js/bootstrap.min.js&quot; &gt;&lt;/script&gt; 5.导入支持移动设备,支持缩放,其实是1.0     &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt; 6.将所有的内容放到布局容器中    .container 类用于固定宽度并支持响应式布局的容器。    &lt;div class=&quot;container&quot;&gt;        ...    &lt;/div&gt;    .container-fluid 类用于 100% 宽度，占据全部视口（viewport）的容器。    &lt;div class=&quot;container-fluid&quot;&gt;        ...    &lt;/div&gt;    测试1: 直接写container显示不全     &lt;div class=&quot;container&quot;&gt;              &lt;div style=&quot;border: 1px solid red;&quot;&gt;111111&lt;/div&gt;    &lt;/div&gt;</code></pre><h5 id="3-bootstrap的组成"><a href="#3-bootstrap的组成" class="headerlink" title="3. bootstrap的组成"></a>3. bootstrap的组成</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.全局css的样式 </span><br><span class="line">2.组件</span><br><span class="line">3.js插件</span><br></pre></td></tr></table></figure><h5 id="4-栅格系统"><a href="#4-栅格系统" class="headerlink" title="4. 栅格系统"></a>4. 栅格系统</h5><p> <strong>什么是栅格系统</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Bootstrap 提供了一套响应式、移动设备优先的流式网格系统，随着屏幕或视口（viewport）尺寸的增加，系统会自动分为最多12列。</span><br><span class="line"></span><br><span class="line">注意:  Bootstrap将每一行分成12份!</span><br></pre></td></tr></table></figure><p>Bootstrap 提供了一套响应式、移动设备优先的流式栅格系统，随着屏幕或视口（viewport）尺寸的增加，系统会自动分为最多12列。它包含了易于使用的预定义类，还有强大的mixin 用于生成更具语义的布局。<br>栅格系统用于通过一系列的行（row）与列（column）的组合来创建页面布局，你的内容就可以放入这些创建好的布局中。</p><p>下面就介绍一下 Bootstrap 栅格系统的工作原理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.“行（row）”必须包含在 “.container” （表示固定宽度的容器）或 “.container-fluid ”（100% 宽度的容器）中，以便为其赋予合适的排列（aligment）和内补（padding）。</span><br><span class="line">2.通过“行（row）”在水平方向创建一组“列（column）”。你的内容应当放置于“列（column）”内，并且，只有“列（column）”可以作为行（row）”的直接子元素。</span><br><span class="line">3.类似 “.row” 和 “.col-xs-4” 这种预定义的类，可以用来快速创建栅格布局。Bootstrap 源码中定义的 mixin 也可以用来创建语义化的布局。</span><br><span class="line">4.通过为“列（column）”设置 padding 属性，从而创建列与列之间的间隔（gutter）。通过为 “.row” 元素设置负值margin从而抵消掉为“.container”元素设置的padding，也就间接为“行（row）”所包含的“列（column）”抵消掉了padding。</span><br></pre></td></tr></table></figure><p>负值的 margin就是下面的示例为什么是向外突出的原因。在栅格列中的内容排成一行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">栅格系统中的列是通过指定1到12的值来表示其跨越的范围.</span><br><span class="line">例如，三个等宽的列可以使用三个“.col-xs-4”来创建。</span><br><span class="line">如果一“行（row）”中包含了的“列（column）”大于 12，多余的“列（column）”所在的元素将被作为一个整体另起一行排列。</span><br><span class="line">栅格类适用于与屏幕宽度大于或等于分界点大小的设备，并且针对小屏幕设备覆盖栅格类。 因此，在元素上应用任何 “.col-md-*”栅格类适用于与屏幕宽度大于或等于分界点大小的设备，并且针对小屏幕设备覆盖栅格类。 因此，在元素上应用任何 “.col-lg-*”</span><br></pre></td></tr></table></figure><p> <strong>媒体查询功能</strong></p><pre><code>判断是什么上网设备：1.小屏幕（平板，大于等于 768px） @media (min-width: @screen-sm-min) { ... }2.中等屏幕（桌面显示器，大于等于 992px）@media (min-width: @screen-md-min) { ... }3.大屏幕（大桌面显示器，大于等于 1200px）@media (min-width: @screen-lg-min) { ... }  大屏幕 大于1200      col-lg-2 中屏幕 大于992&lt;1200  col-md-3小屏幕 大于768&lt;922   col-sm-6最小屏 小于768       col-xs-12</code></pre><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">超小屏幕    手机 (&lt;768px) </span><br><span class="line">小屏幕      平板 (≥768px) </span><br><span class="line">中等屏幕    桌面显示器 (≥992px) </span><br><span class="line">大屏幕      大桌面显示器 (≥1200px)</span><br><span class="line"></span><br><span class="line">栅格系统行为：总是水平排列，开始是堆叠在一起的，当大于这些阈值时将变为水平排列</span><br></pre></td></tr></table></figure><p>练习: 栅格 </p><p>大屏显示6个， 中屏显示4个 ，小屏显示 2  ，最小屏显示 1一个</p><pre><code>可以class中拼接多个列数限制&lt;div class=&quot;col-lg-6 col-md-4 col-sm-2 col-xs-1&quot; style=&quot;border: 1px solid red;&quot;&gt;    测试大中小屏幕div占据的宽度&lt;/div&gt;</code></pre><h5 id="5-排版"><a href="#5-排版" class="headerlink" title="5. 排版"></a>5. 排版</h5><p><strong>5.1标题</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HTML 中的所有标题标签，&lt;h1&gt; 到 &lt;h6&gt; 均可使用。</span><br><span class="line">另外，还提供了&quot;.h1&quot;到 &quot;.h6&quot; 类，为的是给内联（inline）属性的文本赋予标题的样式。</span><br></pre></td></tr></table></figure><p>如：</p><pre><code>&lt;h1&gt;我是h1&lt;/h1&gt;&lt;!-- 要写成行内块--&gt;&lt;span class=&quot;h1&quot;&gt;我是h1&lt;/span&gt;我是跟随者</code></pre><p><strong>5.2 mark标签(高亮标签)和DEL标签（中划线标签）</strong></p><pre><code>mark标签：&lt;mark style=&quot;border: 1px solid red;&quot;&gt;mark&lt;/mark&gt;&lt;br/&gt;del标签:&lt;del style=&quot;border: 1px solid red;&quot;&gt;del&lt;/del&gt;</code></pre><p> <strong>5.3 对齐</strong></p><p> 通过文本对齐类，可以简单方便的将文字重新对齐。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-left"</span>&gt;</span>Left aligned text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-center"</span>&gt;</span>Center aligned text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-right"</span>&gt;</span>Right aligned text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-justify"</span>&gt;</span>该段落会根据屏幕的大小对超出屏幕的文字进行换行<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-nowrap"</span>&gt;</span>该段落不会根据屏幕的大小对超出屏幕的文字进行换行。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p> <strong>5.4表格</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.table:  表格只显示横线</span><br><span class="line">.table-striped:表格隔行变色</span><br><span class="line">.table-hover:悬浮变色</span><br><span class="line">.table-condensed:让表格变的紧凑</span><br><span class="line">.table-bordered:给表格的单元格添加边框</span><br></pre></td></tr></table></figure><pre><code>//表示100%宽度&lt;div class=&quot;container-fluid&quot;&gt;    &lt;h2&gt;表格&lt;/h2&gt;    &lt;table class=&quot;table-hover table table-bordered table-striped&quot;&gt;                &lt;thead&gt;                    &lt;tr&gt;&lt;th&gt;序号&lt;/th&gt;&lt;th&gt;姓名&lt;/th&gt;&lt;/tr&gt;                &lt;/thead&gt;                &lt;tbody&gt;                    &lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;张三&lt;/td&gt;&lt;/tr&gt;                    &lt;tr&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;李四&lt;/td&gt;&lt;/tr&gt;                    &lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;王五&lt;/td&gt;&lt;/tr&gt;                &lt;/tbody&gt;    &lt;/table&gt;&lt;/div&gt;</code></pre><p> <strong>5.5 行状态</strong></p><p>通过这些状态类可以为行或单元格设置颜色</p><p>==注意：只作用在行或单元格上，用以设置其颜色==</p><pre><code>.active：鼠标悬停在行或单元格上时所设置的颜色.success：标识成功或积极的动作.info：标识普通的提示信息或动作.warning：标识警告或需要用户注意.danger：标识危险或潜在的带来负面影响的动作</code></pre><p> <strong>5.6 表单</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">元素都将被默认设置宽度属性为 width: 100%;</span><br><span class="line"></span><br><span class="line">注意： 将label元素和前面提到的控件包裹在 “.form-group” 中可以获得最好的排列。</span><br></pre></td></tr></table></figure><p> <strong>5.7 基本实例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">把标签和控件放在一个带有 class=“form-group” 的 &lt;div&gt; 中，能获得最佳间距。</span><br><span class="line">且会将label和input上下排列。</span><br></pre></td></tr></table></figure><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;form&gt;</span><br><span class="line">&lt;!--会将label和input上下排列--&gt;</span><br><span class="line">&lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">&lt;label for=&quot;Email&quot;&gt;Email&lt;/label&gt;</span><br><span class="line">&lt;input type=&quot;email&quot;  id=&quot;Email&quot; placeholder=&quot;Email&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">单独的表单控件会被自动赋予一些全局样式。所有设置了&quot;.form-control&quot;类的 input、textarea 和select都会适配该全局样式</span><br><span class="line">达到的效果如下：</span><br><span class="line">&quot;.form-control&quot;会自动将input填充满屏幕,并添加点击高亮效果</span><br></pre></td></tr></table></figure><p>如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>普通表单<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--把所有表单控件放在该form-group的div中，会有良好的布局,label和input会上下排列--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--input等元素 使用form-control,会把表单拉伸到最宽，且会获得点击高亮效果--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"email"</span>&gt;</span>email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">id</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"username"</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"form-control"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"password"</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">id</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"form-control"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"file"</span>&gt;</span>文件上传<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">id</span>=<span class="string">"file"</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"form-control"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span>Example block-level help text here.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>爱好<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">音乐<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"love"</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">电影<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"love"</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>5.8内联表单</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">为form标签添加&quot;.form-inline&quot; 时可使其内容左对齐并且表现为 inline-block 级别的控件。</span><br><span class="line">注意：只适用于视口（viewport）至少&gt;= 768px 宽度时（视口宽度再小的话就会使表单折叠）。</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>内联式表单<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">class</span>=<span class="string">"form-inline"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"username"</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>5.9 水平表单</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">通过为表单form添加&quot;.form-horizontal&quot;类，并联合使用 Bootstrap 预置的栅格类，</span><br><span class="line">可以将 label 标签和控件组水平并排布局。这样做将改变 &quot;.form-group&quot;的行为，</span><br><span class="line">使其表现为栅格系统中的行（row），因此就无需再额外添加 .row 了。</span><br><span class="line"></span><br><span class="line">注意：lable和div都联合栅格一起使用</span><br></pre></td></tr></table></figure><p>实现步骤：</p><ul><li>向 <form> 元素添加 “ .form-horizontal”</form></li><li>把标签和控件放在一个带有 “ .form-group” 的 <div> 中。</div></li><li>向label标签添加 “ .control-label”</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>水平表单<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--这里将会把label和div水平排列，本来form-group会把它们上下排列。水平排列的时候可以使用栅格--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--如：这里label占据2个栅格，div占据10个栅格--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"username"</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"form-control"</span></span></span><br><span class="line"><span class="tag"><span class="attr">placeholder</span>=<span class="string">"请输入姓名"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"password"</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span> &gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">id</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"form-control"</span></span></span><br><span class="line"><span class="tag"><span class="attr">placeholder</span>=<span class="string">"请输入密码"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--col-sm-offset-2 表示偏移2栅格--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-offset-2 col-sm-10"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>案例: 显示带引导的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--水平表单--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-inline"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--表单组，让内部控件上下排列--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--不显式label标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"sr-only"</span> <span class="attr">for</span>=<span class="string">"Amount"</span>&gt;</span>价格<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--input组，配合input-group-*,可以把其内标签看成input标签的一部份--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span> <span class="attr">style</span>=<span class="string">"border: 1px red solid"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span>$<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"Amount"</span> <span class="attr">placeholder</span>=<span class="string">"Amount"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span>.00<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>5.10单选框和多选框checkbox-inline</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过将 &quot;.checkbox-inline&quot; 或 &quot;.radio-inline”类应用到一系列的多选框（checkbox）或单选框（radio）控件上，可以使这些控件排列在一行</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--水平表单--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-inline"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"checkbox-inline"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"aaa"</span> <span class="attr">value</span>=<span class="string">"option1"</span>&gt;</span> 1</span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"checkbox-inline"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"aaa"</span> <span class="attr">value</span>=<span class="string">"option2"</span>&gt;</span> 2</span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"checkbox-inline"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"aaa"</span> <span class="attr">value</span>=<span class="string">"option3"</span>&gt;</span> 3</span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                   </span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span>  <span class="attr">name</span>=<span class="string">"bbb"</span> <span class="attr">value</span>=<span class="string">"option1"</span>&gt;</span> 1</span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span>  <span class="attr">name</span>=<span class="string">"bbb"</span> <span class="attr">value</span>=<span class="string">"option2"</span>&gt;</span> 2</span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span>  <span class="attr">name</span>=<span class="string">"bbb"</span> <span class="attr">value</span>=<span class="string">"option3"</span>&gt;</span> 3</span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>5.11下拉列表</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--水平表单--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-inline"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--下拉列表--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>5<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--平铺列表--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">multiple</span>=<span class="string">"multiple"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>5<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>5.12静态控件form-control-static</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>Email：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"form-control-static"</span>&gt;</span>email@example.com<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"pw"</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>  <span class="attr">id</span>=<span class="string">"pw&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;/form&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;/div&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>5.13校验状态</strong></p><pre><code>Bootstrap 对表单控件的校验状态，如 error、warning 和 success 状态，都定义了样式。使用时，添加 &quot;.has-warning&quot;&quot;.has-error&quot; 或 &quot;.has-success&quot;类到这些控件的父元素即可。任何包含在此元素之内的 &quot;.control-label&quot;&quot;.form-control&quot; 和 &quot;.help-block&quot;元素都将接受这些校验状态的样式。</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group has-success"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"control-label"</span> &gt;</span>Input with success<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span>A block of help text that breaks onto a new line and may extend beyond one line.<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group has-warning"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"control-label"</span>&gt;</span>Input with warning<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group has-error"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"control-label"</span>&gt;</span>Input with error<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"has-success"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>  <span class="attr">value</span>=<span class="string">"option1"</span>&gt;</span></span><br><span class="line">  Checkbox with success</span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"has-warning"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"option2"</span>&gt;</span></span><br><span class="line">  Checkbox with warning</span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"has-error"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>  <span class="attr">value</span>=<span class="string">"option3"</span>&gt;</span></span><br><span class="line">  Checkbox with error</span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>5.14按钮</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;.btn&quot; 将任何东西变成按钮,需要配合 &quot;.btn-default&quot; </span><br><span class="line">a标签也可以变成按钮式样</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--1.按钮颜色--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>（默认样式）Default<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>（首选项）Primary<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span>&gt;</span>（成功）Success<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-info"</span>&gt;</span>（一般信息）Info<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-warning"</span>&gt;</span>（警告）Warning<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>（危险）Danger<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-link"</span>&gt;</span>（链接）Link<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--2.按钮组btn-group,即radio上应用按钮的样式，data-toggle去除单选框标志--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span> <span class="attr">data-toggle</span>=<span class="string">"buttons"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"opt"</span>&gt;</span> 选项 1</span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"opt"</span>&gt;</span> 选项 2</span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"opt"</span>&gt;</span> 选项 3</span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>5.15尺寸</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">需要让按钮具有不同尺寸吗？</span><br><span class="line">使用 “.btn-lg”“.btn-sm” 或 “.btn-xs” 就可以获得不同尺寸的按钮</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid "</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button "</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-lg "</span>&gt;</span>大按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button "</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-lg "</span>&gt;</span>大按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button "</span> <span class="attr">class</span>=<span class="string">"btn btn-primary "</span>&gt;</span>默认尺寸<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button "</span> <span class="attr">class</span>=<span class="string">"btn btn-default "</span>&gt;</span>默认尺寸<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button "</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-sm "</span>&gt;</span>小按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button "</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-sm "</span>&gt;</span>小按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button "</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-xs "</span>&gt;</span>超小尺寸<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button "</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-xs "</span>&gt;</span>超小尺寸<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>5.16图片形状</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">响应式图片!随着窗体大小改变大小</span><br><span class="line">&lt;img src=&quot;&quot; class=&quot;img-responsive&quot;&gt;</span><br></pre></td></tr></table></figure><p>  通过为 <img> 元素添加以下相应的类，可以让图片呈现不同的形状。</p><pre><code>&lt;img src=&quot;...&quot; alt=&quot;...&quot; class=&quot;img-rounded&quot;&gt;&lt;img src=&quot;...&quot; alt=&quot;...&quot; class=&quot;img-circle&quot;&gt;&lt;img src=&quot;...&quot; alt=&quot;...&quot; class=&quot;img-thumbnail&quot;&gt;</code></pre><p><strong>5.17辅助类</strong></p><pre><code>一.情境文本颜色通过颜色来展示意图，Bootstrap 提供了一组工具类。这些类可以应用于链接，并且在鼠标经过时颜色可以加深，就像默认的链接一样。</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid "</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-muted "</span>&gt;</span>text-muted...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-primary "</span>&gt;</span>text-primary...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-success "</span>&gt;</span>text-success...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-info "</span>&gt;</span>text-info...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-warning "</span>&gt;</span>text-warning...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-danger "</span>&gt;</span>text-danger...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><pre><code>二.情境背景色           和情境文本颜色类一样，使用任意情境背景色类就可以设置元素的背景。链接组件在鼠标经过时颜色会加深，就像上面所讲的情境文本颜色类一样。    </code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid "</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-primary"</span>&gt;</span>bg-primary...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-success"</span>&gt;</span>bg-success...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-info"</span>&gt;</span>bg-info...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-warning"</span>&gt;</span>bg-warning...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-danger"</span>&gt;</span>bg-danger...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>5.18浮动</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--左浮动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pull-left bg-primary"</span>&gt;</span>div1...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--右浮动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pull-right bg-danger"</span>&gt;</span>div2...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>5.19 可见类</strong></p><pre><code>              &lt;768px   ≥768px   ≥992px   ≥1200px.visible-xs-*     可见       隐藏       隐藏      隐藏.visible-sm-*     隐藏       可见       隐藏      隐藏.visible-md-*     隐藏       隐藏       可见      隐藏.visible-lg-*     隐藏       隐藏       隐藏      可见.hidden-xs         隐藏       可见       可见      可见.hidden-sm         可见       隐藏       可见      可见.hidden-md      可见       可见       隐藏      可见.hidden-lg         可见       可见       可见      隐藏</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container-fluid&quot;&gt;</span><br><span class="line">&lt;div class=&quot;visible-xs-block bg-primary&quot;&gt;</span><br><span class="line">div1</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;visible-sm-block bg-success&quot;&gt;</span><br><span class="line">div2</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;visible-md-block bg-warning&quot;&gt;</span><br><span class="line">div3</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;visible-lg-block bg-danger&quot;&gt;</span><br><span class="line">div4</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h5 id="6-组件"><a href="#6-组件" class="headerlink" title="6. 组件"></a>6. 组件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无数可复用的组件，包括字体图标、下拉菜单、导航、警告框、弹出框等更多功能</span><br></pre></td></tr></table></figure><p><strong>6.1 Glyphicons 字体图标</strong></p><pre><code>&lt;div class=&quot;container-fluid&quot;&gt;        &lt;button type=&quot;button&quot; class=&quot;btn btn-default btn-lg&quot;&gt;            &lt;span class=&quot;glyphicon glyphicon-save-file&quot;&gt;&lt;/span&gt;        &lt;/button&gt;        &lt;button type=&quot;button&quot; class=&quot;btn btn-default btn-lg&quot;&gt;            &lt;span class=&quot;glyphicon glyphicon-user&quot;&gt;&lt;/span&gt; User        &lt;/button&gt;&lt;/div&gt;</code></pre><p><strong>6.2下拉菜单</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn dropdown-toggle"</span> <span class="attr">id</span>=<span class="string">"dropdownMenu1"</span> <span class="attr">data-</span><span class="attr">toggle</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line">主题</span><br><span class="line"><span class="comment">&lt;!--caret向下小箭头--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span> <span class="attr">role</span>=<span class="string">"menu"</span> <span class="attr">aria-labelledby</span>=<span class="string">"dropdownMenu1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"# "</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"# "</span>&gt;</span>Another action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"# "</span>&gt;</span>Something else here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--divider分隔线--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"separator"</span> <span class="attr">class</span>=<span class="string">"divider"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"# "</span>&gt;</span>Separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>6.3按钮组</strong></p><p>把一系列的“.btn”按钮放入“.btn-group”。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--btn-group 内部嵌套 btn--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>按钮 1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>按钮 2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>按钮 3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>6.4 toolbar 按钮工具栏</strong></p><pre><code>把一组 &lt;div class=&quot;btn-group&quot;&gt; 放进一个 &lt;div class=&quot;btn-toolbar&quot;&gt; 中就可以做成更复杂的组件</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-toolbar"</span> <span class="attr">role</span>=<span class="string">"toolbar"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span> <span class="attr">role</span>=<span class="string">"group"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span> <span class="attr">role</span>=<span class="string">"group"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span> <span class="attr">role</span>=<span class="string">"group"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container-fluid&quot;&gt;</span><br><span class="line">&lt;div class=&quot;btn-toolbar&quot; role=&quot;toolbar&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;btn-group&quot; role=&quot;group&quot;&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot;&gt;按钮 1&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot;&gt;按钮 2&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot;&gt;按钮 3&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;btn-group&quot; role=&quot;group&quot;&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot;&gt;按钮 4&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot;&gt;按钮 5&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot;&gt;按钮 6&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;btn-group&quot; role=&quot;group&quot;&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot;&gt;按钮 7&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot;&gt;按钮 8&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot;&gt;按钮 9&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><strong>6.5 尺寸</strong></p><p>只要给“ .btn-group” 加上 “.btn-group-* ”类，就省去为按钮组中的每个按钮都赋予尺寸类了，如果包含了多个按钮组时也适用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--大尺寸按钮组--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group btn-group-lg"</span> <span class="attr">role</span>=<span class="string">"group"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--标准尺寸按钮组--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span> <span class="attr">role</span>=<span class="string">"group"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--小尺寸按钮组--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group btn-group-sm"</span> <span class="attr">role</span>=<span class="string">"group"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--超小尺寸按钮组--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group btn-group-xs"</span> <span class="attr">role</span>=<span class="string">"group"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>6.6 带分割线的下拉框</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"show"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-danger dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--下拉箭头--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"ul"</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Action2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Action3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">             <span class="comment">&lt;!--分隔线--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"separator"</span> <span class="attr">class</span>=<span class="string">"divider"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Action4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>6.7标签式导航栏</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-tabs"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--active默认显示的tab--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>Profile<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>Messages<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myTabContent"</span> <span class="attr">class</span>=<span class="string">"tab-content"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--可以使用JS控制in active表示默认显示页,与li相联系起来--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane fade in active"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Html5最近比较火<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane fade"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>java是高级语言，是最好的语言<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane fade"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>android是最受大众欢迎的智能机品牌<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>6.8胶囊导航</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-pills"</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--data-toggle="tab"导航条自带响应效果 缩小显示成手机效果--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#h5"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>HTML5<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#java"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>JAVAEE<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#android"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>ANDROID<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myTabContent"</span> <span class="attr">class</span>=<span class="string">"tab-content"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane fade in active"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Html5最近比较火<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane fade"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>java是高级语言，是最好的语言<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane fade"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>android是最受大众欢迎的智能机品牌<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>6.9 导航条</strong></p><pre><code>data-toggle=&quot;tab&quot; 导航条自带响应效果 缩小显示成手机效果  &lt;li role=&quot;presentation&quot; class=&quot;active&quot;&gt;&lt;a href=&quot;#&quot; data-toggle=&quot;tab&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;</code></pre><p><strong>6.10路径导航 面包屑导航</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">"breadcrumb"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>2013<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span>十一月<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>6.11标签</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label label-default"</span>&gt;</span>Default<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label label-primary"</span>&gt;</span>Primary<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label label-success"</span>&gt;</span>Success<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label label-info"</span>&gt;</span>Info<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label label-warning"</span>&gt;</span>Warning<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span>&gt;</span>Danger<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>6.12徽章badge 提示消息数</strong></p><pre><code>&lt;div class=&quot;container-fluid&quot;&gt;        &lt;a href=&quot;#&quot;&gt;Inbox &lt;span class=&quot;badge&quot;&gt;42&lt;/span&gt;&lt;/a&gt;        &lt;button class=&quot;btn btn-primary&quot; type=&quot;button&quot;&gt;              Messages &lt;span class=&quot;badge&quot;&gt;4&lt;/span&gt;        &lt;/button&gt;&lt;/div&gt;</code></pre><p><strong>6.13巨幕jumbotron</strong></p><pre><code>&lt;div class=&quot;container-fluid&quot;&gt;    &lt;div class=&quot;jumbotron&quot;&gt;        &lt;h1&gt;Hello, world!&lt;/h1&gt;            &lt;p&gt;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/p&gt;            &lt;p&gt;&lt;a class=&quot;btn btn-primary btn-lg&quot; href=&quot;#&quot; role=&quot;button&quot;&gt;Learn more&lt;/a&gt;&lt;/p&gt;    &lt;/div&gt;&lt;/div&gt;</code></pre><p><strong>6.14缩略图thumbnail</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span> <span class="attr">style</span>=<span class="string">"margin-top: 30px;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"thumbnail"</span>&gt;</span> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/6.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">img</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"caption"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>HTML入门<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>html是最好的静态网页语言<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>6.15 进度条</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"progressbar"</span> <span class="attr">class</span>=<span class="string">"progress-bar progress-bar-success"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">role</span>=<span class="string">"progressbar"</span> <span class="attr">style</span>=<span class="string">"width: 50%;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>90% 完成（成功）<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>6.16 well</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"well well-lg"</span>&gt;</span>您好，我在大的 Well 中！<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"well well-sm"</span>&gt;</span>您好，我在小的 Well 中！<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="7-jQuery插件"><a href="#7-jQuery插件" class="headerlink" title="7. jQuery插件"></a>7. jQuery插件</h5><p>==aria-labelledby属性==</p><pre><code>当想要的标签文本已在其他元素中存在时，可以使用aria-labelledby=&quot;所读取的标签的id&quot;，如下：当ul获取到焦点时，屏幕阅读器是会读：“选择您的职位”但是如果我们没有给输入框设置label时，当其获得焦点时，屏幕阅读器会读出aria-label属性的值，aria-label不会在视觉上呈现效果。HTML5针对html的标签增加的属性：role 和 aria-*。role的作用是描述一个非标准的tag的实际作用。比如用div做button，那么设置div 的 role=“button”，辅助工具就可以认出这实际上是个button。</code></pre><p>​<br>    而aria-*的作用就是描述这个tag在可视化的情境中的具体信息。比如，<br>    <div role="checkbox" aria-checked="checked"></div><br>    辅助工具就会知道，这个div实际上是个checkbox的角色，为选中状态。</p><pre><code>Add ARIA for screen readersARIA attributes provides semantic information to screen readers that is normally conveyed visually.Note that using ARIA does not automatically implement the standard widget behavior, you&apos;ll still need to add focus management and keyboard navigation yourself.</code></pre><p><strong>7.1弹出框</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">title</span>=<span class="string">"弹出的标题"</span>  </span></span><br><span class="line"><span class="tag"><span class="attr">data-container</span>=<span class="string">"body"</span> <span class="attr">data-toggle</span>=<span class="string">"popover"</span> <span class="attr">data-placement</span>=<span class="string">"top"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">data-content</span>=<span class="string">"弹出框中主要的内容"</span> <span class="attr">id</span>=<span class="string">"pop"</span>&gt;</span></span><br><span class="line">上面弹出</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">//脚本支持</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">$(<span class="string">"#pop"</span>).popover();</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>7.2提示框</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container-fluid&quot;&gt;</span><br><span class="line">1.这是一个 &lt;a href=&quot;#&quot;  data-toggle=&quot;tooltip&quot; title=&quot;默认的 Tooltip&quot;&gt;默认的 Tooltip&lt;/a&gt;</span><br><span class="line">2.这是一个 &lt;a href=&quot;#&quot;  data-toggle=&quot;tooltip&quot; data-placement=&quot;left&quot; title=&quot;左侧的 Tooltip&quot;&gt;左侧的 Tooltip&lt;/a&gt;</span><br><span class="line">3.这是一个 &lt;a href=&quot;#&quot; data-toggle=&quot;tooltip&quot; data-placement=&quot;top&quot; title=&quot;顶部的 Tooltip&quot;&gt;顶部的 Tooltip&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">//脚本支持</span><br><span class="line">&lt;script&gt;</span><br><span class="line">$(function () &#123; </span><br><span class="line"></span><br><span class="line">$(&quot;[data-toggle=&apos;tooltip&apos;]&quot;).tooltip(); </span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>7.3轮播图</strong></p><p>默认五秒自动轮播</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">注意：需要几张图片，就需要几个 li。</span></span><br><span class="line"><span class="comment"> 还需要几个class=”item“的div</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myCarousel"</span> <span class="attr">class</span>=<span class="string">"carousel slide"</span> <span class="attr">style</span>=<span class="string">"width: 200px; height: 260px;"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 轮播（Carousel）圆圈--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">"carousel-indicators"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#myCarousel"</span> <span class="attr">data-slide-to</span>=<span class="string">"0"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#myCarousel"</span> <span class="attr">data-slide-to</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#myCarousel"</span> <span class="attr">data-slide-to</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span>   </span><br><span class="line"><span class="comment">&lt;!-- 轮播（Carousel）图片 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-inner"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item active"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/1.jpg"</span> <span class="attr">width</span>=<span class="string">"200px"</span> <span class="attr">height</span>=<span class="string">"260px"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/2.jpg"</span> <span class="attr">width</span>=<span class="string">"200px"</span> <span class="attr">height</span>=<span class="string">"260px"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/3.jpg"</span> <span class="attr">width</span>=<span class="string">"200px"</span> <span class="attr">height</span>=<span class="string">"260px"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">$(<span class="string">"#myCarousel"</span>).carousel(&#123;<span class="attr">interval</span>: <span class="number">2000</span>&#125;)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="作业题"><a href="#作业题" class="headerlink" title="作业题"></a>作业题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1、基于BootStrap实现一个统一的后台管理系统页面</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Validate和Bootstrap&quot;&gt;&lt;a href=&quot;#Validate和Bootstrap&quot; class=&quot;headerlink&quot; title=&quot;Validate和Bootstrap&quot;&gt;&lt;/a&gt;Validate和Bootstrap&lt;/h3&gt;&lt;h4 id=&quot;今
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://kongxianghe.top/2018/10/23/01%20%E4%BD%BF%E7%94%A8Intellij%20IDEA/"/>
    <id>http://kongxianghe.top/2018/10/23/01 使用Intellij IDEA/</id>
    <published>2018-10-23T14:05:50.750Z</published>
    <updated>2018-07-09T06:15:51.888Z</updated>
    
    <content type="html"><![CDATA[<h1 id="IDEA简介"><a href="#IDEA简介" class="headerlink" title="IDEA简介"></a>IDEA简介</h1><h2 id="第一个IDEA应用程序"><a href="#第一个IDEA应用程序" class="headerlink" title="第一个IDEA应用程序"></a>第一个IDEA应用程序</h2><p><img src="https://note.youdao.com/yws/public/resource/0225f7d5e722b36fd29e4dd693adab79/xmlnote/03F4C1A105DF4050B16CBD19B517A2B0/1405" alt=""></p><ul><li>第一章<ul><li>第一节</li><li>第二节</li><li>第三节</li></ul></li><li>第二章<ul><li>第一节</li><li>第二节</li><li>第三节<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiang.hello.idea;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.printf(<span class="string">"hello idea!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>intellij idea<br>maven</p><h4 id="maven的一些配置"><a href="#maven的一些配置" class="headerlink" title="maven的一些配置"></a>maven的一些配置</h4><p>环境变量:同jdk的配置<br>在xml中配置jar包,idea自动下载 使用时记得将默认jar包配置更改一下路径</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;IDEA简介&quot;&gt;&lt;a href=&quot;#IDEA简介&quot; class=&quot;headerlink&quot; title=&quot;IDEA简介&quot;&gt;&lt;/a&gt;IDEA简介&lt;/h1&gt;&lt;h2 id=&quot;第一个IDEA应用程序&quot;&gt;&lt;a href=&quot;#第一个IDEA应用程序&quot; class=&quot;header
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://kongxianghe.top/2018/10/23/03%E4%B8%89%E5%B1%82%E6%9E%84%E6%9E%B6+MVC/"/>
    <id>http://kongxianghe.top/2018/10/23/03三层构架+MVC/</id>
    <published>2018-10-23T14:05:50.746Z</published>
    <updated>2018-07-09T06:15:52.502Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是三层构架"><a href="#什么是三层构架" class="headerlink" title="什么是三层构架"></a>什么是三层构架</h3><h3 id="什么是MVC模式"><a href="#什么是MVC模式" class="headerlink" title="什么是MVC模式"></a>什么是MVC模式</h3><ul><li><h4 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h4><p>配置时在maven projects中点+</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;</span><br><span class="line">         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;com.xiang&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;login-demo&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;packaging&gt;war&lt;/packaging&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;4.0.1&lt;/version&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure></li><li><h4 id="web-xml"><a href="#web-xml" class="headerlink" title="web.xml"></a>web.xml</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;web-app xmlns=&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span><br><span class="line">         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span><br><span class="line">         version=&quot;3.1&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;servlet&gt;</span><br><span class="line">        &lt;servlet-name&gt;logindemo&lt;/servlet-name&gt;</span><br><span class="line">        &lt;servlet-class&gt;com.xiang.login.demo.web.controller.LoginController&lt;/servlet-class&gt;</span><br><span class="line">    &lt;/servlet&gt;</span><br><span class="line">    &lt;servlet-mapping&gt;</span><br><span class="line">        &lt;servlet-name&gt;logindemo&lt;/servlet-name&gt;</span><br><span class="line">        &lt;url-pattern&gt;/login&lt;/url-pattern&gt;</span><br><span class="line">    &lt;/servlet-mapping&gt;</span><br><span class="line">&lt;/web-app&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;什么是三层构架&quot;&gt;&lt;a href=&quot;#什么是三层构架&quot; class=&quot;headerlink&quot; title=&quot;什么是三层构架&quot;&gt;&lt;/a&gt;什么是三层构架&lt;/h3&gt;&lt;h3 id=&quot;什么是MVC模式&quot;&gt;&lt;a href=&quot;#什么是MVC模式&quot; class=&quot;headerli
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://kongxianghe.top/2018/10/23/04bootstrap/"/>
    <id>http://kongxianghe.top/2018/10/23/04bootstrap/</id>
    <published>2018-10-23T14:05:50.735Z</published>
    <updated>2018-07-09T06:15:51.611Z</updated>
    
    <content type="html"><![CDATA[<h3 id="BootStrap"><a href="#BootStrap" class="headerlink" title="BootStrap"></a>BootStrap</h3><ul><li>简单的框架 一天以内上手</li><li>复杂的三天上手</li></ul><h5 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h5><ul><li>指数(百度指数)</li><li>社区活跃度 (Github)</li><li>是否开源</li></ul><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><ul><li>assets<ul><li>plugins<ul><li>bootstrap</li></ul></li><li>css</li><li>images</li><li>js</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;BootStrap&quot;&gt;&lt;a href=&quot;#BootStrap&quot; class=&quot;headerlink&quot; title=&quot;BootStrap&quot;&gt;&lt;/a&gt;BootStrap&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;简单的框架 一天以内上手&lt;/li&gt;
&lt;li&gt;复杂的三天上手&lt;/li&gt;
&lt;
      
    
    </summary>
    
    
  </entry>
  
</feed>
